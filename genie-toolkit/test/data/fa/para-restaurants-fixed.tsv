1	can you find a place that has the maximum rating , serves QUOTED_STRING_0 cuisine , and that has a summary titled QUOTED_STRING_1 ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2	text me the address of the restaurants with the fewest review count .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3	what 's the location of restaurants close by that offer QUOTED_STRING_0 cuisine ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4	show me the review of restaurants with less than NUMBER_0 reviews and have QUOTED_STRING_0 in the description .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5	find me the zip code of a restaurant from LOCATION_0 city	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
6	get the country of restaurants with rating equal to NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
7	how near is the restaurant with QUOTED_STRING_0 as postal code with the tiniest number of reviews to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
8	how far are the nearest restaurant with NUMBER_0 evaluations in distiction to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
9	name the restaurants with a PHONE_NUMBER_0 phone number that serve QUOTED_STRING_0 dishes .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
10	show me QUOTED_STRING_0 restaurants with a few ratings that are only NUMBER_0 star quality or lower .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
11	tell me the country of the restaurants with under NUMBER_0 reviews .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
12	i would like to see the author who has more than NUMBER_0 reviews and whose name is equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
13	i need to know what the review count is of the restaurants with QUOTED_STRING_0 in their description with the least descriptions .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
14	which restaurant has the fewest reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
15	i 'd like to know the street address of restaurants at work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
16	what 's the distance from here to a restaurant with a less than 1 rating ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) => notify
17	i 'm interested in the description of restaurants that are the nearest to home that have a review count of less than NUMBER_0	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
18	give me every restaurant having a rating of at least NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
19	show review having a summary being QUOTED_STRING_0 and author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 gets the smallest rating ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
20	whats the country of restaurants in GENERIC_ENTITY_tt:country_0 in ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
21	tell me what the restaurant town has at least NUMBER_0 ratings	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
22	what is the description of the nearest restaurants with rating fewer than NUMBER_0 to work ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
23	can you tell me the restaurant with a phone number of PHONE_NUMBER_0 that has the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
24	say what is the image of the farthest away restaurant with more review count than NUMBER_0 from home	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
25	tell me what restaurants have a rating of NUMBER_0 or higher and that have QUOTED_STRING_0 cuisine and the highest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
26	what 's the image of restaurant with number of evaluations less than NUMBER_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
27	look for a GENERIC_ENTITY_tt:country_0 restaurant with a review count of greater than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
28	look for restaurants rated NUMBER_0 stars with a postal code equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
29	grab the rating of restaurant having no reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
30	which restaurants have food type being QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
31	how are restaurants with a location equaling work described ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
32	how many total restaurants with zip code being QUOTED_STRING_0 are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
33	grab the restaurant with at least NUMBER_0 reviews which is closest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
34	tell me the street address of restaurants that are called QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
35	tell me the restaurants with a review count under NUMBER_0 that have the largest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
36	show the rating of the restaurants with lower rating than NUMBER_0 with the most reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
37	what is the price range of the dining business having QUOTED_STRING_0 in the description closest to here	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
38	get the restaurants having descriptions containing QUOTED_STRING_0 that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
39	how far from work are restaurants in the city of LOCATION_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
40	how close to me are the most far away restaurants having smaller than NUMBER_0 reviews to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
41	i 'd like to know what the zip code of restaurants is that has less than 1 review .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
42	what 's the description of the farthest restaurant with QUOTED_STRING_0 in the description	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
43	show me restaurants with no less than NUMBER_0 reviews and the place they are found is equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:current_location => notify
44	show restaurants serving QUOTED_STRING_0 food with NUMBER_0 or less reviews and the best rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
45	what is the review count of the furthest restaurant from to GENERIC_ENTITY_tt:us_state_0 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
46	what is the closest restaurant to home that has less than NUMBER_0 reviews	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
47	show me the name of a restaurant that has NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
48	seek the restaurants in this area having served cuisine equal to QUOTED_STRING_0 which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
49	how near is the restaurants which is QUOTED_STRING_0 furthest from work to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
50	where is the location of the restaurant with a review count greater than NUMBER_0 .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
51	show me the distance to restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) => notify
52	fetch restaurants around me with QUOTED_STRING_0 in the cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
53	show me all of the restaurants that are far from my current location which have more than NUMBER_0 review counts .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
54	find restaurants furthest from work that have a rating of more than NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
55	show 1 star restaurant reviews with more than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
56	get me the city of the restaurant with higher review count than NUMBER_0 with the least reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
57	grab me what is the price range of the restaurant having bigger rating than NUMBER_0 nearest to home	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
58	which restaurants are identified as QUOTED_STRING_0 and telephone number + PHONE_NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
59	which restaurants that serve QUOTED_STRING_0 cuisine have QUOTED_STRING_1 in their description ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
60	find reviews with a QUOTED_STRING_0 description that were penned by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
61	i 'd like to know what the reviews are of restaurants serving QUOTED_STRING_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
62	grab me what is the street of restaurant with phone number equal to PHONE_NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
63	what 's the location of a NUMBER_0 star restaurant furthest away from work ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
64	what is the street of the restaurants with fewer review count than NUMBER_0 which is nearest to work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
65	give me a list of restaurants that serve QUOTED_STRING_0 food and have a rating of exactly NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
66	which kind of cuisine is offered at restaurants with NUMBER_0 reviews ?	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
67	gather restaurant with review count less than NUMBER_0 with the tiniest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
68	what restaurant 's got a zip code with QUOTED_STRING_0 in it and the greatest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
69	how many restaurants with zip code being that of QUOTED_STRING_0 are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
70	show me QUOTED_STRING_0 restaurants rated NUMBER_0 or below .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
71	i 'd like to know the city of restaurants having a review count of NUMBER_0 exactly .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
72	tell me what the restaurant nation around here is	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
73	seek for me what is the food type and description of restaurants with state equal to GENERIC_ENTITY_tt:us_state_0 .	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
74	grab the rating of restaurant having descriptions containing QUOTED_STRING_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
75	say what is the telephone of the closest restaurant with rating lower than 1 to work	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) => notify
76	what is the country of restaurants inside GENERIC_ENTITY_tt:country_0 ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
77	tell me what the restaurants farthest away from me are that have a phone number of PHONE_NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
78	what are the reviews of NUMBER_0 or greater that GENERIC_ENTITY_org.schema.Restaurant:Person_0 has written ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
79	where is the restaurant with QUOTED_STRING_0 as served cuisine and rating at minimum NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
80	seek the location of the restaurants which is nearest to work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
81	tell me the name of the restaurant that serves QUOTED_STRING_0 cuisine and has a telephone number of PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
82	i 'd like to know ratings of restaurants that have NUMBER_0 reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
83	what restaurant with QUOTED_STRING_0 food on its menu has a description equaling QUOTED_STRING_1 and the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
84	search the restaurants in this area having served food type equal to QUOTED_STRING_0 which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
85	for restaurants with QUOTED_STRING_0 in their descriptions , what number of reviews do they have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
86	fetch me what is the food type of the restaurants with lower rating than NUMBER_0 closest to home	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
87	what restaurant are in this area and get phone number equal to + PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
88	please set forth GENERIC_ENTITY_org.schema.Restaurant:Person_0 's review that he wrote and released beyond DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
89	get reviews with descriptions containing QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
90	name the restaurants that have NUMBER_0 reviews and a QUOTED_STRING_0 menu .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
91	show me restaurants with a phone number equal to PHONE_NUMBER_0 which serve QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
92	which are restaurant with current rating at least NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
93	find QUOTED_STRING_0 restaurants with NUMBER_0 or more reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
94	i want to know of QUOTED_STRING_0 restaurants that are nearest to my house	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
95	amount of evaluations are there that is in most distant dining locales which offer QUOTED_STRING_0 food in distiction to work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
96	show the restaurant that is closest to work that has an id called QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
97	get restaurants having address equal to work and NUMBER_0 or fewer rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
98	how far away is restaurants with fewer review count than NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
99	get restaurant having bigger review count than NUMBER_0 which serves QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
100	can you show me a photo of a nearby restaurant	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
101	what is the nearest restaurant with QUOTED_STRING_0 in the kitchen ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
102	find me the restaurant that 's furthest from my house that has more than NUMBER_0 reviews and get me the phone number .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
103	get restaurant reviews with less than NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
104	which restaurants have a location that 's the same as here and the sparsest amount of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
105	where is the restaurant that has the most reviews but just 1 review ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) [ 1 ] ) => notify
106	i want the least reviewed restaurants near my work	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] => notify
107	which restaurants around work having rating equivalent to NUMBER_0 gets the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
108	name a restaurant under NUMBER_0 reviews that 's furthest from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
109	how near are the restaurants with larger than 1 reviews nearest to here to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) ) => notify
110	message me what is the zip code of restaurant having greater rating than NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
111	please enumerate restaurant having location equal to home that cooks QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
112	tell me the name of a restaurant with a rating exceeding NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
113	what are all the QUOTED_STRING_0 restaurants that are located in GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
114	what places to eat near my house have a review count of NUMBER_0 or higher ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
115	gather restaurant having smaller review count than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
116	fetch restaurant having country equal to GENERIC_ENTITY_tt:country_0 and phone number equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
117	list review that was created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and with description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
118	message me what is the country of restaurants having location equal to home	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
119	get reviews of restaurants inside GENERIC_ENTITY_tt:us_state_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
120	which restaurant get description that is QUOTED_STRING_0 and telephone equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
121	what is the street of restaurants by here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
122	what restaurant has the least number of reviews and a review count that is below NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
123	i 'd like to know the city of the restaurant with a telephoe number of PHONE_NUMBER_0 is in .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
124	what are the restaurants with a description equal to QUOTED_STRING_0 and a location equal to here that have the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
125	tell me the restaurants serving QUOTED_STRING_0 food that have the best rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
126	reviews posted in restaurants near work later than DATE_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
127	i need restaurants missing reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) [ 1 ] => notify
128	from the restaurants furthest away from home , get a picture of one with a rating lower than NUMBER_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
129	give me the QUOTED_STRING_0 restaurant near home that has the least amount of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
130	what are the restaurants with no more that NUMBER_0 reviews in GENERIC_ENTITY_tt:country_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
131	i want to find reviews that have a rating of NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
132	what is the total review count of the restaurants with QUOTED_STRING_0 in the description with the largest count of reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
133	give me locations of places serving QUOTED_STRING_0 with average review at least NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
134	what distance are the restaurant having country equal to GENERIC_ENTITY_tt:country_0 with the highest number of evaluations in distiction to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) ) => notify
135	bring up restaurants having QUOTED_STRING_0 as description and address equal to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
136	grab the distance from work to restaurant with at least NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
137	find the restaurant with the lowest number of reviews under NUMBER_0	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
138	what 's the publication date of reviews with a rating of NUMBER_0 ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
139	show me the restaurants in this location with more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
140	speak what is the description of the farthest restaurants having description being QUOTED_STRING_0 .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
141	what restaurants are near my work and have a rating of NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work => notify
142	seek the restaurant with lower rating than NUMBER_0 farthest from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
143	what kind of food is served at restaurants the greatest distance from this location with a higher than NUMBER_0 rating ?	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
144	fetch restaurant have at most NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
145	i want to know where to find QUOTED_STRING_0 restaurants and their type of cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
146	which restaurants here with QUOTED_STRING_0 as description has the highest review amount	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
147	list dining locales with state equal to GENERIC_ENTITY_tt:us_state_0 and rating at tiniest NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
148	which dining locations get the same address to work and NUMBER_0 or greater rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
149	which is the restaurants with rating at minimum NUMBER_0 which offer QUOTED_STRING_0 cuisine with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
150	get the rating of restaurant that is QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
151	which dining locations around me with telephone equal to PHONE_NUMBER_0 gets the smallest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
152	what 's the restaurant with the least reviews that has at minimum of NUMBER_0 reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
153	search the restaurant having NUMBER_0 or more rating and QUOTED_STRING_0 as description with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
154	what is the price range of restaurant inside GENERIC_ENTITY_tt:country_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
155	get me the restaurant having QUOTED_STRING_0 in the postal code and QUOTED_STRING_1 in the food type ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
156	tell me the zip code for the restaurant with zero reviews	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
157	which most often-reviewed GENERIC_ENTITY_tt:country_0 restaurants have a rating of NUMBER_0 or higher ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
158	show me the furthest QUOTED_STRING_0 restaurants and their food type and their phone number .	now => [ param:servesCuisine:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
159	which restaurant with rating at least NUMBER_0 and NUMBER_1 or lower rating has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
160	how far away is a restaurant that has descriptions with QUOTED_STRING_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) => notify
161	fetch me the postal code of the furthest restaurants with greater rating than NUMBER_0	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
162	get me what is the food type and description of restaurants with state equal to GENERIC_ENTITY_tt:us_state_0 .	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
163	tell me the name of the cities of all restaurants with at least NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
164	what restaurant here is the highest rated QUOTED_STRING_0 place .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
165	show me what is the distance of restaurants having location equal to here from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) => notify
166	bring up reviews where QUOTED_STRING_0 is part of the description	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
167	please advise me of restaurants near work that indicate QUOTED_STRING_0 in the introduction .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
168	what is the number of restaurants which have no less than NUMBER_0 reviews ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
169	reveal the image of the nearest restaurant with description being QUOTED_STRING_0	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
170	search dining locations nearby in GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
171	tell me the phone number of restaurants that have a rating of greater than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
172	which restaurants have telephone equivalent to PHONE_NUMBER_0 and QUOTED_STRING_0 in the food type ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
173	please get restaurant having summary equal to QUOTED_STRING_0 and postal code containing QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:description:String =~ QUOTED_STRING_0 => notify
174	what descriptions are given to those restaurants with a review count that is under NUMBER_0 ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
175	find me the farthest restaurant from work that has no reviews .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
176	which restaurants serve the food type QUOTED_STRING_0 and are in the country of GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
177	reveal what 's the distance in distiction to work to the closest dining locales to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
178	find a place near my job that has food and is near QUOTED_STRING_0 zip code .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
179	locate some restaurants in this area with a rating of less than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
180	text me the restaurants around here with served cuisine being QUOTED_STRING_0 which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
181	i want descriptions of restaurants located in LOCATION_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
182	please find some details on restaurants ranked NUMBER_0 or below .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
183	what is the country name of the nearest restaurants with QUOTED_STRING_0 as postal code to work ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
184	how close are the restaurants in GENERIC_ENTITY_tt:country_0 are that 's closest to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
185	tell me restaurants with the phone being PHONE_NUMBER_0 and that sell QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
186	which restaurants have a review count lower than NUMBER_0 which are far from my location .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
187	show me what is the address of restaurant having rating not more than NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
188	give me a list of restaurants with an address equal to here and that offer QUOTED_STRING_0 as the cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
189	what is both the cuisine and review count of the restaurants with food type being QUOTED_STRING_0 that is nearest to here .	now => [ param:aggregateRating.reviewCount:Number , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
190	which is the restaurants with rating at least NUMBER_0 which cooks QUOTED_STRING_0 cuisine with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
191	please get restaurant having LOCATION_0 as city	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
192	tell me the under NUMBER_0 rated restaurants near me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
193	which QUOTED_STRING_0 dining locations have smaller rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
194	get the QUOTED_STRING_0 restaurants nearest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
195	tell me how many reviews there are in the restaurant that have more than a 1 rating are to my location .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
196	how many ratings in restaurants with a phone of + PHONE_NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
197	please find restaurants with review count equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
198	which restaurants around home with QUOTED_STRING_0 in the food type has the smallest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
199	how many restaurant having rating smaller than NUMBER_0 are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
200	show me which restaurants have 1 review .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
201	fetch the state of restaurant with telephone equal to PHONE_NUMBER_0 .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
202	what is the restaurants around home that cooks QUOTED_STRING_0 cuisine with the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
203	how close is restaurants with lower review count than NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
204	look for a restaurant with NUMBER_0 reviews and QUOTED_STRING_0 as the summary	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
205	what is the range from the restaurants with the lowest number of reviews in excess of NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
206	show me a restaurant near my location with a rating less than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
207	show me the review count of restaurants with QUOTED_STRING_0 as summary	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
208	what are restaurants having summary equal to QUOTED_STRING_0 and rating at minimum NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
209	collect the location of restaurant having no reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
210	say what is the country of the farthest restaurant having fewer review count than 1 from home	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
211	show me reviews that have a rating of NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
212	i 'd like to know what descriptions of restaurants in QUOTED_STRING_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
213	grab the street address of restaurant having no reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
214	what are the restaurants with the biggest rating numbers , a QUOTED_STRING_0 menu and a summary equal to QUOTED_STRING_1 ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
215	find me what is the zip code of restaurant with QUOTED_STRING_0 in the descriptions	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
216	what reviews have date of publication after DATE_0 and QUOTED_STRING_0 as summary	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
217	how many total restaurant having rating lower than NUMBER_0 are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
218	tell me the distance from my home to restaurants rated NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
219	show me what is the number of reviews of the restaurants with lower review count than NUMBER_0 farthest from here .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
220	where is the restaurants with rating equivalent to NUMBER_0 which is closest to home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
221	look for restaurants with phone PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
222	find the restaurant whose number is PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
223	what 's the number for a restaurant with postal code QUOTED_STRING_0 that is nearest to my work ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
224	what is the type of food that QUOTED_STRING_0 restaurants farthest from home serve ?	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
225	gather the review count of restaurant with telephone equal to PHONE_NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
226	look for the restaurant with a summary of QUOTED_STRING_0 and reviews numbering above NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
227	what is the restaurant rated that has no reviews ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
228	how far is the farthest dining business with phone number equal to PHONE_NUMBER_0 from home from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
229	what is the distance from here of the nearest restaurant that has a phone number equal to PHONE_NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
230	tell me the restaurant nearest to work that has the phone number PHONE_NUMBER_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
231	look for reviews with a NUMBER_0 or above rating	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
232	find QUOTED_STRING_0 restaurants with a PHONE_NUMBER_0 phone number .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
233	make a list of restaurants with the least reviews here and the postal codes	now => [ param:address.postalCode:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
234	what is the image of the restaurant near home with the fewest number of reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
235	find all the restaurants near work that are not rated above NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
236	where is the dining locations with served cuisine being QUOTED_STRING_0 and rating at minimum NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
237	i 'd like to know phone numbers of restaurant with review count of under NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
238	say the current position of the dining locales that is closest to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
239	show me the distance from work of LOCATION_0 city containing restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
240	i need the price range for QUOTED_STRING_0 restaurants that are closest to work .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
241	which restaurants get grander review count than NUMBER_0 and NUMBER_1 or above rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
242	what restaurant in this location rated NUMBER_0 or below has the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
243	tell me the phone number of the restaurant with a lower than 1 review count that is farthest from home	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
244	how far is the restaurant with country equivalent to the GENERIC_ENTITY_tt:country_0 closest to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
245	gather me what is the rating and country of the restaurant that offer QUOTED_STRING_0 cuisine most far away from work	now => [ param:address.addressCountry:Entity(tt:country) , param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
246	fetch the reviews of the restaurant with rating more than NUMBER_0 with the largest count of reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
247	show me restaurants with the location being here that sell QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
248	which restaurants with lower review count than NUMBER_0 and food type equivalent to QUOTED_STRING_0 gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
249	please tell me which QUOTED_STRING_0 restaurants have NUMBER_0 stars .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
250	what is the distance from the restaurant with no reviews that has the biggest number of reviews to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) [ 1 ] ) ) => notify
251	tell me how many reviews that are rated 1 star and are closes to home .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] ) => notify
252	seek for me what is the review count of the restaurants with QUOTED_STRING_0 in the description with the least reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
253	say what 's the name of the dining locales with cuisine being QUOTED_STRING_0 with the largest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
254	show me the restaurant who share my home address with the fewest reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] => notify
255	what are QUOTED_STRING_0 restaurant in this area with postal code being that of QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
256	for restaurants with a location at home , how many reviews are there ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
257	how near are the restaurants with larger rating than NUMBER_0 with the least reviews from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
258	which restaurant has QUOTED_STRING_0 as its description and has review count not more than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
259	tell me the postal code for restaurants with a 1 star rating .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) => notify
260	what 's the location of a restaurant without any reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
261	find me the amount of reviews in the restaurant that has a lower than 1 rating	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
262	what 's the state of the restaurant at PHONE_NUMBER_0	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
263	what is the rating of the most far away restaurants with food type being QUOTED_STRING_0 ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
264	what are the best rated restaurants with a description of QUOTED_STRING_0 and QUOTED_STRING_1 food on the menu ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
265	look for restaurants providing QUOTED_STRING_0 food that have the summary QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
266	get review with NUMBER_0 or more rating	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
267	get the distance of restaurants with at most NUMBER_0 reviews from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
268	where is the restaurant with QUOTED_STRING_0 in the kitchen at home ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
269	what location would apply to a restaurant that serves QUOTED_STRING_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
270	how far away are the most far away restaurant with telephone equal to PHONE_NUMBER_0 from home to home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
271	tell me a restaurant in this area that has QUOTED_STRING_0 cuisine and the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
272	how close are the restaurants with rating more than NUMBER_0 which is most far away from work from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
273	what is the distance from work to a restaurant with NUMBER_0 reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
274	i require restaurant around home with NUMBER_0 or larger rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:home => notify
275	how far is it from here to a restaurant in zip code QUOTED_STRING_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
276	what is the distance from a zip code QUOTED_STRING_0 to a restaurant	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
277	find QUOTED_STRING_0 restaurants with a rating of NUMBER_0 and the most reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
278	which are restaurants with cuisine equivalent to QUOTED_STRING_0 and location equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
279	gather the nearest restaurant having id equal to QUOTED_STRING_0 to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
280	find the restaurants having NUMBER_0 or larger rating and location equal to work which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
281	fetch the restaurant having location equal to work farthest from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
282	which restaurants are closest to home and have a rating of NUMBER_0 ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
283	find a place to eat that is located right by my house and that serves QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
284	fetch the nearest restaurant having city equal to LOCATION_0 to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) ) [ 1 ] => notify
285	show me some restaurants that have a phone number that is equal to PHONE_NUMBER_0 and offer QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
286	what 's the price range of the restaurant having QUOTED_STRING_0 that is in explanation closest to here	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
287	please get me restaurants with QUOTED_STRING_0 as summary and NUMBER_0 or greater rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
288	for restaurants that are farhtest away from work , how near by are the ones rated NUMBER_0 or higher	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
289	can you find a review that has QUOTED_STRING_0 for a summary that was published prior to DATE_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
290	what is the state of restaurant having zero reviews .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
291	fetch the price range of restaurant with 1 reviews	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
292	give me all the restaurants nearby that are in GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
293	tell me restaurants that have the phone number PHONE_NUMBER_0 and description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
294	i would like to know the rating for the restaurant with a postal code equal to QUOTED_STRING_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
295	give me the restaurant that is furthest from here and has more than one review .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
296	where is the restaurant having review count higher than NUMBER_0 and cuisine equivalent to QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
297	tell me how far the restaurant with more than NUMBER_0 reviews is that 's closest from here to my job .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
298	display reviews for restaurants scoring above NUMBER_0 , please .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
299	show me the farthest away restaurants with at most NUMBER_0 reviews	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
300	what 's the total number of restaurants with an QUOTED_STRING_0 zip code ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
301	list QUOTED_STRING_0 restaurants with country equivalent to GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
302	grab for me what is the rating of the restaurants with postal code having QUOTED_STRING_0 that is closest to here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
303	find the restaurants with less than NUMBER_0 reviews that are also furthest from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
304	what are all the reviews submitted by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that have QUOTED_STRING_0 in their description .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
305	get the city of restaurant with telephone equal to PHONE_NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
306	what type of food do restaurants with a minimum of NUMBER_0 reviews serve ?	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
307	i desire restaurants with country equal to GENERIC_ENTITY_tt:country_0 and food type equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
308	what 's the price range of the dining locations with the minimum number of evaluations	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
309	what 's the restaurant that serves QUOTED_STRING_0 food with the tiniest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
310	what are the restaurants nearest to home ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) ) [ 1 ] => notify
311	what distance is it from this location to those restaurants with QUOTED_STRING_0 as their zip code ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
312	what is the location and food type of the closest QUOTED_STRING_0 restaurant ?	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
313	which are restaurant 's names in this area that are QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
314	give me the distance from work of restaurants that have a location equal to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) => notify
315	get both the explanation and phone number of the closest dining locales with more number of evaluations than 1 to here	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
316	find restaurants near me that sell QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
317	i 'd like to know GENERIC_ENTITY_org.schema.Restaurant:Person_0 's rating of review .	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
318	what phone number does a restaurant with an under NUMBER_0 review count have ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
319	tell me the restaurant with the postal code QUOTED_STRING_0 and the address equivalent to the house with the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
320	what dining places with summary equal to QUOTED_STRING_0 and rating equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
321	what are the reviews of a restaurant that have more than NUMBER_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
322	find GENERIC_ENTITY_org.schema.Restaurant:Person_0 's reviews that have a publication date that is prior to DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
323	get what is the description of restaurant having bigger rating than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
324	what 's the telephone of restaurant having more than NUMBER_0 evaluations	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
325	what is the country of the restaurant with rating fewer than NUMBER_0 with the smallest number of reviews	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
326	get restaurants containing phone number equal to PHONE_NUMBER_0 and review count equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
327	i want to see the city of restaurants that serve QUOTED_STRING_0 food that 's farthest from the job .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
328	tell me the country of restaurants that have a location home	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
329	what is a restaurant with less than NUMBER_0 rating that is closest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
330	i would like to see all restaurants that have a rating below NUMBER_0 and have here as their location .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
331	i want comments submitted with a GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
332	i like to know the review count of restaurants that have no reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
333	tell me what is the city of restaurant with the cuisine QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
334	what rating do restaurants with the phone number PHONE_NUMBER_0 have ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
335	tell me the state of the restaurant with exactly no reviews .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
336	what 's the address of a restaurant with zero reviews ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
337	find restaurants with ratings of NUMBER_0 or more and the word QUOTED_STRING_0 included in the summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
338	what distance is the restaurant having postal code containing QUOTED_STRING_0 most distant in distiction to here from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
339	what are the restaurants with cuisine being QUOTED_STRING_0 and review count grander than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
340	present to me the address of the farthest restaurant with review count fewer than NUMBER_0 from here .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
341	how near is the restaurants near work with the largest number of reviews to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) ) => notify
342	i want to see restaurants that have at least a NUMBER_0 rating that provide QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
343	i 'd like the description of restaurants with QUOTED_STRING_0 in their description .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
344	show me restaurants with the state of GENERIC_ENTITY_tt:us_state_0 and the postcode being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
345	what restaurant contains postal code being QUOTED_STRING_0 and offers QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
346	search the restaurants around work having state equivalent to GENERIC_ENTITY_tt:us_state_0 which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
347	can you find the restaurant 's image that has a total number of reviews of NUMBER_0 or higher ?	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
348	what price range do restaurants with fewer than NUMBER_0 reviews have ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
349	find restaurants that include QUOTED_STRING_0 in the summary and are located at home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
350	pull up the QUOTED_STRING_0 restaurants in zip code QUOTED_STRING_1 , please .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
351	what current reviews have date published after DATE_0 and QUOTED_STRING_0 as summary	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
352	which restaurants from my current location are far away which also have the lowest count of reviews and those reviews are equal to NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) ) => notify
353	how far from home is a restaurant that has QUOTED_STRING_0 cuisine	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
354	what is the image of the restaurant close to home with the smallest number of reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
355	show QUOTED_STRING_0 restaurants with country equal to GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
356	i want to know what type of food restaurants serve that has NUMBER_0 reviews	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
357	what are reviews in restaurant having review count grander than NUMBER_0 and location equal to work	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
358	find the restaurant with the fewest number of reviews and tell me what city it is in .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
359	what restaurants with a rating under NUMBER_0 serve QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
360	give me the name of the author of the reviews with the highest rating	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
361	get for me the price range of the closest restaurant with fewer rating than NUMBER_0 to home	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
362	show me the street address of restaurant in LOCATION_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
363	what are the restaurants which have n't gotten any reviews and are the most miles away ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
364	what is the state of restaurant inside of GENERIC_ENTITY_tt:country_0	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
365	name the restaurants serving QUOTED_STRING_0 food and having QUOTED_STRING_1 in their description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
366	i 'd like to know of restaurants that are located at work that are farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
367	i require reviews having NUMBER_0 or more rating	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
368	what is the restaurant with NUMBER_0 reviews and QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
369	please gather restaurants having 1 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
370	i 'd like to know the restaurants and their ratings with the fewest number of them .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
371	find me a place to eat that has QUOTED_STRING_0 cuisine and a rating of NUMBER_0 or more .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
372	what restaurants get QUOTED_STRING_0 in the postal code and rating at minimum NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
373	i need to get a description with a review rating of at most NUMBER_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
374	find a restaurant with a NUMBER_0 star rating that has the zip code QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
375	tell me where the restaurant is situated similar to the workplace	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
376	gather the most far away restaurant having smaller review count than NUMBER_0 from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
377	text me what is the street of restaurant having lower review count than NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
378	fetch the restaurants having location equal to here with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
379	what 's the contact number of restaurants which are rated NUMBER_0 at most ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
380	retrieve the telephone of restaurant with QUOTED_STRING_0 in the descriptions	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
381	find the nearest restaurant and tell me the rating .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
382	tell me the distance to restaurants with an id of QUOTED_STRING_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) => notify
383	i 'd like to know which restaurant is the farthest from home that has a smaller review count than NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
384	bring up restaurants in GENERIC_ENTITY_tt:country_0 with address equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
385	tell me how near the restaurant is that has more than NUMBER_0 rating , with the largest amount of reviews to my location .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
386	find all reviews that have been written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and have description with QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
387	display for me what is the rating of restaurants having review count equal to NUMBER_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
388	tell me the amount of restaurants that have at least NUMBER_0 reviews .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
389	seek the restaurants having location equal to home nearest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) ) [ 1 ] => notify
390	tell me how many restaurants are next to my home	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home => notify
391	which dining locations around me having NUMBER_0 or more number of evaluations has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
392	where is farthest restaurant from home that has a higher review count than NUMBER_0 located ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
393	between work and work , how far away are the restaurants with 1 review ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
394	i 'd like to find a restaurant with a higher rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
395	tell me which restaurants have the food type of QUOTED_STRING_0 and NUMBER_0 or fewer reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
396	i want to see restaurant descriptions with a rating under NUMBER_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
397	tell me what restaurant get state equal to GENERIC_ENTITY_tt:us_state_0 and are QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
398	show reviews of under 1 rating and with more than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
399	display for me the description of the restaurant whose rating is the minimum .	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
400	what is the number of restaurants that have QUOTED_STRING_0 in the cuisine ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
401	which restaurant get address equivalent to here and QUOTED_STRING_0 in the cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
402	how near are the restaurants with rating larger than NUMBER_0 which is most far away from work from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
403	which restaurants serve QUOTED_STRING_0 food and have NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
404	i demand restaurants with summary being QUOTED_STRING_0 and location equal to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
405	name a QUOTED_STRING_0 restaurant in my neighborhood .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
406	what restaurant closest to home has LOCATION_0 as its city ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) ) [ 1 ] => notify
407	tell me the street address of restaurants with a location work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
408	where is the restaurants with QUOTED_STRING_0 as summary and state equivalent to GENERIC_ENTITY_tt:us_state_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:description:String =~ QUOTED_STRING_0 ) => notify
409	tell me the restaurants in the area with QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
410	find the closest restaurant to my job and find the one with the least reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
411	tell me the distance from work to restaurant that has at least NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
412	what is the furthest restaurant from work with no more than NUMBER_0 reviews .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
413	gather the rating of reviews having rating equal to NUMBER_0	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
414	name the country where one would find restaurants that have a location that matches home .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
415	where is the most distant restaurant having postal code equal to QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
416	how far from work are restaurants with only 1 review that are closest to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
417	restaurants with a rating over NUMBER_0 and the greatest amount of reviews have what kind of price range ?	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
418	give me the number of NUMBER_0 star restaurants around me .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
419	what are restaurants with summary being QUOTED_STRING_0 and food type equivalent to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
420	find a restaurant near home that has a review count over NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
421	i want to know the type of food of the restaurants that have rating higher than NUMBER_0 closest to here .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
422	get me restaurant having phone number equal to PHONE_NUMBER_0 and location equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
423	alert me the number of evaluations of dining locales around me	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
424	look for reviews published prior to DATE_0 which have the best rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) ) [ 1 ] => notify
425	of the restaurants nearby here , how many reviews do the ones with less than NUMBER_0 have .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
426	please grab restaurant having no reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
427	list restaurant around work which serves QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
428	i want a phone number of a restaurant with QUOTED_STRING_0 in the description	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
429	fetch me the location of restaurant rated NUMBER_0 stars	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
430	give all of the reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that were submitted after DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
431	what 's the dining locations having QUOTED_STRING_0 that is in cuisine and rating equal to NUMBER_0 which has the highest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
432	i would like to know which restaurants have a postal code of QUOTED_STRING_0 and are located in GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
433	get all the restaurants with QUOTED_STRING_0 in the review and a rating of NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
434	what is the restaurants having QUOTED_STRING_0 in the food type and rating equal to NUMBER_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
435	list out restaurants near here with a review count higher than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
436	which restaurant with no less than NUMBER_0 reviews has the greatest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
437	show me what is the review count of restaurants having review count larger than NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
438	which restaurants around me with telephone equivalent to PHONE_NUMBER_0 gets the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
439	what is the restaurants with review count smaller than NUMBER_0 with the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
440	i want the restaurant review amounts for places near me .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
441	how many reviews of restaurants with QUOTED_STRING_0 in the description are in the ones with the most reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
442	give me the postal code of a restaurant that has QUOTED_STRING_0 as the offered cuisine	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
443	what 's the distance in distiction to home of the dining locales with rating more than NUMBER_0 with the smallest number of evaluations	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
444	which are the review having rating not larger than NUMBER_0 of restaurants with country equal to GENERIC_ENTITY_tt:country_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
445	fetch the number of reviews in restaurant with NUMBER_0 reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
446	what are the restaurant around me that cooks QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
447	what is the current rating of the restaurants with review count less than 1 with the most reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) => notify
448	tell me the review with the soonest date published	now => ( sort param:datePublished:Date asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
449	get restaurants with NUMBER_0 or less ratings around the workplace	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:work => notify
450	which restaurant get higher rating than NUMBER_0 and offer QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
451	i like to know what city a restaurant with a rating equal to NUMBER_0 is in	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
452	show me the telephone number of a restaurant with a rating that is NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
453	find a restaurant with NUMBER_0 or more reviews , and give me it 's image .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
454	show me NUMBER_0 star reviewed restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
455	let me know the restaurant having QUOTED_STRING_0 that is in zip code and the same address to home with the minimum number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
456	which are the dining locations with location equal to work and rating at minimum NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
457	retrieve review uploaded by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with date published before DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
458	please name a restaurant with no more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
459	show me reviews for restaurants with a review count lower than NUMBER_0 that are close .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
460	where is the restaurant with a work location located ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
461	show me reviews rated less than NUMBER_0 written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
462	tell me the name and price range for restaurant located in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
463	which QUOTED_STRING_0 restaurants in the area have the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
464	i want to see restaurants with a greater rating of NUMBER_0 and their distance .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) => notify
465	which are reviews having rating equivalent to NUMBER_0 for restaurants with QUOTED_STRING_0 in the description .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
466	which is the restaurant having review count not higher than NUMBER_0 and served cuisine being QUOTED_STRING_0 which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
467	find restaurants that have an id of QUOTED_STRING_0 that are farthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
468	tell me the city of a restaurant with less than NUMBER_0 reviews closest to me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
469	i want to know which restaurants have QUOTED_STRING_0 cuisine and whose descriptions are equal to QUOTED_STRING_1 that have the count of reviews that is the minimum .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
470	from work , how far is it to the nearest restaurants in GENERIC_ENTITY_tt:us_state_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
471	i want the street name of the restaurant with QUOTED_STRING_0 cuisine and the highest number of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
472	where is the dining places having phone number equal to PHONE_NUMBER_0 with the most evaluations	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] ) => notify
473	find reviews of GENERIC_ENTITY_tt:us_state_0 restaurants .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
474	what restaurant rated more than NUMBER_0 has QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
475	how many reviews for restaurants in QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
476	which is the QUOTED_STRING_0 food restaurant that is near my home .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
477	for restaurants with a rating of NUMBER_0 or more find those that serve QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
478	where is a restaurant with only NUMBER_0 review numbers	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) => notify
479	seek restaurants having smaller rating than NUMBER_0 and QUOTED_STRING_0 as description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
480	i want to know the location of restaurants with over NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
481	need the distance of restaurants in QUOTED_STRING_0 with the lowest number of reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
482	what are the publishing dates of the reviews that have a rating lower than NUMBER_0 ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
483	which are restaurants with rating at least NUMBER_0 which cooks QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
484	fetch me the country of the restaurant having greater rating than NUMBER_0 farthest from home .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
485	i 'd like to hear review descriptions for ratings equaling 1 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == 1 ) => notify
486	i would like to know the count of reviews that have no reviews .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
487	please enumerate restaurants having address equivalent to work and NUMBER_0 or greater rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
488	get restaurant having description containing QUOTED_STRING_0 and QUOTED_STRING_1 as cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
489	get dining locations with served cuisine being QUOTED_STRING_0 and rating not more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
490	near my job , show the distance of the nearest restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
491	get me what is the rating of the farthest restaurants with lower review count than 1 from home	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
492	what restaurants have a description containing QUOTED_STRING_0 and a phone number of PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
493	what is the most distant restaurant from work with no more than NUMBER_0 reviews .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
494	what is the cuisine type offered in LOCATION_0 city restaurants ?	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
495	show me reviews with a rating above NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
496	find all the restaurants in the are that serve QUOTED_STRING_0 food and have the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
497	what rating does an QUOTED_STRING_0 restaurant have ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
498	where is the most far away dining locales with rating more than NUMBER_0 in distiction to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
499	get restaurants with served cuisine being QUOTED_STRING_0 and description equivalent to QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
500	i 'd like to see the review with a NUMBER_0 or under rating written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
501	what restaurants get description equivalent to QUOTED_STRING_0 and phone number equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
502	show me restaurants close to here and their description and phone number and their review count should be more than 1 .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
503	show me city restaurants with NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
504	what is the location for the restaurant whose phone number is equal to PHONE_NUMBER_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
505	seek restaurant having more review count than NUMBER_0 and address equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
506	get reviews having summary being QUOTED_STRING_0 and rating equivalent to NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
507	what distance is the restaurant with rating more than NUMBER_0 with the largest count of evaluations in distiction to here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
508	find a list of QUOTED_STRING_0 restaurants in GENERIC_ENTITY_tt:us_state_0 , please .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
509	get me what is the rating of restaurants having description being QUOTED_STRING_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
510	which restaurant reviews have QUOTED_STRING_0 in the description and also have a review count of more than NUMBER_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
511	what dining locations get QUOTED_STRING_0 that is in zip code and rating at minimum NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
512	what restaurants are there that are rated NUMBER_0 or below with reviews numbering NUMBER_1 or more ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_1 and param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
513	what are review with QUOTED_STRING_0 in the description in restaurants with bigger review count than NUMBER_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
514	which are total reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with summary equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
515	show me the image of the closest restaurant that has a description of QUOTED_STRING_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
516	which are restaurant having NUMBER_0 reviews and NUMBER_1 or greater rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_1 and param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
517	amount of evaluations that is in closest restaurant with number of reviews less than NUMBER_0 to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
518	i 'm trying to find a restaurant rated more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
519	get dining locations having address equal to home and description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
520	i 'd like to know restaurants that have NUMBER_0 reviews that are the farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
521	show me pictures of restaurants in GENERIC_ENTITY_tt:country_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
522	grab for me the closest restaurant with review count less than NUMBER_0 to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
523	which restaurant get description being QUOTED_STRING_0 and telephone number equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
524	which are the restaurant that has reviews which was created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) } => notify
525	find review with GENERIC_ENTITY_org.schema.Restaurant:Person_0 as the author and the description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
526	find the QUOTED_STRING_0 restaurants that are closest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
527	taking restaurants ratings over NUMBER_0 and QUOTED_STRING_0 being served	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
528	tell me the zip code of the farthest restaurant from here	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
529	retrieve the dining locations having zip code being QUOTED_STRING_0 and food type equal to QUOTED_STRING_1 with the maximum number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
530	give me the telephone number for the restaurant with a review count greater than NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
531	which of the reviews published later than than DATE_0 are for restaurants that have more than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
532	tell me how far away the farthest restaurant is with no reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
533	gather for me the price range of the closest restaurant with lower rating than NUMBER_0 to home	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
534	grab the number of reviews in restaurant with NUMBER_0 reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
535	find me a restaurant having a zip code of QUOTED_STRING_0 that is the largest distance from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
536	find the restaurants having NUMBER_0 reviews farthest from home ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
537	grab the street of the nearest restaurants to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
538	text me what is the distance to restaurants with id equal to QUOTED_STRING_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) => notify
539	i would like to know the rating of the restaurant that has no reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
540	seek restaurants that serves QUOTED_STRING_0 , with QUOTED_STRING_1 as summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
541	show me which reviews GENERIC_ENTITY_org.schema.Restaurant:Person_0 wrote with QUOTED_STRING_0 in the summary .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
542	gather for me what is the country of the most far away restaurant having postal code containing QUOTED_STRING_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
543	what restaurant is farthest from work and has 1 star ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
544	obtain reviews of any restaurants at work that have more than NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
545	find me the phone number of the restaurants with QUOTED_STRING_0 as postal code which is most far away from work .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
546	enumerate review with NUMBER_0 or larger rating .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
547	please bring up NUMBER_0 star reviews for restaurants with an GENERIC_ENTITY_tt:us_state_0 location .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
548	enumerate restaurants near here having review count grander than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
549	message me what is the number of reviews of QUOTED_STRING_0 restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
550	which are the restaurant in this area having review count larger than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
551	near my location , how near is the restaurant with the most reviews and a NUMBER_0 rating ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
552	where are restaurants with zero reviews located ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
553	show me what is the city of restaurant having rating equal to NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
554	get the name of restaurants having NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
555	which are restaurant rated NUMBER_0 star having food type that of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
556	tell me the address of restaurants with only NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
557	how many reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
558	which are dining places having location equal to here that offer QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
559	what is a restaurant with a score greater than NUMBER_0 with the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
560	restaurant with a definition of QUOTED_STRING_0 and a score of NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
561	how far away is the restaurants in this area with the smallest count of reviews to here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
562	i 'd like the zip code of a restaurant whose rating is less than NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
563	shoe me the restaurant with the max review count and this phone number PHONE_NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
564	tell me the rating of restaurants that have id equal to QUOTED_STRING_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
565	list restaurant having state equivalent to GENERIC_ENTITY_tt:us_state_0 which offer QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
566	find me restaurants that are located here that provide QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
567	what restaurant with a rating greater than NUMBER_0 has the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
568	seek for me the distance from here to restaurants in LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
569	the restaurant with QUOTED_STRING_0 food that is farthest away from work is located on what street	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
570	what is the total review count of the restaurant with review count fewer than NUMBER_0 farthest from work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
571	pull up reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that are rated NUMBER_0 stars	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
572	please gather restaurants rated NUMBER_0 star around me	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
573	find the dining locations near here having cuisine being QUOTED_STRING_0 with the maximum number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
574	specify the restaurants that have QUOTED_STRING_0 food and are located in this direct neighborhood .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
575	text me what is the reviews of restaurants with higher review count than NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
576	how many total reviews does the nearest restaurants with more than NUMBER_0 reviews to home have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
577	which restaurants around home with QUOTED_STRING_0 in the food type has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
578	give me a restaurant with the phone number PHONE_NUMBER_0 that serves QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
579	say what is the name of the restaurants with food type being QUOTED_STRING_0 with the largest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
580	what is the food type and city of the restaurant with smaller rating than NUMBER_0 farthest from work	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
581	which is the restaurants with fewer rating than NUMBER_0 which is farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
582	grab review rated NUMBER_0 star of restaurants with food type being QUOTED_STRING_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
583	give me all the restaurants with QUOTED_STRING_0 in the description that have more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
584	i am looking for the closest restaurant to work with a rating of less than NUMBER_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
585	i am looking for a restaurant with a rating of lower than NUMBER_0	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
586	tell me the distance of restaurants from work that has at most NUMBER_0 work reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
587	what is the price range of the restaurant having review count larger than NUMBER_0 which is nearest to home	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
588	tell me the street of the restaurants near here .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
589	what is the restaurant with a rating of NUMBER_0 or under and an address equal to home that got the minimum number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
590	get me the telephone of restaurants in QUOTED_STRING_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
591	what is the telephone number of the restaurants which has the highest rating	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
592	how many reviews are there for a restaurant that has NUMBER_0 reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
593	what rating does the restaurant with QUOTED_STRING_0 in the description have ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
594	i would like to know the phone numbers for restaurants whose locations are equal to home .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
595	what is a restaurant that has no fewer than NUMBER_0 reviews and location is equal to work .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:work => notify
596	i want to find the where the restaurants that have review counts of NUMBER_0 or under are located .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
597	grab review gets the soonest date published	now => ( sort param:datePublished:Date asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
598	say what is the current review count of restaurant near home .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
599	what restaurants in the area have QUOTED_STRING_0 on the menu ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
600	what are restaurants rated NUMBER_0 star having larger review count than NUMBER_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
601	text me what is the name of restaurant having at most NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
602	how close are the restaurants that are the greatest distance from work and have a review count under NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
603	fetch restaurants that has review having QUOTED_STRING_0 as description and NUMBER_0 or lower rating	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:description:String =~ QUOTED_STRING_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) and param:reviewRating.ratingValue:Number <= NUMBER_0 } => notify
604	show me restaurants from GENERIC_ENTITY_tt:country_0 with the zip code QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
605	present restaurants having phone number equivalent to PHONE_NUMBER_0 which serves QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
606	where is the restaurant having review count larger than NUMBER_0 and cuisine equal to QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
607	list restaurant rated NUMBER_0 star with cuisine equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
608	what is the final review count of the restaurant that is furthest from here with a review count under NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
609	how far is a restaurant with more than NUMBER_0 stars from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) => notify
610	i need restaurants with ratings of NUMBER_0 with QUOTED_STRING_0 in the description .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
611	can you give me the price range for the place to eat that is rated the highest ?	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
612	collect the number of reviews in restaurant having city equal to LOCATION_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
613	get restaurants with more review count than NUMBER_0 and food type equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
614	which zip code applies to those restaurants with a review count of NUMBER_0 ?	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
615	give me the description of a restaurant found in zip code QUOTED_STRING_0 closest to home .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
616	what street is the restaurant with fewer than NUMBER_0 reviews and that is furthest from work on ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
617	tell me the description of a review with a publishing date after DATE_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) => notify
618	find for me the city of the restaurant that has the least number of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
619	tell me the rating of restaurants with the fewest reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
620	what are some restaurants that are near work and have no less than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:work => notify
621	please find me a restaurant nearby that offers QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
622	name the QUOTED_STRING_0 cuisine restaurant with under NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
623	show me the phone number of the restaurant with a zip code of QUOTED_STRING_0 that 's nearest to here .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
624	i need the address of restaurants with more than NUMBER_0 reviews and farthest away from the job .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
625	which restaurants get address equal to work and NUMBER_0 or larger rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
626	get nearest restaurants with location equal to work to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
627	tell me what the cuisine is for the restaurant that is rated at least NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
628	find the closest restaurants to work that have the description QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
629	how many reviews does the closest restaurants with more than NUMBER_0 reviews to home have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
630	let me know the zip code of restaurant with a rating of above NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
631	what 's the city of the restaurant that is closest to home ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
632	which are restaurant having state equivalent to GENERIC_ENTITY_tt:us_state_0 and review count equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
633	what is the restaurants with rating bigger than 1 which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] => notify
634	search for restaurants with a less than NUMBER_0 rating and a description equivalent to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
635	i need to see restaurants that have over a 1 rating and also the least reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] => notify
636	show me the restaurants with rating at minimum NUMBER_0 which offers QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
637	i would like to know what kind of food the restaurant has that is the most distance away and has a food type of QUOTED_STRING_0 .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
638	seek restaurants nearby in GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
639	how many reviews are written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
640	i want to know how far restaurants with no more than NUMBER_0 reviews are from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
641	find the furthest restaurant from this location with a rating that 's under NUMBER_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
642	tell me the QUOTED_STRING_0 restaurant closest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
643	how far is the restaurant with less than 1 rating from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) ) => notify
644	tell me what a restaurant that 's got NUMBER_0 reviews has as its zip code .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
645	list the restaurants serving QUOTED_STRING_0 which have more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
646	what restaurant that serves QUOTED_STRING_0 food and whose location matches work has the best overall rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
647	where are the restaurants located that are farthest from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
648	tell me the price range of restaurants with id like QUOTED_STRING_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
649	how near are the most far away restaurants having description being QUOTED_STRING_0 from here from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
650	get reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 rated NUMBER_0 star	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
651	pull up restaurants having QUOTED_STRING_0 as description and address equivalent to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
652	tell me the street address of restaurants with a review count of under NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
653	tell me the location of restaurants that have descriptions that include QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
654	find restaurants that have QUOTED_STRING_0 in the zip code that sell QUOTED_STRING_1 and have the best rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
655	please provide the phone number for the farthest restaurant from here with a rating under NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
656	what is the type of food served at the restaurant with a rating of NUMBER_0 - NUMBER_1 ?	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:aggregateRating.ratingValue:Number <= NUMBER_1 ) => notify
657	what are the restaurants in here that has QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
658	grab the most far away restaurants having review count larger than NUMBER_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
659	what are the restaurants with fewer than NUMBER_0 reviews and address equivalent to here	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:current_location => notify
660	what 's the food type served at restaurants that have got a total of NUMBER_0 reviews ?	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
661	what is the street of the QUOTED_STRING_0 restaurant which has the highest rating	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
662	show me the QUOTED_STRING_0 restaurants with the telephone number PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
663	what 's the zip code of a restaurant with no less than 1 review ?	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
664	which restaurants around me has the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
665	what are the restaurants with QUOTED_STRING_0 cuisine that have a location which matches home ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
666	looking for a QUOTED_STRING_0 restaurant .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
667	tell me what the country is of the restaurant that has a telephone equal to PHONE_NUMBER_0 ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
668	which restaurant with QUOTED_STRING_0 as served cuisine and review count equivalent to NUMBER_0 has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
669	how many reviews are there with a rating of exactly NUMBER_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
670	find the nearest restaurant and their postal code .	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
671	gather the price range of restaurants with QUOTED_STRING_0 as food type .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
672	find ratings of restaurants with no reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
673	show me restaurant ratings with a review count being NUMBER_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
674	tell me the restaurant in QUOTED_STRING_0 that is closest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
675	i want the descriptions of any restaurants with the id of QUOTED_STRING_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
676	what are restaurant nearby having QUOTED_STRING_0 that is in cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
677	get the review uploaded by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with a date published previous to DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
678	which QUOTED_STRING_0 food restaurant with QUOTED_STRING_1 in the description gets the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
679	find a restaurant in the GENERIC_ENTITY_tt:country_0 that has a review count of over NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
680	what is the street of the restaurants with bigger review count than 1 with the tiniest number of reviews ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) [ 1 ] ) => notify
681	find reviews of restaurant having smaller than NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
682	give me the country for the restaurant that has a rating of above NUMBER_0 that is the most distance from home .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
683	i want restaurants that GENERIC_ENTITY_org.schema.Restaurant:Person_0 has reviewed .	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) } => notify
684	what reviews were published after DATE_0 and have a description of QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
685	find restaurants in the GENERIC_ENTITY_tt:country_0 that are located here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
686	show me the closest restaurant that is to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
687	get reviews for restaurants with total reviews equaling NUMBER_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
688	locate the highest rated restaurants with a description equal to QUOTED_STRING_0 and a location matching work .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
689	i 'm looking for restaurants with a rating higher than NUMBER_0 and QUOTED_STRING_0 in the description .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
690	show restaurants and their price range near my home with a review count higher than NUMBER_0 .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
691	what is the food type of the restaurants with food type that of QUOTED_STRING_0 most far away from home ?	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
692	retrieve restaurants with the zip code QUOTED_STRING_0 and work as the location that has the tiniest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
693	what is the distance to the restaurants that have more than 1 review and that are closest to here to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) ) => notify
694	find the distance from work to restaurants with NUMBER_0 reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
695	which restaurant has address matching here and also a review count of NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
696	i need the number of the restaurant rated higher than NUMBER_0 closest to here .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
697	i would like to know the phone number for the closest restaurant to work with the lowest number of reviews .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
698	tell me what is the description of restaurants with NUMBER_0 or smaller rating	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
699	from here to my job what 's the closest NUMBER_0 review restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
700	bring up GENERIC_ENTITY_org.schema.Restaurant:Person_0 's reviews .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
701	show me the restaurants that have QUOTED_STRING_0 cuisine and a description with the word QUOTED_STRING_1 in it .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
702	which restaurant in the city of LOCATION_0 is the least amount of miles from home ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) ) [ 1 ] => notify
703	restaurants similar to QUOTED_STRING_0 with NUMBER_0 reviews and food style .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
704	what is the distance from home of the restaurant having fewer review count than NUMBER_0 farthest from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
705	what QUOTED_STRING_0 restaurants also serve QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
706	locate the restaurants that are the shortest distance from home which also have descriptions with QUOTED_STRING_0 in them .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
707	tell me the range to work from the nearest restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
708	get me the descriptions of restaurant having location equal to work	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
709	please show me the locations of restaurants having NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
710	fetch restaurant in GENERIC_ENTITY_tt:us_state_0 with served cuisine being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
711	find the city that has a restaurant that has a rating lower than NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
712	alert me what 's the explanation of dining locations with NUMBER_0 or less rating	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
713	can you get me the review that GENERIC_ENTITY_org.schema.Restaurant:Person_0 wrote that has a publication date before DATE_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
714	how close are the restaurant having country equivalent to GENERIC_ENTITY_tt:country_0 with the largest number of reviews from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) ) => notify
715	where is the restaurants inside this area	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
716	where are all restaurants with a rating of NUMBER_0 or more that serve QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
717	say what is the reviews of the most far away restaurants with fewer review count than NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
718	find a restaurant closest to my work and find the telephone number of the one with a rating lower than 1 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) => notify
719	present restaurant with food type equivalent to QUOTED_STRING_0 and review count equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
720	i would like the location of the restaurant that has a phone number that equals PHONE_NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
721	which are review having QUOTED_STRING_0 as description which was written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
722	what is the price range of restaurants with fewer review count than NUMBER_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
723	i want to find restaurants with 1 review or more .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
724	gather reviews having date published later than DATE_0 in restaurants near work	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
725	what is the zip code of restaurants with the review count of NUMBER_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
726	how many reviews in the restaurants with telephone equivalent to PHONE_NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
727	what is the number of evaluations does dining places having less than than 1 reviews have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
728	what are the prices at the QUOTED_STRING_0 restaurant that 's the greatest distance from home ?	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
729	which are the restaurants near here that cooks QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
730	show me the restaurant with cuisine that is QUOTED_STRING_0 and location is equal to home with the smallest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
731	what are review by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having description equivalent to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
732	i would like to know the type of food served by the restaurant that has under NUMBER_0 reviews that has the lowest number of reviews .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
733	how close are restaurant having zero reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
734	get restaurants with served cuisine being QUOTED_STRING_0 and country equal to GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
735	show me the number of restaurants that have a rating lower than NUMBER_0	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
736	when were the reviews with the best rating published ?	now => [ param:datePublished:Date ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
737	gather review rated NUMBER_0 star in restaurants rated NUMBER_1 star	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_1 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
738	what 's the farthest restaurant that has a zip code of QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
739	i 'd like to know what the restaurant that has QUOTED_STRING_0 in the zip code is called which is farthest from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
740	i 'd like to know of restaurants that have an id of QUOTED_STRING_0 that are farthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
741	how far away are the nearest restaurants with more than NUMBER_0 reviews to home to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
742	pull up restaurant having summary being QUOTED_STRING_0 and address equivalent to work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
743	what kind of prices are there at the restaurant that 's the least distance from home with a rating of below NUMBER_0 ?	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
744	seek the restaurant with rating lower than NUMBER_0 with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
745	show me restaurants that have QUOTED_STRING_0 in the summary and have a greater rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
746	give me the name of reviews with ratings above NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
747	what type of food is served at the farthest away QUOTED_STRING_0 restaurant and what are their phone numbers	now => [ param:servesCuisine:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
748	i need the phone number for the restaurant with a rating lower than NUMBER_0 that is farthest from here .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
749	show me reviews of restaurants with more than NUMBER_0 review count	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
750	show me what is the city of restaurant with rating at least NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
751	what is the cuisine of the restaurant with rating greater than NUMBER_0 farthest from here .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
752	seek QUOTED_STRING_0 restaurant having telephone equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
753	show me QUOTED_STRING_0 restaurants with NUMBER_0 or lower ratings .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
754	what is the current description of review having later date published than DATE_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) => notify
755	show restaurant reviews from GENERIC_ENTITY_org.schema.Restaurant:Person_0 that have NUMBER_0 stars .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
756	find me the rating of the restaurant that has QUOTED_STRING_0 in description	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
757	how close is the restaurants which is QUOTED_STRING_0 farthest from work to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
758	what is the total amount of reviews of the restaurants with no more than NUMBER_0 reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
759	display for me what is the name of restaurant having at most NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
760	how far from work is the restaurant with a rating below NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) => notify
761	could you tell me restaurants that have no reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
762	how many reviews are there for a restaurant with less than NUMBER_0 reviews that is far from work .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
763	tell me what restaurant serving QUOTED_STRING_0 is located	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
764	find the closest restaurants to here that are located at work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
765	get the closest restaurants with rating equivalent to NUMBER_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
766	find a restaurant with an address equaling home and over NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
767	fetch me the description of the restaurants with QUOTED_STRING_0 as postal code closest to work .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
768	in which state would i find restaurants with a less than NUMBER_0 review count ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
769	i desire restaurant having zip code being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
770	which are restaurant around here that serves QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
771	how many reviews are there that have at most a rating of NUMBER_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
772	what is the street of the restaurant that is by my work ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
773	i 'd like to know the price range of restaurants with ratings higher than NUMBER_0 with the most reviews .	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
774	how near is the dining business having zip code encompassing QUOTED_STRING_0 farthest from here from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
775	find every restaurant with QUOTED_STRING_0 in the description that has more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
776	which restaurant serving QUOTED_STRING_0 food has NUMBER_0 or more reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
777	which reviews get NUMBER_0 or more rating and is authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
778	gather both the description and phone number of the closest restaurants with more review count than 1 to here .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
779	i want to see the picture of a restaurant with more than NUMBER_0 reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
780	what is the description of the restaurants that are closest to QUOTED_STRING_0 ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
781	find the restaurant that serves QUOTED_STRING_0 food and rates NUMBER_0 or below .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
782	tell me the country of the restaurant that has a rating below NUMBER_0 and the least reviews .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
783	get dining locations in this area with telephone equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
784	get the description of restaurant having higher review count than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
785	alert me the street of the dining locales with postal code containing QUOTED_STRING_0 which is closest to work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
786	grab what is the country of restaurants with smaller rating than NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
787	what is the restaurants with served cuisine being QUOTED_STRING_0 and description being QUOTED_STRING_1 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
788	what country is restaurants with a rating of over NUMBER_0 located in ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
789	which dining locations around me having the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
790	tell me a restaurant close by that has a NUMBER_0 star rating with the biggest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
791	what rating do the restaurants in the city of LOCATION_0 have ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
792	show me the city of restaurants having NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
793	i 'd like to know the zip code for the farthest QUOTED_STRING_0 restaurant away from my job .	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
794	grab reviews with descriptions containing QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
795	get restaurant with food type equal to QUOTED_STRING_0 and state equal to GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
796	i 'd like to find a restaurant with the zip code of QUOTED_STRING_0 that is farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
797	how far away is restaurant with descriptions equal to QUOTED_STRING_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) => notify
798	i need QUOTED_STRING_0 restaurant with rating at minimum NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
799	how many miles away are those restaurants that have an id equaling QUOTED_STRING_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) => notify
800	those restaurants with ratings higher than NUMBER_0 and the fewest reviews are how close to this location ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
801	what are the furthest away restaurants you can find in GENERIC_ENTITY_tt:us_state_0 ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] => notify
802	display the restaurant with at least NUMBER_0 reviews that is farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
803	i 'd like to know of a review with a rating of under NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
804	tell me the names of the reviews with QUOTED_STRING_0 in the descriptions .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
805	tell me how far it is from work to restaurants with more than NUMBER_0 review count	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
806	what is the price range of the restaurant with a QUOTED_STRING_0 food type that is nearest to work	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
807	show me what kind of food and state restaurant definition are the same as GENERIC_ENTITY_tt:us_state_0	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
808	gather for me the price range of restaurants having telephone equal to PHONE_NUMBER_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
809	describe the cuisine at the QUOTED_STRING_0 restaurant closest to work	now => [ param:description:String , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
810	get restaurants having NUMBER_0 or larger rating that offer QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
811	where is the restaurants with 1 reviews with the highest amount of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) [ 1 ] ) => notify
812	find all reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 for restaurants that are close to me .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
813	how near is the restaurants with more review count than NUMBER_0 with the tiniest number of reviews from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
814	which restaurants have smaller rating than NUMBER_0 and are in GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
815	show me restaurant locations that have no reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
816	what restaurants contain description being QUOTED_STRING_0 and telephone equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
817	tell me the amount of reviews at a restaurant in GENERIC_ENTITY_tt:us_state_0 has that is the smallest distance to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
818	how far away is the restaurant having postal code containing QUOTED_STRING_0 farthest from here from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
819	say the descriptions of review with rating equivalent to 1	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == 1 ) => notify
820	what overview of reviews has a release date prior to DATE_0 ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
821	what is the summary of restaurants with NUMBER_0 or smaller rating .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
822	show me restaurants that have a bigger rating than one with the smallest amount of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] => notify
823	what are the restaurants with smaller review count than NUMBER_0 and cuisine being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
824	what is the restaurants having QUOTED_STRING_0 as description and location equivalent to here with the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
825	find restaurants around home with rating equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:home => notify
826	give me all the restaurants with a max review count that are rated at least NUMBER_0 and have QUOTED_STRING_0 in the description	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
827	what are the restaurants that are the most miles away and that can be reached at PHONE_NUMBER_0 ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
828	what is the restaurants around home that sells QUOTED_STRING_0 cuisine with the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
829	what 's the picture of restaurants with more than NUMBER_0 reviews furthest from home .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
830	show me where the restaurants are that serve QUOTED_STRING_0 and have a rating of at least NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
831	how near are the restaurants with less than NUMBER_0 reviews that are the most miles away from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
832	collect the restaurants having location equal to here with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
833	find a restaurant with QUOTED_STRING_0 in description that also serves QUOTED_STRING_1 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
834	give me a list of restaurants with a location equal to here and a rating of under NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
835	list restaurants having QUOTED_STRING_0 in the postal code and address equivalent to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
836	what is both the food type and image of the restaurants with fewer rating than NUMBER_0 that is closest to here .	now => [ param:image:Entity(tt:picture) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
837	i want to see the street for the restaurant that is rated NUMBER_0 or under .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
838	where is the dining locales with country equal to GENERIC_ENTITY_tt:country_0 that is most distant in distiction to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) => notify
839	what is the reviews of the furthest restaurants with greater rating than 1 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
840	show me the location of NUMBER_0 star rated restaurants .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
841	find restaurants near my work in zip code QUOTED_STRING_0 and show me their pictures .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
842	where are the restaurants with QUOTED_STRING_0 served cuisine and a minimum of NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
843	how near is the dining locales which is QUOTED_STRING_0 most distant in distiction to work to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
844	tell me restaurants nearby that sell QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
845	search restaurant with less than NUMBER_0 reviews and location equal to work .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:work => notify
846	the restaurant with here as its location has what as its zip code ?	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
847	what are GENERIC_ENTITY_org.schema.Restaurant:Person_0 's reviews ? and have a score of NUMBER_0 or more	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
848	what is the restaurant with the largest distance that has a phone number of PHONE_NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
849	recover restaurants with a QUOTED_STRING_0 score equivalent to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
850	how many restaurants with location equivalent to work are there	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
851	tell me the nearest restaurants having location equal to here to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
852	what is the restaurant price range with the lowest number of reviews ?	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
853	what are the restaurant around me with lower rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
854	what are QUOTED_STRING_0 restaurants inside GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
855	i would like to know which restaurants have a rating of NUMBER_0 or higher and in the country of GENERIC_ENTITY_tt:country_0 that has the most reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
856	restaurants with NUMBER_0 reviews are located in what state ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
857	how many reviews does restaurant having smaller than 1 reviews have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
858	what is the location of dining places greater than NUMBER_0 evaluations	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
859	what is the restaurant in this area that serves QUOTED_STRING_0 cuisines and has the tiniest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
860	what is the image of the restaurants with bigger rating than NUMBER_0 closest to home	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
861	point out restaurants near work that show NUMBER_0 or fewer reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:work => notify
862	give me the phone number of the restaurant that is the greatest distance from home and has a review count of greater than NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
863	what number of reviews are there in the restaurant that is rated 1 star that is closest to home ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] ) => notify
864	i want to see a list of nearby restaurants with a QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
865	get restaurant having NUMBER_0 reviews and summary being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
866	what summary do restaurants with a description equal to QUOTED_STRING_0 have ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
867	show me the restaurants having NUMBER_0 reviews that is closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
868	seek the food type of restaurants having at least NUMBER_0 reviews	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
869	get the photo of restaurant having greater review count than NUMBER_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
870	locate the restaurant without any reviews that is closest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
871	what is the zip code of the restaurant that is the furthest from the house .	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
872	show the address of restaurants with NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
873	i require QUOTED_STRING_0 restaurant with rating at least NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
874	get reviews submitted by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having date published before DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
875	get QUOTED_STRING_0 food-type restaurants and search no more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
876	fetch review uploaded by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having rating at most NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
877	gather for me what is the distance to restaurant with city containing LOCATION_0 from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
878	find a review that was published after DATE_0 and that GENERIC_ENTITY_org.schema.Restaurant:Person_0 wrote .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
879	tell me the cuisine offered by the restaurants that are nearest to here .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
880	what is the reviews of the closest restaurants with fewer review count than NUMBER_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
881	look for the restaurant that has a count of reviews under NUMBER_0 that is the most distance from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
882	tell me the closest restaurant with a phone number equal to PHONE_NUMBER_0 to home from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
883	tell me how near restaurants are with less than NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
884	i 'm interested in a restaurant that provides QUOTED_STRING_0 and that has a description that says QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
885	i like to know phone numbers for restaurants that have a review count of NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
886	i want to see reviews of the restaurant that has a review count of under NUMBER_0 with the tiniest review amount	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
887	say the restaurant with at least 1 review	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
888	show me the closest QUOTED_STRING_0 restaurants to me .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
889	give me the location of the NUMBER_0 star rated restaurant that is the furthest from work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
890	show me the restaurants having lower rating than NUMBER_0 and phone number equal to PHONE_NUMBER_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
891	seek the restaurant with location equal to here closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
892	i want reviews having rating at greatest NUMBER_0 and greater rating than NUMBER_1 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
893	where is the restaurant in GENERIC_ENTITY_tt:us_state_0 with the biggest number of reviews	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) => notify
894	what is the location of the QUOTED_STRING_0 restaurant with more than NUMBER_0 reviews ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
895	show me restaurants with QUOTED_STRING_0 cuisine that have a location of here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
896	find restaurants with NUMBER_0 reviews and their distance from home to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
897	give me the restaurant that has the number PHONE_NUMBER_0 and no more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
898	show me restaurants address near me	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
899	get the restaurant with at least NUMBER_0 reviews which is closest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
900	give me all restaurants in QUOTED_STRING_0 area that have a higher rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
901	tell me how close QUOTED_STRING_0 restaurants are that 's nearest to my job .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
902	show me reviews with a better rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
903	i 'd like to know what country restaurants with a rating above NUMBER_0 are in .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
904	search out the city of restaurants having location equal to here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
905	get me what is the city of restaurant with rating at least NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
906	fetch me what is the zip code of restaurant having city equal to LOCATION_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
907	tell me how close are restaurants without reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
908	how far away is the restaurant with phone number PHONE_NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
909	what are all the QUOTED_STRING_0 restaurants located near here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
910	show me the closest restaurant with review count less than NUMBER_0 to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
911	what restaurant has the lowest rating of QUOTED_STRING_0 as served kitchen and review count equal to NUMBER_0	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
912	what is the restaurants in this area with served cuisine being QUOTED_STRING_0 with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
913	tell me the food type that is served in restaurants that have the food type QUOTED_STRING_0 that have the largest distance from home	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
914	i need a review that was published after DATE_0 and was rated over NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
915	search review having writer equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
916	recover a restaurant with more than NUMBER_0 ratings serving QUOTED_STRING_0 with a minimum score	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
917	which restaurant has QUOTED_STRING_0 cuisine and gets the lowest rating in this area ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
918	alert me what 's the country of dining locales rated NUMBER_0 star	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
919	what is the location of the restaurants containing QUOTED_STRING_0 in the description closest to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
920	what is a rating of the closest restaurant from here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
921	how many total reviews in the restaurant rated NUMBER_0 star which is most far away from work ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
922	what restaurants in my area have a total of NUMBER_0 reviews or higher and the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
923	i 'd like to know of the restaurant with maximum NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
924	tell me the description of the restaurant with QUOTED_STRING_0 in the description that is the farthest away .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
925	get me what is the city of restaurant with lower rating than NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
926	what are all the GENERIC_ENTITY_tt:us_state_0 restaurants with over NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
927	text me restaurants nearby in GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
928	what is the restaurant having served cuisine being QUOTED_STRING_0 and phone number equivalent to PHONE_NUMBER_0 with the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
929	which state is home to a restaurant with descriptions of QUOTED_STRING_0 ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
930	what is the state of the restaurant with QUOTED_STRING_0 as postal code with the largest amount of reviews	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
931	get me what is the rating of the restaurants with postal code containing QUOTED_STRING_0 that is closest to here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
932	which is the restaurants with zero reviews nearest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
933	seek the restaurants around work having state equal to GENERIC_ENTITY_tt:us_state_0 which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
934	what 's the distance to restaurants with no reviews that is farthest from work to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
935	fetch me the reviews of the restaurant which has the minimum review count	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
936	get the restaurant with rating larger than 1 .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) => notify
937	the restaurant located in QUOTED_STRING_0 and that has the most reviews is in what state ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
938	what 's the country with restaurants that have a rating under 1 ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
939	enumerate dining locations which offers QUOTED_STRING_0 and having country equal to GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
940	what is the full address of restaurant around me .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
941	show me what is the zip code of restaurants having review count equal to NUMBER_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
942	what are the dining locations in here that offer QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
943	get me the description of the restaurant having postal code containing QUOTED_STRING_0 nearest to home	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
944	how many reviews does the QUOTED_STRING_0 restaurants have that is closest to work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
945	what is the phone number of restaurants with a rating greater than NUMBER_0 ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
946	what restaurants are there that are in GENERIC_ENTITY_tt:country_0 and have QUOTED_STRING_0 in their details ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:description:String =~ QUOTED_STRING_0 => notify
947	what are review by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having description equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
948	how many total reviews are there in the farthest restaurants which offer QUOTED_STRING_0 food from work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
949	text me the name of the restaurants having QUOTED_STRING_0 as food type that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
950	show how many reviews the nearest restaurant has .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
951	please indicate a restaurant in GENERIC_ENTITY_tt:us_state_0 that features QUOTED_STRING_0 dishes .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
952	show me the reviews of restaurant having location equivalent to work	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
953	what reviews have QUOTED_STRING_0 as a description and a rating that is less than NUMBER_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
954	i would like to know which review has a description that equals QUOTED_STRING_0 and whose rating is above NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
955	show me the phone numbers of restaurants with a rating greater than NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
956	for here as a location , show me price ranges of restaurants	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
957	what is a QUOTED_STRING_0 restaurant with a NUMBER_0 rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
958	what 's the rating of the review dated sooner than DATE_0 ?	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
959	looking for restaurants who have a summary QUOTED_STRING_0 and minimum rating of NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
960	tell me the city of the restaurant with less than NUMBER_0 reviews that is closest to here .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
961	seek the restaurants having descriptions containing QUOTED_STRING_0 that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
962	which are restaurants with NUMBER_0 reviews and cuisine type equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
963	what 's the telephone of the dining locations which having the highest rating	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
964	i want restaurants that serve QUOTED_STRING_0 and have a rating of NUMBER_0 or more .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
965	i would like to know the country of the restaurants that are the least distance from work and that have QUOTED_STRING_0 as a postal code .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
966	what is the restaurant rated only 1 star which is farthest from work ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
967	what restaurants have a rating at least at level NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
968	how are the reviews of restaurants with QUOTED_STRING_0 menus ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
969	tell me how far the restaurant furthest away from here and it 's distance .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
970	what are the QUOTED_STRING_0 restaurants with the same address ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
971	i want to know the country for the restaurant the largest distance from work .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
972	fetch the closest restaurants with rating equal to NUMBER_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
973	find restaurants that sell QUOTED_STRING_0 food and that are nearby	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
974	which restaurant serves QUOTED_STRING_0 for cuisine and has a postal code of QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
975	what is the distance to the restaurant that is farthest away from here from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
976	what restaurant with a location equaling work is furthest from here ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
977	i demand restaurant having NUMBER_0 or lower review count and smaller rating than NUMBER_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
978	fetch me the street of restaurant with QUOTED_STRING_0 in the cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
979	what 's the rating of the nearest restaurants with more than NUMBER_0 reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
980	tell me restaurants with a review count of NUMBER_0 that have the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] => notify
981	what restaurants are around home and sells QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
982	how near are the restaurant having fewer review count than NUMBER_0 with the tiniest number of reviews to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) ) => notify
983	what is the image of the restaurant with more review count than NUMBER_0 which is closest to work ?	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
984	show me a restaurant that serves QUOTED_STRING_0 and that has a review count of exactly NUMBER_0 and the worst rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
985	what QUOTED_STRING_0 restaurants can you name that have fewer than NUMBER_0 stars and the least number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
986	find a restaurant near me that has a zip code QUOTED_STRING_0 and a minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
987	get me the price range of the closest restaurants with QUOTED_STRING_0 in the description to home .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
988	show me what is the distance from home of restaurants having 1 reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) => notify
989	please get restaurants having location equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home => notify
990	where are restaurants with NUMBER_0 or more review numbers and work-like addresses ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) => notify
991	find me reviews of restaurants in LOCATION_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
992	tell me the QUOTED_STRING_0 restaurants in this vicinity .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
993	tell me the furthest restaurant away from my home that has the fewest reviews .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
994	show me restaurants with no fewer than NUMBER_0 reviews and location equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:current_location => notify
995	message me what is the review count of the restaurants with QUOTED_STRING_0 in the description with the least reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
996	which restaurant rated 1 stars is the greatest distance from my home ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
997	i want a restaurant with a rating greater than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
998	fetch restaurants with review count equal to NUMBER_0 and location equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
999	what is both the cuisine and total review count of the restaurants with food type being QUOTED_STRING_0 that is closest to here .	now => [ param:aggregateRating.reviewCount:Number , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1000	give me picture of restaurants with the most reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1001	what is the rating and name of the most far away dining places which specialize in QUOTED_STRING_0 food from here ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1002	what restaurants have QUOTED_STRING_0 in their description and have a rating of NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) => notify
1003	tell me how many reviews the closest restaurant has	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1004	seek for me what is the zip code of restaurant having city equal to LOCATION_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
1005	which restaurants is currently rated NUMBER_0 star and in here	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
1006	please put forth the top-scoring restaurant that posts above NUMBER_0 reviews and includes QUOTED_STRING_0 in its overview .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1007	show me a picture of the closest restaurant with QUOTED_STRING_0 description .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1008	list restaurants that have no reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
1009	which QUOTED_STRING_0 restaurant has the smallest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1010	show me the rating for restaurants nearest here within the QUOTED_STRING_0 postal code	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1011	what eateries here in GENERIC_ENTITY_tt:country_0 has the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1012	how many total reviews does the restaurants with higher review count than NUMBER_0 which is closest to here have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1013	i want a restaurant with QUOTED_STRING_0 food and NUMBER_0 or more reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1014	name the type of cuisine and location of the closest QUOTED_STRING_0 restaurant .	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1015	what restaurant near me has the greatest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
1016	what is the description of the dining places with rating lower than NUMBER_0 most far away from home ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1017	which restaurants around me having NUMBER_0 or grander review count has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1018	show me the country of restaurants in zip code QUOTED_STRING_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1019	which restaurant in GENERIC_ENTITY_tt:us_state_0 has a review count of greater than NUMBER_0 and the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
1020	find for me the restaurants that have NUMBER_0 reviews or more and NUMBER_1 star ratings .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number == NUMBER_1 => notify
1021	which NUMBER_0 star restaurants are near work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
1022	what restaurants in GENERIC_ENTITY_tt:country_0 have the least number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1023	i want to see an image of restaurant around here	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1024	fetch the restaurants with QUOTED_STRING_0 as summary and country equal to GENERIC_ENTITY_tt:country_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1025	what street are restaurants with a review count of under NUMBER_0 that are closest to work located on ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1026	please list restaurant having summary equivalent to QUOTED_STRING_0 and postal code containing QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:description:String =~ QUOTED_STRING_0 => notify
1027	find the restaurants having location equal to home nearest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) ) [ 1 ] => notify
1028	ask me the rundown of the number of restaurants with QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1029	which restaurant having QUOTED_STRING_0 as description and phone number equivalent to PHONE_NUMBER_0 gets the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
1030	fetch the telephone of restaurant having higher review count than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1031	what are the restaurants in this location rated with NUMBER_0 stars ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
1032	what restaurant has a phone number PHONE_NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1033	what are the restaurants closest to work with the description QUOTED_STRING_0 ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1034	pinpoint restaurants in the vicinity of home that have the most reviews and include QUOTED_STRING_0 in their overview .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
1035	find the zip code of restaurants with review count over NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1036	what 's the QUOTED_STRING_0 restaurant road with the highest rating ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1037	name the restaurant with more than 1 review	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
1038	what 's the location of restaurants with phone number of PHONE_NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
1039	reveal the name of the restaurant which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
1040	seek QUOTED_STRING_0 restaurants around work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1041	tell me the description of the closest restaurant with a rating under NUMBER_0 to my job .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1042	how far are the restaurant having country equivalent to GENERIC_ENTITY_tt:country_0 that is nearest to work from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
1043	for the restaurant that has a rating of under NUMBER_0 and the lowest number of reviews , what is the country ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
1044	which are the restaurant having review count not higher than NUMBER_0 which offer QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1045	tell me restaurants with country equivalent to GENERIC_ENTITY_tt:country_0 and postal code equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
1046	at phone PHONE_NUMBER_0 what are the restaurants listed ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1047	display me the score for restaurants over 1 with the lowest number of reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] ) => notify
1048	how many restaurants share the location of home ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
1049	show me reviews furthest from my job in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
1050	get the state of restaurants having food type equal to QUOTED_STRING_0 ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1051	please list restaurant with served cuisine equivalent to QUOTED_STRING_0 and review count equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1052	what are the work area restaurants with a summary equaling QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
1053	show me what is the telephone of restaurant having rating equal to NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
1054	how near to home are those restaurants having NUMBER_0 reviews that are the furthest away from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1055	tell me just how close the restaurants with zip code QUOTED_STRING_0 is with the smallest number of reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
1056	what is the furthest restaurant from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
1057	find the restaurant in this area having postal code equivalent to QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1058	fetch the restaurant with id equal to QUOTED_STRING_0 which is most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1059	bring up reviews having later date published than DATE_0 and creator equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
1060	what are the QUOTED_STRING_0 restaurants in the postal code and at least NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1061	give me the restaurants that have a rating of NUMBER_0 or lower and whose reviews contain QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:description:String =~ QUOTED_STRING_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) and param:reviewRating.ratingValue:Number <= NUMBER_0 } => notify
1062	what distance away are the restaurants rated NUMBER_0 stars from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
1063	show all the reviews that have been written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
1064	find me the zip code of restaurants with numebr of reviews less than 1	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
1065	list restaurants in the same zip code as home or QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
1066	tell me where is the restaurants around work in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) => notify
1067	name restaurants that are located at home and have QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1068	what is the state of a restaurant that has no reviews .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
1069	seek for me what is the distance from here to restaurants having telephone equal to PHONE_NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
1070	get the rating of restaurants having location equal to here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1071	give me the reviews made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with the publishing date after DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
1072	which are restaurant rated NUMBER_0 star having cuisine being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1073	i would like to know the restaurant that has QUOTED_STRING_0 as it summary and the lowest rating and that has over NUMBER_0 reviews .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1074	give me all the restaurants with at least a NUMBER_0 rating in GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1075	amount of evaluations does the dining locales having less than than NUMBER_0 reviews that is most far away in distiction to home have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1076	list the QUOTED_STRING_0 restaurant with the least number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1077	seek the QUOTED_STRING_0 restaurant closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1078	please fetch restaurant here having postal code equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
1079	show me then nearest restaurant with QUOTED_STRING_0 in its description .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
1080	where is the restaurant with QUOTED_STRING_0 as served food type and rating at least NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1081	tell me what street restaurants with the maximum rating are on .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1082	what restaurants get summary that are QUOTED_STRING_0 and are around work	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
1083	get me what is the rating and country of the restaurant that offer QUOTED_STRING_0 cuisine most far away from work	now => [ param:address.addressCountry:Entity(tt:country) , param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1084	find for me the restaurants that have a postal code of QUOTED_STRING_0 and whose address equals home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
1085	i 'm looking for a restaurant near me that has a postal code of QUOTED_STRING_0 and the tiniest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1086	how near is the restaurant with the least amount of reviews in the area .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
1087	find restaurant having more review count than NUMBER_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1088	get me restaurants with summary being QUOTED_STRING_0 and food type equal to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1089	how near are the QUOTED_STRING_0 restaurant that is closest to work from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
1090	find me what is the street address of restaurant with NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
1091	list dining locations having QUOTED_STRING_0 that is in zip code and the same address to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
1092	look for the restaurant with review count larger than NUMBER_0 which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1093	find for me restaurants around work having NUMBER_0 or lower review count .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:work => notify
1094	where are the restaurants with a QUOTED_STRING_0 score of NUMBER_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) => notify
1095	can you find a restaurant that has NUMBER_0 or less ratings and is located around my house ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:home => notify
1096	which are the review having rating not bigger than NUMBER_0 of restaurants with country equal to GENERIC_ENTITY_tt:country_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1097	get me what is the distance from work to the closest restaurants to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
1098	retrieve the dining locations around home having QUOTED_STRING_0 as description with the highest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
1099	search the dining locations having QUOTED_STRING_0 that is in postal code which offers QUOTED_STRING_1 with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
1100	give me a street that has a QUOTED_STRING_0 restaurant on it .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1101	get me the distance from here to restaurants in LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
1102	give me the city name of the restaurant located in the state of GENERIC_ENTITY_tt:us_state_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
1103	i want a restaurant furthest from home with more than NUMBER_0 reviews to have their pictures .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1104	show me an image of restaurants with a rating under NUMBER_0 that are the biggest distance from home	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1105	what price range would one find at QUOTED_STRING_0 restaurants ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1106	give me the restaurant road with the highest number of reviews being QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1107	what are the restaurants with a review count that 's below NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
1108	this restaurant has QUOTED_STRING_0 cuisine and is in the GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1109	show me the farthest restaurants that have at least NUMBER_0 reviews	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1110	what dining locations get no less than than NUMBER_0 evaluations and are rated NUMBER_1 star	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number == NUMBER_1 => notify
1111	how near are the restaurant with smaller rating than NUMBER_0 with the least reviews from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) ) => notify
1112	how far away are the restaurant having fewer than 1 reviews with the most reviews from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) ) => notify
1113	which restaurants have a phone number of PHONE_NUMBER_0 , a rating smaller than NUMBER_0 , and the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
1114	find all restaurants rated no more than NUMBER_0 that has more than NUMBER_1 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
1115	tell me the restaurant that is in the state equal to GENERIC_ENTITY_tt:us_state_0 and that serves QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1116	grab the name of restaurants having location equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location => notify
1117	give me the postal code for the closest restaurant to work that offers QUOTED_STRING_0 cuisine .	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1118	tell me the restaurants close to here having QUOTED_STRING_0 as summary which has the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1119	for a restaurant that 's gotten NUMBER_0 reviews , what amount of reviews applies to them ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
1120	what country can i find restaurants with a review count greater than 1	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
1121	seek the most far away restaurant having rating equal to 1 from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
1122	can you tell me restaurants in QUOTED_STRING_0 zip code that are closest to here ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1123	what city is the restaurant with the fewest reviews located in ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1124	what restaurant are nearby and have rating equivalent to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
1125	where are the restaurants located equal to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
1126	get the restaurants with location equal to work which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
1127	what 's the distance of NUMBER_0 star restaurants from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
1128	i need restaurant having NUMBER_0 or smaller review count and smaller rating than NUMBER_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
1129	what restaurant can you find that has QUOTED_STRING_0 food and a score of NUMBER_0 or above ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1130	what restaurant have served food type equal to QUOTED_STRING_0 and postal code containing QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1131	text me the location of restaurant rated NUMBER_0 stars	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
1132	i 'd like to see reviews left by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
1133	i need dining locations having QUOTED_STRING_0 that is in cuisine and rating not more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1134	where are the QUOTED_STRING_0 restaurants in the same postal code and location ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) => notify
1135	restaurants serving QUOTED_STRING_0 cuisine have what kind of price range ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1136	i 'm looking for restaurants that feature QUOTED_STRING_0 cuisine and are rated NUMBER_0 and under .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1137	where is the most distant restaurant with the QUOTED_STRING_0 postal code ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1138	from my job , show the farthest restaurant address with more than NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1139	what is the distance of restaurants with a review count of below NUMBER_0 from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
1140	which state has QUOTED_STRING_0 food restaurants ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1141	find a restaurant near my home that has the phone number PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1142	show an image for a restaurant with a review count over NUMBER_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1143	i want restaurants with a description that includes QUOTED_STRING_0 and also have a rating of NUMBER_0 or more and the maximum amount of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1144	what is the price range of the restaurants with the smallest review count	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1145	tell me the cuisine of restaurants with a higher rating of more than NUMBER_0 that 's furthest from here .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1146	what kind of food do QUOTED_STRING_0 restaurants farthest from home serve ?	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1147	i am interested in seeing a photo of a restaurant with a bigger review count than NUMBER_0 that is the closest to work	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1148	name the country containing restaurants with a rating equaling NUMBER_0 .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
1149	fetch the restaurant having review count equal to NUMBER_0 most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
1150	how close to home are restaurants at PHONE_NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1151	i would like to know QUOTED_STRING_0 restaurants that are closest to me	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location => notify
1152	where is the farthest restaurant having postal code equivalent to QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1153	what is the image of the most far away restaurants with rating bigger than NUMBER_0 from home	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1154	get restaurant having country equivalent to GENERIC_ENTITY_tt:country_0 and phone number equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1155	how far away is the closest restaurants in GENERIC_ENTITY_tt:us_state_0 to work to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
1156	show me reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with a published date before DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
1157	show the restaurant that has QUOTED_STRING_0 in the zip code with the greatest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1158	what restaurant near home as a summary equaling QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
1159	find the nearest to home restaurants without a review .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
1160	what is the postal code of the nearest restaurant to here	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1161	i am looking for a restaurant with NUMBER_0 stars with many reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) [ 1 ] ) => notify
1162	can you find me a place to eat that is located where i am right now and that serves QUOTED_STRING_0 food as it 's cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1163	what 's the location of the restaurant with a description equal to QUOTED_STRING_0 that is the largest distance from work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1164	what places to eat have NUMBER_0 or more reviews and are located nearby ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:current_location => notify
1165	where is the nearest dining locales having phone number equal to PHONE_NUMBER_0 to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
1166	locate some restaurants with a postal code equal to QUOTED_STRING_0 that have QUOTED_STRING_1 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1167	what is a restaurant that has no less than NUMBER_0 reviews and location is the same as work .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:work => notify
1168	look up reviews with QUOTED_STRING_0 as a description that were written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 , and of those , give me the one with the worst rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1169	how nearby are the nearest food-type restaurants to work QUOTED_STRING_0 from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
1170	please get reviews having rating equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
1171	in what country are there restaurants with a lower rating than NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1172	what is the distance for the restaurant that has over NUMBER_0 reviews that is closest to here from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1173	i require reviews that was submitted by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
1174	around here what QUOTED_STRING_0 restaurants are there	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1175	find the location of the restaurant with a QUOTED_STRING_0 menu and a review count higher than NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1176	show me the restaurant with a review count of NUMBER_0 or lower that serves QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1177	fetch the descriptions of restaurants with smaller review count than NUMBER_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1178	find restaurants near me with a phone number PHONE_NUMBER_0 and that has a minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
1179	i want to see restaurants with the lowest review number .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
1180	which are the restaurant around home having NUMBER_0 or greater review count ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
1181	what is the street of restaurant with QUOTED_STRING_0 as cooked cuisine ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1182	say what 's the name of the restaurant in this area with the highest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
1183	which restaurants have a review count of NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
1184	how close is the restaurant from work that sells QUOTED_STRING_0 cuisine with the smallest reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
1185	let me see which restaurant is located in the same place as work and is the furthest away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
1186	what descriptions apply to restaurants that have a review count exceeding NUMBER_0 ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1187	show me what is the description of the QUOTED_STRING_0 dining placess which has the smallest ratings	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1188	get review having later date of publication than DATE_0 and summary being QUOTED_STRING_0 of restaurants around work .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1189	find restaurants with the description that says QUOTED_STRING_0 in the address here with the smallest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1190	what review has a publication date after DATE_0 and has a summary that is entitled QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
1191	grab me the restaurant with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
1192	tell me restaurants that have at least NUMBER_0 reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1193	which QUOTED_STRING_0 restaurants nearby have the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1194	grant me the restaurant 's range	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) => notify
1195	what restaurant closest to home has at least NUMBER_0 reviews	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1196	fetch me the food type of restaurants having lower rating than NUMBER_0	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1197	tell me the phone number of the nearest restaurant with a rating lower than 1 that 's closest to work .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) => notify
1198	give me the address of restaurants that have the least reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1199	find me a restaurant that serves QUOTED_STRING_0 food and has a rating that is equal to NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1200	what is the summary of restaurants with NUMBER_0 or tinier rating .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1201	i would like to see the restaurant with the maximum number of reviews and a phone number equal to PHONE_NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
1202	how far away is the restaurants with review count equal to NUMBER_0 with the smallest count of reviews from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) ) => notify
1203	what are the QUOTED_STRING_0 restaurants with a NUMBER_0 rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1204	what is the price range of the restaurants with larger rating than NUMBER_0 with the highest number of reviews	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
1205	what 's the rating of the farthest restaurant that serves QUOTED_STRING_0 cuisine ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1206	i want to know what the restaurant is that has a review count of NUMBER_0 or higher and that has an address that is equal to work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work => notify
1207	i want you to find for me the restaurants with a postal code of QUOTED_STRING_0 in here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
1208	what restaurants are there with a rating of not more than NUMBER_0 and an address equal to work	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
1209	give me the rating of the review dated sooner than DATE_0 .	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
1210	give me the phone number of the nearest restaurant in postal code QUOTED_STRING_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1211	fetch restaurants with larger rating than NUMBER_0 and postal code being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1212	i need a restaurant with more than NUMBER_0 reviews , which is the farthest of those from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1213	retrieve restaurants with the rating of minimum NUMBER_0 and GENERIC_ENTITY_tt:us_state_0 being the state	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1214	list restaurants serving QUOTED_STRING_0 food with an address matching here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1215	get the zip code of restaurant having no reviews	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
1216	i want the description of the closest restaurant to here that has more than NUMBER_0 stars .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1217	fetch me the image of the restaurants with rating fewer than NUMBER_0 most far away from home	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1218	find a restaurant with a summary equivalent to QUOTED_STRING_0 in the vicinity of home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
1219	what are the restaurants with the same address as work and a QUOTED_STRING_0 description ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
1220	find reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
1221	what 's the most reviewed restaurant in GENERIC_ENTITY_tt:us_state_0 ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) => notify
1222	let 's see the restaurant with less than NUMBER_0 reviews that 's furthest from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
1223	what amount of miles would one have to travel from home to reach a restaurant in the city of LOCATION_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
1224	how many ratings are there in GENERIC_ENTITY_tt:us_state_0 's restaurant that is far from work ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
1225	what evaluations have date published after DATE_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
1226	find the restaurants that offer QUOTED_STRING_0 and have a review score of more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1227	how far is the restaurant with only 1 review away from my job .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
1228	what restaurant has a higher review count than NUMBER_0 and an address which equals home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
1229	what 's the road of dining locations near here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1230	can you tell me how many restaurants that have a location equal to work there are ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
1231	grab the location of the restaurants closest to my job .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1232	tell me the email of the most remote restaurant with a score of less than NUMBER_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1233	i want to know the country of the restaurant that is the largest distance of work	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1234	what is the restaurants with rating smaller than NUMBER_0 closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
1235	what restaurant has a rating greater than NUMBER_0 and is farthest from home ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1236	search restaurants having postal code being QUOTED_STRING_0 and cuisine containing QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1237	what are restaurants near home that offer QUOTED_STRING_0 food with a minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1238	near work , how many reviews are there in QUOTED_STRING_0 restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1239	tell me where restaurants with a rating of NUMBER_0 that 's nearby my home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
1240	for the restaurant that is QUOTED_STRING_0 what would its rating be ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1241	tell me which restaurant that has QUOTED_STRING_0 in the description is furthest from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1242	tell me what is the rating of restaurants with QUOTED_STRING_0 as summary	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1243	what 's the state of restaurant here	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1244	which restaurants here that have NUMBER_0 reviews or less and get the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1245	tell me the distance to the restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) => notify
1246	what is the rating of the restaurants with the fewest number of reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1247	what restaurant are inside this area and get phone number equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1248	show me the zip code for restaurant that has QUOTED_STRING_0 in the descriptions	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1249	what 's the dining locales with served cuisine being QUOTED_STRING_0 and description being QUOTED_STRING_1 which has the maximum number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1250	i would like to see the street for the restaurants that have maximum rating .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1251	what is a restaurant with a postal code of QUOTED_STRING_0 and a score greater than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1252	what places to eat feature QUOTED_STRING_0 cuisine and are situated in the country of GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1253	what is a location for restaurants that have NUMBER_0 or less review count	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1254	which is the nearby restaurant serving QUOTED_STRING_0 cuisine with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1255	tell me the location of the restaurant with the phone number PHONE_NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
1256	i want the reviews placed after DATE_0 with only a single review .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1257	which is the restaurant with the biggest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
1258	which is the restaurants with no reviews with the fewest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) [ 1 ] => notify
1259	seek restaurant rated NUMBER_0 star having postal code equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
1260	what phone number would apply to a restaurant with zero reviews ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
1261	what is the restaurant here with greater rating than NUMBER_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1262	text me the zip code of restaurant having id equal to QUOTED_STRING_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
1263	give me all of the restaurants with no less than NUMBER_0 reviews and are located near work .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:work => notify
1264	get dining locations with served cuisine being QUOTED_STRING_0 and description equal to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1265	which are the restaurants with location equal to work and rating at minimum NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
1266	what 's a restaurant far away from work with less than NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1267	find restaurants in this area that have a review count of over NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
1268	amount of evaluations do the dining locales with number of reviews equal to NUMBER_0 that is most distant in distiction to work have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
1269	find restaurant images that are rated higher than NUMBER_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
1270	what do restaurants rated above NUMBER_0 that are furthest away from here have on their menu ?	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1271	show me the review of restaurants that have NUMBER_0 reviews which are written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1272	show me the name and price range of the restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
1273	get restaurants with served food type being QUOTED_STRING_0 and rating not more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1274	tell me what city the restaurant with a rating greater than NUMBER_0 is located in	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
1275	please get review having less rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
1276	give me the street of a restaurant with less than NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1277	i would like to see the review that has a rating of above NUMBER_0 and has a date published of later than DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
1278	fetch restaurant having NUMBER_0 reviews and summary being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1279	gathe the state of restaurants having food type equal to QUOTED_STRING_0 ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1280	fetch me restaurants which offer QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1281	gather the most far away restaurants having descriptions containing QUOTED_STRING_0 from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1282	find the closest restaurant to here that has no reviews .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
1283	give me restaurants that are farthest from home with a rating less than NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
1284	i 'd like to see a restaurant with a rating that has NUMBER_0 or more with QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1285	show all less than NUMBER_0 star reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1286	which restaurants with QUOTED_STRING_0 in the cuisine and QUOTED_STRING_1 as description gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1287	what 's the summary given to restaurants that have been rated NUMBER_0 or less ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1288	what QUOTED_STRING_0 restaurant is closest to my house ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1289	gather the restaurant having location equal to work which is farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
1290	give me all the restaurants with more than NUMBER_0 reviews that serve QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1291	show me a list of restaurants around here with a rating lower than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
1292	what is the location of the furthest restaurants from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1293	find QUOTED_STRING_0 restaurants that have QUOTED_STRING_1 for their summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1294	what restaurants with a home address have a NUMBER_0 or less rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home => notify
1295	what index of reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 features a QUOTED_STRING_0 introduction ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
1296	what is the description of restaurant cooking QUOTED_STRING_0 in the cuisine	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1297	what 's the dining locales with rating less than NUMBER_0 and also closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
1298	list restaurants with a QUOTED_STRING_0 description and a score greater than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1299	show me the restaurants that serve QUOTED_STRING_0 food and greater than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1300	how far is the restaurant with a score below NUMBER_0 that is far from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1301	i 'd like to see the reviews for the nearest restaurants with a review count lower than NUMBER_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1302	which QUOTED_STRING_0 restaurants have a QUOTED_STRING_1 summary ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1303	please gather reviews having rating equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
1304	show me restaurant descriptions with less than NUMBER_0 review count	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1305	tell me the furthest restaurant that has no reviews from my home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
1306	what is the phone number of those restaurants found in QUOTED_STRING_0 ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
1307	please give me the phone number for a restaurant that 's got a rating equaling NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
1308	what is the current rating of restaurant having postal code being QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
1309	i want to know the restaurant that has the lowest count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
1310	give me the restaurants in GENERIC_ENTITY_tt:country_0 with no more than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1311	how far away is the farthest restaurant with a rating greater than NUMBER_0 ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1312	find me restaurant telephone numbers that serve QUOTED_STRING_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1313	show me distance from home to restaurant with same location as work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
1314	what is the country of restaurant having larger than 1 reviews	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
1315	seek for me the city of restaurant with at least NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1316	i want to know the city of restaurants with review count equal to NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
1317	get restaurants in this area having tinier rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
1318	show me restaurants in zip code QUOTED_STRING_0 offering QUOTED_STRING_1 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1319	i 'm looking for the location of restaurant with NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
1320	find restaurants with QUOTED_STRING_0 in the description and are rated lower than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:description:String =~ QUOTED_STRING_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) and param:reviewRating.ratingValue:Number <= NUMBER_0 } => notify
1321	what are the restaurant that sale QUOTED_STRING_0 food and with rating equal to NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1322	what is the distance to work of the closest restaurant in zip QUOTED_STRING_0 to work with the least reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
1323	list restaurant having telephone number equal to PHONE_NUMBER_0 and QUOTED_STRING_0 as summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1324	what restaurants in the vicinity of work have a NUMBER_0 rating and the least number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
1325	what is the distance from home of the restaurants with rating larger than NUMBER_0 with the smallest number of reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
1326	what restaurant with a QUOTED_STRING_0 menu has a summary matching QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1327	please list restaurants having summary equivalent to QUOTED_STRING_0 and more review count than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1328	i want restaurants with at least 1 review	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
1329	i 'm interested in the restaurant that has a QUOTED_STRING_0 i the zip code and has the biggest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1330	what are the ratings of the most remote restaurants above 1	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
1331	show me the city of restaurant having QUOTED_STRING_0 in the cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1332	what reviews have QUOTED_STRING_0 in the description and were published after DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
1333	show me the restaurant with a NUMBER_0 star rating in GENERIC_ENTITY_tt:us_state_0 state .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
1334	show me furthest restaurant with more than one review .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
1335	how far away is the restaurant having more than NUMBER_0 reviews which is closest to here from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1336	give me all the restaurants that have the zip code QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
1337	find QUOTED_STRING_0 restaurants with the maximum review count and QUOTED_STRING_1 in the description .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1338	fetch the restaurants having descriptions containing QUOTED_STRING_0 closest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1339	what are the restaurants serving QUOTED_STRING_0 food with a location matching home ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1340	gather the name of review having descriptions equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
1341	what score do you show for the restaurant in zip code QUOTED_STRING_0 ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
1342	tell me of the restaurant that has a less than 1 rating that is closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] => notify
1343	what is the price range for the closest restaurants to work that have QUOTED_STRING_0 .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1344	which reviews get date of publication before DATE_0 and is by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
1345	which are the restaurant having the same address to home which offer QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1346	please provide a list of QUOTED_STRING_0 restaurants in GENERIC_ENTITY_tt:us_state_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1347	which are QUOTED_STRING_0 restaurants in the kitchen and telephone number + PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1348	which is the restaurant having number of evaluations not more than NUMBER_0 and served cuisine being QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1349	what country is the cuisine from of the restaurant with a rating above NUMBER_0 furthest from my home .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1350	what is the description of restaurant serving QUOTED_STRING_0 in the cuisine	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1351	where is the dining places with country equal to GENERIC_ENTITY_tt:country_0 that is farthest from home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) => notify
1352	show me what is the telephone of restaurant having rating not higher than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1353	show me the restaurant that is far from work which has a rating of NUMBER_0 stars .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
1354	which restaurant with an id equal to QUOTED_STRING_0 is farthest away from my location ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1355	please find the restaurant nearest to work that has a location that 's here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
1356	how close is the restaurant with rating larger than NUMBER_0 with the largest count of reviews from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
1357	what 's the restaurant most near home that also has an under NUMBER_0 review count ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
1358	what are restaurants having QUOTED_STRING_0 as description and review count bigger than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1359	what is the location of the highest rated QUOTED_STRING_0 restaurant ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1360	look for restaurants with NUMBER_0 or less reviews and location that is work	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:work => notify
1361	gather the rating of restaurants having telephone equal to PHONE_NUMBER_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
1362	bring forth evaluations having later date published than DATE_0 and creator equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
1363	i would like to see reviews published prior to DATE_0 that were authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
1364	grab me the description of the restaurants with QUOTED_STRING_0 as postal code closest to work .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1365	what is a image of restaurant around here	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1366	i want to see restaurants with less than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1367	search review having author of GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
1368	i 'd like to see a review that was created before DATE_0 .	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
1369	tell me how many reviews of restaurants with a lower number of NUMBER_0 that are furthest away from my location .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1370	how far away is the restaurant that has zero reviews and is the greatest distance from work to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
1371	what number of reviews do restaurants in QUOTED_STRING_0 have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
1372	what is the location of restaurants under NUMBER_0 that are nearest to here ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1373	how close are NUMBER_0 star restaurants to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1374	what 's the dining locales having postal code being QUOTED_STRING_0 and location equal to work which has the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
1375	gather the food type of restaurant with QUOTED_STRING_0 as postal code	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
1376	get me restaurants here that have NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
1377	which restaurant around here that sells QUOTED_STRING_0 cuisine has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1378	what price range does the restaurant furthest from home with QUOTED_STRING_0 cuisine have ?	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1379	for restaurants with 1 review , how far away are the restaurants from work to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
1380	suggest QUOTED_STRING_0 restaurants in my surrounding neighborhood , please .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1381	i 'd like to see GENERIC_ENTITY_org.schema.Restaurant:Person_0 's review of restaurants with NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1382	what is the image of restaurant with review count smaller than NUMBER_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1383	what 's the current position of the dining locales with lower rating than NUMBER_0 that is closest to here	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1384	i 'd like a list of GENERIC_ENTITY_tt:us_state_0 restaurants that serve QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1385	which restaurants here serve cuisine of the QUOTED_STRING_0 variety ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1386	how many total reviews in the restaurant having postal code containing QUOTED_STRING_0 which is most far away from here	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1387	i want restaurants with QUOTED_STRING_0 postal code serving QUOTED_STRING_1 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1388	fetch me the distance to restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) => notify
1389	find me restaurant phone numbers with less than NUMBER_0 review count	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1390	find restaurants that have the postal code QUOTED_STRING_0 and location being work that have the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
1391	how many restaurants are in LOCATION_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
1392	grab the postal code of the nearest restaurants with cuisine being QUOTED_STRING_0 to work	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1393	what are QUOTED_STRING_0 and food type restaurants equivalent to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1394	find a QUOTED_STRING_0 restaurant that has a rating less than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1395	what are critique by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having description equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
1396	i need restaurants with NUMBER_0 or smaller rating and address equal to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home => notify
1397	tell me what city the restaurant that has a rating of exactly NUMBER_0 is located in	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
1398	name the writer of the review that has a NUMBER_0 or under rating .	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
1399	relate the restaurants in this area that feature QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1400	get me what is the description of the nearest restaurants with QUOTED_STRING_0 as postal code .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1401	give me all of the QUOTED_STRING_0 restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1402	how close is the furthest restaurant with phone number equal to PHONE_NUMBER_0 from home from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1403	a restaurant that has n't gotten any reviews has what as its zip code ?	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
1404	grab the name of reviews with rating larger than NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
1405	what 's the name of the restaurant with a review count that is equivalent to NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
1406	what are the names of the restaurants that serve QUOTED_STRING_0 cuisine and have ratings of less than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1407	what are the restaurants with a location that equals work that are the farthest distance from work ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
1408	what is the location of restaurants with higher than NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1409	find me country of restaurants with a rating of exactly NUMBER_0 .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
1410	what are the QUOTED_STRING_0 restaurants rated less than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1411	in what country is the restaurant with the telephone number PHONE_NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
1412	i want to see what restaurants are in the GENERIC_ENTITY_tt:country_0 with an address that is here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
1413	who is the author of the review with the lowest rating ?	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
1414	search the restaurant that is QUOTED_STRING_0 closest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1415	search for restaurants rated NUMBER_0 or higher that serve QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1416	please submit the reviews penned by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that have a NUMBER_0 at most .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
1417	send picture of highest reviewed restaurants .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1418	what country are restaurants in GENERIC_ENTITY_tt:country_0 in ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
1419	what is the restaurant price range with the lowest reviews ?	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1420	tell me the rating and country of the restaurant that has QUOTED_STRING_0 cuisine and is furthest from work .	now => [ param:address.addressCountry:Entity(tt:country) , param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1421	how far is it from here to restaurants in LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
1422	fetch restaurant with cuisine being QUOTED_STRING_0 and QUOTED_STRING_1 as summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1423	what is the number of reviews in the restaurants with under NUMBER_0 reviews that have the most reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
1424	find the nearest restaurant to my job and give me the state and cuisine .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1425	retrieve the restaurant having location equal to work with the least reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] => notify
1426	what restaurants get no smaller than NUMBER_0 reviews and are rated NUMBER_1 star	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number == NUMBER_1 => notify
1427	i need restaurant having larger rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1428	what is the rating of a review that was written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
1429	let me know what a restaurant with a higher than NUMBER_0 rating is called .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1430	display restaurants with QUOTED_STRING_0 cuisine in zip code QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1431	how far away from my job to my home is the restaurant with the largest number of reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) ) => notify
1432	get the author 's critique equivalent to GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
1433	find the phone number of a restaurant that has a higher review count than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1434	from my location tell me how far restaurants in QUOTED_STRING_0 are .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
1435	i would like to see the restaurant that is the greatest distance away from home and that has a higher review count than NUMBER_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1436	tell me the restaurant image that has a rating of over NUMBER_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
1437	what is the image of the restaurants with larger rating than NUMBER_0 closest to home	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1438	how close to work is the restaurant that has a rating under NUMBER_0 with the smallest number of reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) ) => notify
1439	which restaurants have country equal to GENERIC_ENTITY_tt:country_0 and postal code being that of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
1440	i would like to know how many reviews there are in the restaurant that has a 1 star rating and is the least distance from home .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] ) => notify
1441	say the total number of reviews of restaurant with location equal to here	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1442	what is the current rating of the most far away restaurants with cuisine being QUOTED_STRING_0 ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1443	i 'd like to know which city restaurants are in with maximum NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1444	for restaurants having id equal to QUOTED_STRING_0 i want to hear the rating .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
1445	show me the cuisine of the restaurant that is farthest from home and that also has QUOTED_STRING_0 in the description .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1446	please look for the restaurant serving QUOTED_STRING_0 food that 's the furthest distance from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1447	fetch the distance from home to restaurants with location equal to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
1448	i 'd like to know of a restaurant that has less than a NUMBER_0 rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
1449	text me the country of restaurant in LOCATION_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
1450	where is the restaurants having QUOTED_STRING_0 in the postal code and location equivalent to here .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) => notify
1451	tell me where the restaurant with over NUMBER_0 reviews is located	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1452	find the QUOTED_STRING_0 restaurants with the worst rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1453	i 'd like to find restaurants with NUMBER_0 reviews that are furthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1454	i 'd like to know the restaurant with the highest review number .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
1455	tell me the rating of restaurants with a rating lower than NUMBER_0 , with the most reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
1456	in what city are restaurants with an id equaling QUOTED_STRING_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
1457	what is the telephone of restaurant having larger than NUMBER_0 reviews	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1458	get restaurants with no more than NUMBER_0 reviews that have QUOTED_STRING_0 in the description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1459	what is the number of restaurants that have zero reviews ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
1460	which dining locations get food type equal to QUOTED_STRING_0 and location equal to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1461	get restaurant having description equal to QUOTED_STRING_0 and number of evaluations higher than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1462	what is the most reviewed restaurant ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
1463	tell me the restaurant having description being QUOTED_STRING_0 and location equal to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
1464	which is the reviews having summary being QUOTED_STRING_0 with the highest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1465	seek for me the restaurant which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
1466	which review having summary being QUOTED_STRING_0 and creator equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 gets the lowest rating ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1467	i 'd like to know which country restaurants are located in that have at least NUMBER_0 reviews	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1468	show me the restaurants having NUMBER_0 or greater rating and country equal to GENERIC_ENTITY_tt:country_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
1469	can you name the highest rated QUOTED_STRING_0 restaurant ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1470	locate the restaurant that 's furthest from home and serves QUOTED_STRING_0 cuisine .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1471	where is the restaurants containing QUOTED_STRING_0 as description and QUOTED_STRING_1 in the food type .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) => notify
1472	what 's a roster of QUOTED_STRING_0 restaurants with a ranking of at least NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1473	what are review having rating not larger than 1 of restaurant having more than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1474	find me the restaurant 's zip code that has a rating of under NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1475	find the restaurant rating that has no reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
1476	what amount of reviews have been given to restaurants with below NUMBER_0 reviews that are the least number of miles from here ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1477	display the review count of the restaurants that have ratings lower than NUMBER_0 with the smallest review count .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
1478	find me the telephone number of the closest restaurant in zip code QUOTED_STRING_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1479	how are restaurants with a location equaling here rated ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1480	find a restaurant rated NUMBER_0 that is located in GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
1481	i require reviews created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with rating equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
1482	i 'm looking for restaurants that have a description with QUOTED_STRING_0 in it and a review count that is NUMBER_0 or less .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1483	tell me the restaurant with a rating under NUMBER_0 with the smallest amount of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
1484	tell me the cuisine and pictures of restaurants with less than a NUMBER_0 rating that 's closest to here .	now => [ param:image:Entity(tt:picture) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1485	tell me the review count of the restaurant that has QUOTED_STRING_0 as the zip code	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1486	show me reviews for the restaurants with QUOTED_STRING_0 in the description .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1487	grab the farthest restaurants with rating more than NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1488	provide me the number of the best food places	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1489	find a restaurant near me that have more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
1490	find the zip code of restaurants with review count less than 1 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
1491	show me a restaurant offering QUOTED_STRING_0 food that has QUOTED_STRING_1 in the description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1492	i want to see reviews published prior to DATE_0 and are rated under NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
1493	what is the farthest QUOTED_STRING_0 restaurant from home ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1494	which reviews with a description matching QUOTED_STRING_0 have a rating that 's less than NUMBER_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
1495	which restaurant has a review count that is greater than NUMBER_0 and contains QUOTED_STRING_0 in the description with the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1496	search the restaurant with has less number of evaluations than NUMBER_0 that serves QUOTED_STRING_0 cuisine with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1497	show me all restaurants by me with a NUMBER_0 star rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
1498	what are the closest restaurant locations equidistant to here to home ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
1499	locate the restaurant in the QUOTED_STRING_0 zip code with the worst rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1500	which is the restaurants with the lowest rating of NUMBER_0 and the food category equal to QUOTED_STRING_0 with the lowest rating	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1501	how far away are the restaurant with rating lower than NUMBER_0 that is most far away from work from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1502	include state restaurants equal to GENERIC_ENTITY_tt:us_state_0 and a total of NUMBER_0 restaurants	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1503	i 'd like to know the name of restaurants that have NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
1504	get the restaurants with address equal to home with the least reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] => notify
1505	i want to know what street restaurants with a review count of bigger than 1 and with the least reviews are located on	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) [ 1 ] ) => notify
1506	fetch the street of the most far away restaurant with rating fewer than NUMBER_0 from here	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1507	name a place to eat near me with NUMBER_0 + reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
1508	find a restaurant with QUOTED_STRING_0 in the description that is farthest from home and tell me what kind of cuisine it serves .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1509	get the restaurant with cuisine being QUOTED_STRING_0 and location equal to home with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1510	what is the state of the dining business with QUOTED_STRING_0 as zip code with the most evaluations	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1511	show me the closest restaurant in GENERIC_ENTITY_tt:us_state_0 that 's furthest from the job .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
1512	what 's the rating of the dining locales with the smallest number of evaluations	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1513	tell me the street address of restaurants that have an id that is exactly QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
1514	tell me restaurant ratings that have a location that is here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1515	what 's the restaurant closest to work with an id equaling QUOTED_STRING_0 ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1516	show me the distance of restaurants with fewer than NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
1517	how many reviews does the restaurant with the phone number PHONE_NUMBER_0 have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
1518	i want restaurants with the lowest ratings that have a summary that includes QUOTED_STRING_0 .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1519	tell me restaurants with a higher than 1 rating .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) => notify
1520	give me all the restaurants with over NUMBER_0 reviews that are located near here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
1521	present restaurants close to me which offers QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1522	which reviews having later date published than DATE_0 which was created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 has the lowest rating ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 ) ) [ 1 ] => notify
1523	grab what is the description of restaurant having greater rating than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
1524	show me what the restaurant review count is lower than NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1525	what price range is attributed to restaurants that have PHONE_NUMBER_0 as their phone number ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
1526	get restaurant having more number of evaluations than NUMBER_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1527	get a restaurant furthest from my work with a rating of more than NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1528	get what is the location of the QUOTED_STRING_0 restaurant which has the maximum rating	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1529	which restaurants in GENERIC_ENTITY_tt:country_0 feature a QUOTED_STRING_0 menu ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1530	give me restaurant reviews that have the minimum number of reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1531	can you get the name of a restaurant that has precisely NUMBER_0 reviews and that is located right by where i am right now ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
1532	for the restaurant the greatest distance from work give me the country .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1533	get a picture of restaurants near the job with the fewest reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
1534	i want to see restaurant in GENERIC_ENTITY_tt:country_0 with the most reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) => notify
1535	where is the QUOTED_STRING_0 restaurant serving food and a minimum of NUMBER_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1536	which restaurants have country equivalent to GENERIC_ENTITY_tt:country_0 and postal code being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
1537	i 'd like to know the distance to restaurant from home that is in the city LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
1538	what is the nearness of the restaurant that has a rating under 1 and the most reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) [ 1 ] ) ) => notify
1539	get me the restaurant with a review kind of under NUMBER_0 that is the farthest from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
1540	tell me the name of the country of the restaurants around here .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1541	show me the type of cuisine of restaurants with the fewest reviews and a higher rating than NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
1542	what is the restaurant 's nearest score to home ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1543	find restaurants rated no higher than NUMBER_0 with over NUMBER_1 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
1544	say the city of the nearest dining locales with postal code containing QUOTED_STRING_0 to work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1545	tell me the street address of a restaurant with the zip code QUOTED_STRING_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
1546	show me the street address of a restaurant located at work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
1547	which restaurants get description equal to QUOTED_STRING_0 and QUOTED_STRING_1 as food type ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1548	grab the city of restaurant that serve QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1549	how many total reviews in the restaurant with the highest rating ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1550	i want reviews by author GENERIC_ENTITY_org.schema.Restaurant:Person_0 for restaurants rated lower than NUMBER_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1551	seek the restaurant having description being QUOTED_STRING_0 and location equal to work which has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
1552	fetch restaurants having served cuisine equal to QUOTED_STRING_0 and rating equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1553	what is the restaurants containing QUOTED_STRING_0 as description and location equal to here with the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1554	grab the telephone of restaurant having no reviews	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
1555	what restaurants serve QUOTED_STRING_0 in this area ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1556	get restaurant having more number of evaluations than NUMBER_0 which serves QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1557	grab reviews having date published later than DATE_0 in restaurants near work	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1558	name the restaurants with under NUMBER_0 reviews which serve QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1559	what restaurant here has QUOTED_STRING_0 that is in food type has the tiniest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1560	seek me what is the location of restaurant having location equal to work .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
1561	fetch restaurants in this area having smaller rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
1562	what are the restaurant with food type being QUOTED_STRING_0 and review count higher than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1563	please show restaurant with fewer than NUMBER_0 reviews which are QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1564	let me see images for restaurants that have descriptions with QUOTED_STRING_0 in them and are the least distance from work .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1565	what are the QUOTED_STRING_0 restaurants rated lower than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1566	find restaurants in GENERIC_ENTITY_tt:country_0 with the postal code QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
1567	what is the closest distance from my job to the furthest restaurants which have less than NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1568	grab restaurant with review count less than NUMBER_0 with the tiniest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
1569	tell me restaurants near by .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1570	which are the restaurants with rating not greater than NUMBER_0 and greater review count than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
1571	show me reviews that are rated above one for restaurants that have NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1572	look for restaurants with a review count of less than NUMBER_0 and that sell QUOTED_STRING_0 food that has the greatest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1573	i want restaurants that have 1 reivews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
1574	show me reviews that have a rating bigger than NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
1575	give me the street address for restaurants that are found here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1576	what is both the postal code and food type of restaurants with NUMBER_0 or smaller rating and cuisine being QUOTED_STRING_0 .	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1577	which are the restaurants ' names with rating equal to NUMBER_0 and address equal to work	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work => notify
1578	i 'd like to know the address of the furthest restaurant with a review count of less than NUMBER_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1579	show me reviews with a rating of NUMBER_0 max and that are over a NUMBER_1 rating	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
1580	find the restaurants in this locality .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1581	give me all restaurants rated over NUMBER_0 and are in the zip code of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1582	get review having rating more than NUMBER_0 and description equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
1583	tell me the review count of restaurants with a review count not larger than NUMBER_0 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1584	fetch restaurants in here with postal code being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
1585	tell me which country restaurants with a rating under NUMBER_0 are located in	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1586	of restaurants that have QUOTED_STRING_0 in the description , tell me the number of reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1587	show the price range of restaurants with a larger review count than NUMBER_0 that 's closest to the home .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1588	how far away from home are the restaurants that are rated equal to NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
1589	what is the creator of review having NUMBER_0 or tinier rating ?	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
1590	tell me the city of restaurantss with a review count of exactly NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
1591	how far away is the nearest restaurants with telephone equal to PHONE_NUMBER_0 to home from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1592	what are review made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having rating equal to NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
1593	find restaurants serving QUOTED_STRING_0 food in the country of GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1594	pull up restaurants with telephone equal to PHONE_NUMBER_0 and review count not more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1595	collect the descriptions of restaurants with bigger review count than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1596	i 'd like to know restaurant descriptions that have at most NUMBER_0 reviews .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1597	which restaurant having served cuisine being QUOTED_STRING_0 and NUMBER_0 or greater rating has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1598	which are restaurants with NUMBER_0 reviews and food type equivalent to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1599	can you elaborate on the review that has NUMBER_0 or more stars ?	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
1600	what restaurant in GENERIC_ENTITY_tt:us_state_0 offers QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1601	what is the phone number of a restaurant with QUOTED_STRING_0 in the description	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1602	tell me restaurant near my home that are rated not more than NUMBER_0 and have the least review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
1603	grab the price range of restaurant with id equal to QUOTED_STRING_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
1604	give me the street for restaurants around here .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1605	i 'd like to know of descriptions of restaurants that have less than a NUMBER_0 review count	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1606	grab the food type and phone number of the most far away QUOTED_STRING_0 restaurants	now => [ param:servesCuisine:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1607	how far is it to restaurants with a QUOTED_STRING_0 zip code from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
1608	i would like to know the type of food of the restaurant close to home .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
1609	nearest to my work , i need the state and cuisine of a restaurant .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1610	what restaurant is near me that has a rating under NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
1611	what is the restaurants having review count bigger than NUMBER_0 closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1612	say what 's the telephone of the dining locales having description being QUOTED_STRING_0 with the highest number of evaluations	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1613	how many reviews are there with ratings that are no more than NUMBER_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
1614	what 's the street of the QUOTED_STRING_0 restaurant which has the maximum rating	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1615	what is the current location of restaurant rated NUMBER_0 star	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
1616	show me the restaurants rating that have an id of QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
1617	what 's the country where i 'd find restaurants with a location matching work ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
1618	show me restaurant around me with cuisine being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1619	i 'd like restaurant descriptions for places with id equaling QUOTED_STRING_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
1620	what is the restaurant serving QUOTED_STRING_0 food and the postal code of QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1621	i 'd like to know the restaurant that has the most reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
1622	which dining locations have phone number equal to PHONE_NUMBER_0 and description equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1623	i 'd like to know the nearest restaurant to my job .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
1624	find the restaurant that serves QUOTED_STRING_0 food that is most highly rated .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1625	what is the restaurant with larger rating than NUMBER_0 with the largest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
1626	grab me what is the city of restaurant with smaller rating than NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1627	find descriptions of restaurants with more than NUMBER_0 reviews	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1628	find QUOTED_STRING_0 restaurants with a phone number PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1629	list restaurants with served cuisine being QUOTED_STRING_0 and description equal to QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1630	grab the image of the restaurants near work with the least reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
1631	how far away is restaurants rated NUMBER_0 stars to here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
1632	show me restaurants with at least a NUMBER_0 rating serving QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1633	how close is restaurant with descriptions equivalent to QUOTED_STRING_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) => notify
1634	give me the restaurant nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
1635	show me restaurants in GENERIC_ENTITY_tt:us_state_0 that are the furthest away .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] => notify
1636	where are the restaurants in the area ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1637	furthest from work , what 's a restaurant and city with a rating under NUMBER_0 .	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1638	what is the QUOTED_STRING_0 restaurant in here with the biggest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1639	what restaurant has no less than NUMBER_0 stars and NUMBER_1 or lower ratings	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number <= NUMBER_1 => notify
1640	what is the location of the restaurants with bigger review count than NUMBER_0 farthest from here	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1641	show me what is the restaurant 's score and country which offers QUOTED_STRING_0 cuisine far from work	now => [ param:address.addressCountry:Entity(tt:country) , param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1642	please enumerate restaurants having location equivalent to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home => notify
1643	search the zip code of restaurants with review count less than 1 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
1644	which are restaurants having address equal to work and description being that of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
1645	for the restaurant with a rating of no more than NUMBER_0 give me the street of the restaurant .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1646	what is the count of reviews with restaurant with NUMBER_0 reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
1647	i want you to find restaurants that have a description equal to QUOTED_STRING_0 and that serve QUOTED_STRING_1 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1648	what 's the dining locations having QUOTED_STRING_0 as served cuisine and QUOTED_STRING_1 as description with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1649	what QUOTED_STRING_0 restaurants are below NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1650	how close are the restaurant having country equal to GENERIC_ENTITY_tt:country_0 which is nearest to home from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
1651	say what is the reviews of the furthest away restaurants with lower review count than NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1652	which restaurant is in LOCATION_0 and has the lowest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) [ 1 ] => notify
1653	i need to know the rating of the furthest QUOTED_STRING_0 cuisine restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1654	which restaurants get fewer review count than NUMBER_0 and serves QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1655	tell me which restaurants are QUOTED_STRING_0 here and have exactly NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1656	what distance is the nearest dining locales with food type being QUOTED_STRING_0 to work in distiction to here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
1657	please track down reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that show QUOTED_STRING_0 in the description .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
1658	which restaurants here have been rated less than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
1659	please bring up the image of those restaurants closest to work with descriptions containing QUOTED_STRING_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1660	what restaurant with QUOTED_STRING_0 cuisine is furthest from this location ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1661	find QUOTED_STRING_0 restaurants that are close to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1662	alert me the street of restaurant with QUOTED_STRING_0 that is in cuisine	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1663	please list restaurant with less than NUMBER_0 reviews which are QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1664	search for GENERIC_ENTITY_org.schema.Restaurant:Person_0 reviews with a description that equals QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
1665	which restaurants in the country of GENERIC_ENTITY_tt:country_0 have a QUOTED_STRING_0 zip code ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
1666	find all QUOTED_STRING_0 restaurants with more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1667	show me the evaluations of the restaurant which has the minimum number of reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1668	what restaurants having state equal to GENERIC_ENTITY_tt:us_state_0 and number of evaluations equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
1669	what is the telephone of restaurant having greater than NUMBER_0 reviews	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1670	tell me the restaurant with a rating higher than 1 that is farthest from the job .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] => notify
1671	i would like to know the restaurants that have a count of reviews equal to NUMBER_0 and are QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1672	i need reviews having NUMBER_0 or greater rating	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
1673	tell me the restaurant having QUOTED_STRING_0 in the postal code and address equivalent to home with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
1674	find me the restaurant closest to me that has LOCATION_0 as the city	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) ) [ 1 ] => notify
1675	are NUMBER_0 star restaurants close to here from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1676	for the restaurant with a lower review count than 1 and the most distance from home , give me the phone number	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
1677	tell me the description of restaurants with the lowest rating .	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1678	what are the GENERIC_ENTITY_tt:country_0 based restaurants with an address that matches home ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:home => notify
1679	get me what is the country of restaurant around here .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1680	which are the reviews having author equivalent to GENERIC_ENTITY_org.schema.Restaurant:Person_0 of restaurants with rating lower than NUMBER_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1681	what are the restaurant containing QUOTED_STRING_0 in the postal code and larger rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1682	i 'd like to know how far it is to the restaurant with a review count of over NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
1683	which restaurant having description that of QUOTED_STRING_0 and served cuisine being QUOTED_STRING_1 has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
1684	gather the distance from here to restaurant having zip code being QUOTED_STRING_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
1685	where is the restaurant with NUMBER_0 or lower rating that cooks QUOTED_STRING_0 cuisine	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1686	what are review created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having description being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
1687	which restaurant has QUOTED_STRING_0 in the zip code that is the farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1688	give me a restaurant with phone number PHONE_NUMBER_0 and is located near my home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1689	give me the places that offer QUOTED_STRING_0 food and with rating equal to NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1690	tell me the type of food served by the restaurant that is farthest away and has the food type of QUOTED_STRING_0 .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1691	what restaurant sells QUOTED_STRING_0 food and have summary equal to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1692	find restaurant with the description having QUOTED_STRING_0 that sells QUOTED_STRING_1 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1693	look for someone that serves QUOTED_STRING_0 food and has a review count of NUMBER_0 and the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1694	tell me the streets of the farthest restaurant that has a rating lower than NUMBER_0 .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1695	tell me the name of a restaurant in GENERIC_ENTITY_tt:country_0 .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
1696	which restaurants in the postal code QUOTED_STRING_0 sell QUOTED_STRING_1 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1697	show me the location of a NUMBER_0 star restaurant farthest away from the job .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
1698	i 'm interested in restaurant ratings that is located at here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1699	seek for me what is the name of restaurant having review count equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
1700	what is the price range of restaurants with food type that of QUOTED_STRING_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1701	please enumerate restaurant having summary equal to QUOTED_STRING_0 and greater rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1702	i would like to see the country the greatest distance away and with the postal code containing QUOTED_STRING_0 .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1703	what is the rating of the furthest away restaurants with lower review count than NUMBER_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1704	i am looking for a restaurant that has at least NUMBER_0 reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1705	find a restaurant with the phone number PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1706	i need the street address of those restaurants that have no less in 1 review .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
1707	i 'd like to know the zip code of restaurant that has a bigger than NUMBER_0 rating	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
1708	pull up restaurant which sells QUOTED_STRING_0 cuisine , with description being QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1709	i would like to see which restaurants have 1 review .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
1710	say what is the telephone of the nearest restaurant with rating fewer than 1 to work	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) => notify
1711	get the state of restaurant with descriptions equal to QUOTED_STRING_0	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1712	tell me the most remote restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] => notify
1713	what description applies to restaurants with a work location ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
1714	what restaurant are nearby and have rating equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
1715	get the country of restaurant with telephone equal to PHONE_NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
1716	for the restaurant that offers QUOTED_STRING_0 cuisine i need you to give me its postal code .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1717	which restaurants close to work serve QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1718	what are some restaurants with a smaller review count than NUMBER_0 and the cuisine is QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1719	show me what is the street of the restaurants with the highest rating	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1720	what is the current postal code of the closest restaurant to here	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1721	what are the numbers and foods served at QUOTED_STRING_0 restaurants that are furthest away	now => [ param:servesCuisine:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1722	what is the distance home to restaurants with location same as work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
1723	show me the number for the food place in zip code QUOTED_STRING_0 that 's closest to my job .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1724	can you find the place to eat that has PHONE_NUMBER_0 as a phone number , and it has NUMBER_0 or more reviews ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
1725	what is the description of the restaurant with zip code QUOTED_STRING_0 that is closest to work .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1726	show me the restaurants with the smallest number of reviews and a rating above 1 .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] => notify
1727	get dining locations having zip code being QUOTED_STRING_0 and food type equal to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1728	find the number of reviews of a restaurant that is located in LOCATION_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
1729	give me the telephone of the restaurant having smaller review count than 1 that is most far away from home .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
1730	how many reviews are there with author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
1731	i need evaluations created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with rating equal to NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
1732	show me the closest restaurant and the name of the city in which it 's in .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1733	get me both the state and cuisine of the nearest restaurant to work .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1734	tell me where to find the nearest restaurant .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1735	find restaurant ratings for those places with a description equal to QUOTED_STRING_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1736	fetch the country of restaurant having descriptions containing QUOTED_STRING_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1737	find the restaurants near here that also serve QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1738	what is the street address of restaurants with a review count under than NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1739	retrieve the farthest away restaurants that have less than NUMBER_0 rating	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
1740	get me the restaurants having NUMBER_0 or larger rating and country equal to GENERIC_ENTITY_tt:country_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
1741	what are the review of restaurants having description being QUOTED_STRING_0 and review count larger than NUMBER_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1742	which restaurants here with QUOTED_STRING_0 as description has the largest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1743	tell me what the distance is from home of restaurants that have 1 review .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) => notify
1744	enumerate reviews which was made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
1745	what are restaurants having summary equivalent to QUOTED_STRING_0 and rating at least NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1746	get the restaurants having telephone equal to PHONE_NUMBER_0 nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
1747	tell me what is the address of restaurant having rating not higher than NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1748	find me the farthest away restaurants from here that have at least NUMBER_0 reviews	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1749	find a distance of restaurant with phone number of PHONE_NUMBER_0 from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
1750	find a QUOTED_STRING_0 restaurant in my location and tell me the rating and name .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1751	what is the number of restaurants that have QUOTED_STRING_0 in their descriptions	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1752	please enumerate restaurants containing QUOTED_STRING_0 as summary and NUMBER_0 or greater rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1753	find all the QUOTED_STRING_0 restaurants near my job that have the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1754	what are the QUOTED_STRING_0 restaurants with a description of QUOTED_STRING_1 and the least amount of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1755	tell me the rating of restaurants with an id exactly QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
1756	where are restaurants with reviews above 1 located as far as their country ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
1757	find the restaurant rated lower than NUMBER_0 , with the fewest reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
1758	alert me the restaurant having QUOTED_STRING_0 as description and cuisine equal to QUOTED_STRING_1 which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
1759	what are QUOTED_STRING_0 dining locales having address equal to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1760	retrieve reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having earlier date published than DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
1761	i need a restaurant with NUMBER_0 or lower ratings at home	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:home => notify
1762	where is the restaurant location having no reviews most far away from home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) => notify
1763	what is the picture of the dining business near home with the smallest number of evaluations	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
1764	what 's the lowest rated QUOTED_STRING_0 restaurant ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1765	show me the restaurants nearby having QUOTED_STRING_0 as summary which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1766	what reviews have description equal to QUOTED_STRING_0 and tinier rating than NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
1767	display for me the food type for restaurants that are rated below NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1768	what is the current rating of restaurants with QUOTED_STRING_0 as summary	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1769	i want to know what sort of food restaurants with ratings under NUMBER_0 serve	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1770	what are the restaurants with smaller review count than NUMBER_0 and food type being QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1771	which are the restaurants with location equal to work and rating at least NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
1772	what restaurants have a rating of NUMBER_0 and have QUOTED_STRING_0 in their description .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) => notify
1773	tell me a restaurant here that has the food type QUOTED_STRING_0 and the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1774	for the restaurant that has a description containing QUOTED_STRING_0 what is the zip code	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1775	how close is the restaurant that offer QUOTED_STRING_0 cuisine with the least reviews from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
1776	show me the restaurant at my location and address that has the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] => notify
1777	please indicate the QUOTED_STRING_0 restaurants with fewer than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1778	where is the restaurants with served cuisine being QUOTED_STRING_0 and rating at minimum NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1779	give me the number of QUOTED_STRING_0 restaurants	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1780	what is the contact number of restaurants that have a rating of above NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
1781	what 's the distance in distiction to home to dining locales having QUOTED_STRING_0 that is in cuisine	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
1782	tell me what the distance from work is for restaurants that have at most NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
1783	gather the restaurant having location equal to work with the least reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] => notify
1784	get reviews created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 of restaurants around home	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1785	which restaurants are there at home and what food is served QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1786	reveal restaurant having phone number equal to PHONE_NUMBER_0 and location equal to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1787	tell me the number of reviews in all restaurants that contain QUOTED_STRING_0 in their description .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1788	find places to eat that serve QUOTED_STRING_0 food that have the most number of reviews and are also near my work .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1789	i want to see restaurants that provide QUOTED_STRING_0 cuisine and are rated exactly NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1790	what is the description of reviews having bigger rating than NUMBER_0 ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) => notify
1791	which restaurants have a description containing the word QUOTED_STRING_0 and QUOTED_STRING_1 as the cuisine type ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
1792	name the food type and the number of reviews received by the QUOTED_STRING_0 restaurants nearest to this location .	now => [ param:aggregateRating.reviewCount:Number , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1793	retrieve reviews created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 rated NUMBER_0 star	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
1794	what restaurants in the immediate vicinity of home feature QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1795	tell me how far restaurants with zip code QUOTED_STRING_0 are from my location .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
1796	show reviews for the restaurant rated over NUMBER_0 that 's the greatest distance from work .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1797	search for restaurant with the phone number of PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1798	i 'd like to know what city the restaurant with a rating of exactly NUMBER_0 is located in	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
1799	show the zip code of restaurant having no reviews	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
1800	how close are restaurants in the GENERIC_ENTITY_tt:country_0 that are closest to home starting from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
1801	which reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 have the lowest rating and were published after DATE_0 ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 ) ) [ 1 ] => notify
1802	get for me the restaurant that has a location equal to here that is the least distance to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
1803	what is the reviews of the nearest restaurants with lower review count than NUMBER_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1804	tell me the restaurants near me that have a rating of NUMBER_0 or more .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
1805	where is the restaurant having zero reviews most far away from home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) => notify
1806	where is the restaurant having review count bigger than NUMBER_0 with the largest number of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
1807	inform me of the address of restaurants with the least review count	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1808	find me restaurants around my office that come up when you search QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1809	which restaurants are most near work with descriptions that contain QUOTED_STRING_0 ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1810	from my work , tell me the distance of the closest NUMBER_0 star restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1811	what evaluations is by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and have NUMBER_0 or more rating	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
1812	show me a picture of restaurants that have a rating better than NUMBER_0 nearest to my house .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1813	show me the reviews that have a rating below NUMBER_0 and that have NUMBER_1 or more ratings .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
1814	show the places having QUOTED_STRING_0 that is in postal code and bigger rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1815	show me the photos of reviews with the worst rating .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
1816	find out the restaurant with lower rating than NUMBER_0 farthest from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
1817	tell me the rating of review that has QUOTED_STRING_0 in the description	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1818	tell me the closest restaurant that has a location equal to work to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
1819	show me restaurants nearby with served cuisine being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1820	how far away is a restaurant that has QUOTED_STRING_0 from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
1821	find the summary of restaurants with a description matching QUOTED_STRING_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1822	search the restaurant with tinier review count than NUMBER_0 that serves QUOTED_STRING_0 cuisine with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1823	what 's the zip code of the restaurant nearest to here .	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1824	find a QUOTED_STRING_0 cuisine restaurant that has QUOTED_STRING_1 as it 's description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1825	give me a restaurant rated NUMBER_0 or higher with more than NUMBER_1 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
1826	which restaurants get address equal to work and NUMBER_0 or greater rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
1827	list reviews having NUMBER_0 or more rating and less rating than NUMBER_1	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_1 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
1828	tell me the review name with maximum a NUMBER_0 rating .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
1829	i need the restaurant description for the place to eat that serves QUOTED_STRING_0 food .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1830	display for me what is the country of restaurant having location equal to work	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
1831	what are all the restaurants having a rating of at least NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
1832	what is the food type and city of the restaurant with fewer rating than NUMBER_0 farthest from work	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1833	how many restaurants are there located at home	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
1834	how close are the restaurants with the largest number of reviews in GENERIC_ENTITY_tt:us_state_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) ) => notify
1835	get me the descriptions of restaurant in LOCATION_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
1836	let 's see restaurants near where i work that have the lowest amount of reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
1837	what 's the location of restaurants with a location where i am at work .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
1838	i want to see a restaurant that has QUOTED_STRING_0 in the description and is rated at least NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1839	gather the street address of restaurants with id equal to QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
1840	i want to know what city restaurants are there here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1841	tell me how close to my job the restaurant around my location with the least number of reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
1842	i like to know what sort of food a restaurant with the phone number PHONE_NUMBER_0 serves	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
1843	i want the postal code of restaurants nearby that are QUOTED_STRING_0 cuisine .	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1844	what restaurants near work have more than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1845	show me a restaurant that serves QUOTED_STRING_0 cuisine and is near me	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1846	how many reviews do the restaurants with the word QUOTED_STRING_0 in their descriptions have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1847	where is the restaurant in GENERIC_ENTITY_tt:us_state_0 with the highest number of evaluations	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) => notify
1848	what is the highest rated QUOTED_STRING_0 restaurant here .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1849	in the city of LOCATION_0 what is the restaurant price range ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
1850	i need the rating of the restaurant that is closest to this location .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
1851	what 's the name of a QUOTED_STRING_0 restaurant ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1852	reveal what 's the rating of the most distant dining locales with having less number of evaluations than 1 in distiction to home	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
1853	what are QUOTED_STRING_0 restaurant having having less number of evaluations than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1854	what is the restaurant with the lowest rating that is located in QUOTED_STRING_0 zip code ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1855	find restaurant close to home that serves QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1856	what 's the name of the restaurants that have QUOTED_STRING_0 cuisine and have the largest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1857	i want to know the shortest distance restaurants are near my work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
1858	get me what is the number of reviews of the restaurants with smaller review count than NUMBER_0 farthest from here .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1859	what is the address of restaurant close to me .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1860	find the description of restaurants that are closest to home that have a review count of under NUMBER_0	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1861	show me the farthest away restaurants with at least NUMBER_0 review from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1862	tell me restaurants without any reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) [ 1 ] => notify
1863	how far is the nearest restaurant from home with NUMBER_0 reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1864	show me the picture and location of the QUOTED_STRING_0 dining places nearest to work	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1865	show the GENERIC_ENTITY_tt:country_0 restaurant pricing .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
1866	which restaurants in the country GENERIC_ENTITY_tt:country_0 have a review count higher than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
1867	do a search and find the restaurants whose state is equal to GENERIC_ENTITY_tt:us_state_0 and are also around work and have the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
1868	how far is the closest NUMBER_0 star restaurant from here to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1869	what reviews have description equal to QUOTED_STRING_0 and smaller rating than NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
1870	tell me how far the restaurant without any reviews is that 's close to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
1871	i would like to see the summary of restaurants that have a description of QUOTED_STRING_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1872	which restaurant get served cuisine being QUOTED_STRING_0 and number of evaluations equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1873	i desire restaurant rated NUMBER_0 star having state equal to GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
1874	what restaurants with the max amount of reviews have a rating of at least NUMBER_0 and QUOTED_STRING_0 in the summary .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1875	find me restaurants with QUOTED_STRING_0 in the description and the country is equal to GENERIC_ENTITY_tt:country_0 that have the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1876	fetch the restaurant with telephone equal to PHONE_NUMBER_0 with the smallest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
1877	fetch review rated NUMBER_0 star in restaurants rated NUMBER_1 star	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_1 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1878	how many reviews does a restaurant in the city of LOCATION_0 have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
1879	what kind of image do the lowest rated reviews have ?	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
1880	search reviews with creator equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 and description equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
1881	what restaurant offer QUOTED_STRING_0 food and have description equal to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1882	fetch me what is the distance from work to the closest restaurants to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
1883	fetch me restaurants with country equal to GENERIC_ENTITY_tt:country_0 and address equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:home => notify
1884	only show restaurants having NUMBER_0 or more reviews	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
1885	what 's the restaurant most near home that has a minimum of NUMBER_0 reviews ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
1886	name the restaurants with the fewest reviews that are rated NUMBER_0 and are also in the same area as work .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
1887	find restaurants with QUOTED_STRING_0 in the description that has a rating of NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1888	how far away is restaurant with review count equal to NUMBER_0 from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
1889	what is the number of restaurants with a maximum of 1 review ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
1890	pull up restaurant in GENERIC_ENTITY_tt:country_0 with review count greater than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
1891	looking for restaurants NUMBER_0 rated star who have a greater review count than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
1892	how far away are the restaurant with rating fewer than 1 with the largest number of reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) [ 1 ] ) ) => notify
1893	which are review having rating at highest NUMBER_0 and greater rating than NUMBER_1 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
1894	which restaurants in GENERIC_ENTITY_tt:us_state_0 offer QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1895	what 's the street of restaurant with QUOTED_STRING_0 as served cuisine ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
1896	show me what is the town of the farthest dining business having QUOTED_STRING_0 in the description from my current locale	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
1897	which restaurant get served food type being QUOTED_STRING_0 and review count equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1898	what is the cuisine type of the restaurant with rating more than NUMBER_0 farthest from here .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1899	identify reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
1900	which are dining places with rating at least NUMBER_0 which serves QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1901	i am looking for the descriptions with a review rating of at most NUMBER_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
1902	where is the dining locations in this area	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1903	what is the zip code that applies to the restaurant with a location equivalent to here ?	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1904	which restaurant get larger rating than NUMBER_0 and offer QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1905	what 's the image of the restaurant near home with the smallest number of evaluations	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
1906	find review count of restaurants that have the summary QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1907	show all restaurant having description equal to QUOTED_STRING_0 and zip code containing QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:description:String =~ QUOTED_STRING_0 => notify
1908	find the rating and phone number of the nearest restaurant in GENERIC_ENTITY_tt:us_state_0	now => [ param:aggregateRating.ratingValue:Number , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
1909	please give me the telephone number of those restaurants whose location equals work .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
1910	find the restaurant with a rating over NUMBER_0 and has the lowest amount of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1911	display for me the price range of restaurants having telephone equal to PHONE_NUMBER_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
1912	i want restaurants that has QUOTED_STRING_0 food , with rating at minimum NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1913	please note the reviews of restaurants declaring QUOTED_STRING_0 in their overview .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1914	which restaurant reviews have a review count of greater than NUMBER_0 and additionally , have QUOTED_STRING_0 within the description .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1915	show me QUOTED_STRING_0 restaurants that is closest to where i work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1916	see restaurants furthest away from here with less than NUMBER_0 reviews .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
1917	i want to know the name of restaurants nearby here .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1918	what 's the explanation of the dining locales with rating lower than NUMBER_0 most far away in distiction to home ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
1919	i need restaurant around home with NUMBER_0 or greater rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:home => notify
1920	give me all the restaurants rated NUMBER_0 that are near my job .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work => notify
1921	list restaurants located nearest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) ) [ 1 ] => notify
1922	what restaurant near me has at least NUMBER_0 for it 's review count ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
1923	search for reviews rated NUMBER_0 or higher .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
1924	i 'd like to know what country the restaurant that has the location equal to work is in .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
1925	what are restaurant having served cuisine being QUOTED_STRING_0 and zip code equal to QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1926	find all restaurants with a NUMBER_0 rating near home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:home => notify
1927	what is the reviews having earlier date of publication than DATE_0 which has the maximum rating ?	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) ) [ 1 ] => notify
1928	show me the restaurants near work that serve food of the QUOTED_STRING_0 variety .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1929	of the ones with the least descriptions , find restaurants with QUOTED_STRING_0 in their description .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1930	retrieve me the distance to restaurant having greater rating than NUMBER_0 from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) => notify
1931	tell me the price range of restaurant that has a lesser review count than NUMBER_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1932	which restaurants get bigger review count than NUMBER_0 and NUMBER_1 or above rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
1933	how far away is the farthest restaurant with fewer rating than NUMBER_0 from home from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1934	gather the street address of restaurants with location equal to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
1935	display for me the country of restaurants having location equal to here	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1936	what are restaurant having served cuisine being QUOTED_STRING_0 and postal code equivalent to QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1937	tell me the description of the nearest restaurant to here that has a larger than NUMBER_0 rating	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1938	find QUOTED_STRING_0 restaurants with NUMBER_0 or less reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1939	please enumerate restaurant having summary equivalent to QUOTED_STRING_0 and larger rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1940	show me the zip code of the furthest restaurant with a rating greater than NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1941	get the restaurant in here having phone number equal to PHONE_NUMBER_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
1942	message me what is the distance from work of restaurant having rating lower than NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) => notify
1943	for restaurants with a NUMBER_0 star rating get me the rating that is NUMBER_1 star .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
1944	get restaurant having more review count than NUMBER_0 which serves QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1945	what are restaurants in GENERIC_ENTITY_tt:us_state_0 close to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:home => notify
1946	what is the number of restaurants with 1 review ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
1947	what are the reviews posted by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that have QUOTED_STRING_0 incorporated in the introduction ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
1948	which are reviews created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 rated NUMBER_0 star ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
1949	display a restaurant 's phone number that has no reviews	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
1950	find me the distance from here to restaurant with review count above NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
1951	restaurants with NUMBER_0 reviews have what kind of reviews ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
1952	get dining locales having phone number equal to PHONE_NUMBER_0 and number of evaluations equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1953	how far from my home are restaurants rated NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
1954	which restaurant with rating at least NUMBER_0 and summary equal to QUOTED_STRING_0 gets the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1955	tell me the price range of restaurants with ratings higher than NUMBER_0 with the most reviews .	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
1956	which restaurants have a rating less than NUMBER_0 and serve QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1957	get me what is the street of restaurant having lower review count than NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
1958	how close to work is the restaurant that has zero reviews with the highest number of reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) [ 1 ] ) ) => notify
1959	find restaurants that have a review count of maximum NUMBER_0 and the zip code of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
1960	pull up restaurant having served food type being QUOTED_STRING_0 and postal code equal to QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1961	find the restaurant in the GENERIC_ENTITY_tt:country_0 that can be contacted by phone at PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
1962	give me the restaurants that have NUMBER_0 reviews and whose location is equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
1963	i 'd like to know the distance of restaurants from work that has at the most NUMBER_0 reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
1964	where is the most far away restaurants with bigger review count than NUMBER_0 from home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1965	show me what is the description of restaurants with NUMBER_0 or lower rating	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
1966	can you give me a restaurant that serves QUOTED_STRING_0 style cuisine and that 's description is QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1967	tell me how far it is from here to restaurants with the telephone number PHONE_NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
1968	please submit the reviews of restaurants which have the largest number of reviews , and with a rating of more than NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
1969	what is the price range of the restaurant having review count greater than NUMBER_0 which is nearest to home	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
1970	what is the cost of a meal in a restaurant with the lowest review count .	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
1971	what is the amount of reviews of restaurant that is located at home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
1972	show restaurants at NUMBER_0 stars having food type being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1973	bring up the summary of restaurants having description being QUOTED_STRING_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
1974	which restaurants serve QUOTED_STRING_0 cuisine and have an address of here ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1975	show me distances of restaurants with larger rating than NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) => notify
1976	what is the distance from me to restaurants that have no reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
1977	how far is the closest restaurant with more than NUMBER_0 reviews farthest from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
1978	what restaurant has the lowest rating here with QUOTED_STRING_0 food type	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
1979	number the restaurants with a summary of QUOTED_STRING_0 and rating above NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
1980	get me reviews that have rating at most NUMBER_0 as well as rating greater than NUMBER_1 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
1981	in what country would you find restaurants with more than 1 review ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
1982	i want to find the farthest QUOTED_STRING_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
1983	tell me the distance to a restaurant that has a rating of below 1 to here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) => notify
1984	identify the restaurants in this immediate neighborhood that include QUOTED_STRING_0 in their details and have the largest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
1985	what country would contain a LOCATION_0 based restaurant ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
1986	find reviews by author GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
1987	how close are GENERIC_ENTITY_tt:us_state_0 restaurants with the most reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) ) => notify
1988	tell me how far the nearest restaurant is to my work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
1989	fetch restaurants around home with QUOTED_STRING_0 as summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
1990	what restaurant have NUMBER_0 evaluations and offer QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1991	what country are the restaurants around here associated with ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
1992	i want to go to a restaurant that serves QUOTED_STRING_0 and has a review count of precisely NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1993	i want to know what restaurants with QUOTED_STRING_0 cuisine that have a rating of NUMBER_0 max	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
1994	tell me the street of the highest rated QUOTED_STRING_0 restaurant	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
1995	check for a restaurant with a definition of QUOTED_STRING_0 and a workplace with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
1996	i want to know for restaurants with no reviews , what is the street address .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
1997	i want to know the amount of review the furthest restaurant in GENERIC_ENTITY_tt:us_state_0 to my location has .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
1998	how near to work are the restaurants with reviews numbering more than NUMBER_0 and the least amount of reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
1999	grab the most far away restaurants having at least NUMBER_0 reviews from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2000	find the nearest restaurants that have exactly a NUMBER_0 rating .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
2001	please give me the restaurant rating for those places located in the city of LOCATION_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
2002	grab me the price range of the nearest restaurants with food type being QUOTED_STRING_0 to work .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2003	tell me the country and phone number of restaurants near here with the smallest review count	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
2004	what is the image of the reviews with the tiniest rating	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
2005	what are the restaurants with QUOTED_STRING_0 in the postal code and QUOTED_STRING_1 as the lowest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
2006	how many restaurants exist with 1 review ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
2007	show me NUMBER_0 star reviews that were written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
2008	what 's the price range of the dining locales with the smallest number of evaluations	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
2009	name the QUOTED_STRING_0 restaurants rated the highest that have a QUOTED_STRING_1 description .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2010	what restaurants serve QUOTED_STRING_0 cuisine and are rated at a NUMBER_0 or under ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2011	fetch me the telephone of the restaurant with QUOTED_STRING_0 as postal code closest to work .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2012	tell me the price range of restaurants that have no reviews	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
2013	seek for me what is the city of restaurants with at most NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2014	grab the name of restaurants having NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
2015	for restaurants that are nearest to work from work how close are the restaurants with a rating under 1 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) ) => notify
2016	find a restaurant with the largest distance from me that has a 1 star rating .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
2017	show me restaurants close to home that have a rating of exactly NUMBER_0 .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
2018	what is both the food type and price range of the dining places with location equal to home with the tiniest number of evaluations ?	now => [ param:priceRange:String , param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
2019	show me reviews that were published before DATE_0 which have the greatest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) ) [ 1 ] => notify
2020	what is the description of the nearest dining places with rating lower than NUMBER_0 to work ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2021	grab the farthest restaurants having telephone equal to PHONE_NUMBER_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
2022	please enumerate restaurant here containing postal code equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
2023	i would like to see the restaurants with NUMBER_0 reviews that serve QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2024	show me QUOTED_STRING_0 located restaurant descriptions .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2025	find a review with a publication date before DATE_0 that has QUOTED_STRING_0 as it 's description .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
2026	get me what is the description of the QUOTED_STRING_0 restaurants which has the smallest rating .	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
2027	what are some restaurants found in GENERIC_ENTITY_tt:us_state_0 that are close to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:home => notify
2028	what is the review number of the dining business with review count less than NUMBER_0 farthest from work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2029	from the restaurants closest to here , show me the cuisine and pictures of a restaurant with less than a NUMBER_0 rating .	now => [ param:image:Entity(tt:picture) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2030	please list the restaurant with phone number PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2031	get the price range of restaurant having no reviews .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
2032	show me the distance to restaurant	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) => notify
2033	tell me the restaurants farthest away that has a rating of over NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2034	how close is the closest restaurant with telephone equal to PHONE_NUMBER_0 to home from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2035	find reviews that have ratings under a NUMBER_0 and descriptions of QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
2036	reveal the dining locations with rating at minimum NUMBER_0 which offers QUOTED_STRING_0 which having the highest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2037	what is the number of reviews of a restaurant whose city location is LOCATION_0 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
2038	tell me the street of the restaurant that serves QUOTED_STRING_0 and is furthest from work ''	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2039	get the name of restaurant with review count less than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
2040	tell me which state restaurants that have food type equal to QUOTED_STRING_0 are in	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2041	which is the restaurant here having food type being QUOTED_STRING_0 which has the smallest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2042	i want you to find restaurants that have ratings equal to NUMBER_0 and that are around home and enumerate them for me .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:home => notify
2043	i want a restaurant around my house with a rating NUMBER_0 or above .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:home => notify
2044	show me a picture of a restaurant that has more reviews than NUMBER_0 that is closest to work	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2045	what is the street name of the restaurants with more review count than 1 with the tiniest number of reviews ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) [ 1 ] ) => notify
2046	tell me a LOCATION_0 restaurant that has the least reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) [ 1 ] => notify
2047	grab the restaurant having more review count than NUMBER_0 and state equal to GENERIC_ENTITY_tt:us_state_0 which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
2048	what are the QUOTED_STRING_0 restaurants ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2049	what are the restaurants with food type being QUOTED_STRING_0 and review count higher than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2050	show me the picture of a restaurant with a rating lower than NUMBER_0 that 's furthest from home .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2051	get review uploaded by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with date published before DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
2052	find me the review with a summary of QUOTED_STRING_0 for restaurants with QUOTED_STRING_1 as their food type .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_1 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2053	where is the restaurant with number of evaluations equal to NUMBER_0 with the largest count of reviews	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) => notify
2054	search for a QUOTED_STRING_0 restaurant with NUMBER_0 or more reviews and maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2055	what is the distance of restaurant rated with NUMBER_0 star from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
2056	are there any QUOTED_STRING_0 restaurants in GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2057	i 'd like to know how close restaurants with descriptions of QUOTED_STRING_0 are .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) => notify
2058	fetch me the author of the review which has the minimum rating .	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
2059	where are the restaurants with more than NUMBER_0 scores from home ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2060	i would like to know which restaurants have a NUMBER_0 star rating and not under NUMBER_1 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_1 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
2061	give me the least reviewed restaurants with a zip of QUOTED_STRING_0 and have QUOTED_STRING_1 in the description .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
2062	tell me the name of a restaurant near my job .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work => notify
2063	what types of food do restaurants in LOCATION_0 have	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
2064	which restaurants serving QUOTED_STRING_0 in my area have a the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2065	in what country would i find restaurants with no less than NUMBER_0 reviews ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2066	find city with the restaurant QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
2067	get review uploaded by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having rating at most NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
2068	what restaurant get summary being QUOTED_STRING_0 and review count bigger than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2069	seek the restaurants with id equal to QUOTED_STRING_0 farthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2070	what is the rating of the restaurants with review count fewer than 1 with the most reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) => notify
2071	tell me the descriptions of restaurants near my job .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2072	what restaurant with a NUMBER_0 star rating is close by ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
2073	what restaurant has no less than NUMBER_0 reviews and a rating of NUMBER_1 or under ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number <= NUMBER_1 => notify
2074	i want to find restaurants with no reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) => notify
2075	describe restaurants with no more than NUMBER_0 reviews	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2076	tell me the description of reviews that have a greater number of ratings than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) => notify
2077	find restaurants with the minimal rating located in the area of QUOTED_STRING_0 postal code	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
2078	locate restaurants nearby with a rating of NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
2079	how near is the restaurant with the phone number PHONE_NUMBER_0 from home to here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2080	how many restaurants closest to me at home have review counts less than NUMBER_0 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2081	tell me the price range of the restaurant that has a review count of over NUMBER_0 that is the closest to home	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2082	let me see the amount of QUOTED_STRING_0 restaurant reviews that have been received .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2083	i desire restaurants with summary being QUOTED_STRING_0 and location equal to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
2084	where are the farthest restaurants which have more than NUMBER_0 reviews from my current location ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2085	which restaurants are the farthest from my current location ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2086	show me the closest QUOTED_STRING_0 restaurant to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2087	let me know dining locations nearby with served cuisine being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2088	what is the number of restaurants that have a location equal to work ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2089	what is the furthest restaurant from work with more than one review .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] => notify
2090	show me the reviews of restaurants that are greatest than NUMBER_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
2091	which restaurant has the fewest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
2092	for the restaurant near home can you tell me the type of food they have ?	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
2093	how far is the most distant restaurant with phone number equal to PHONE_NUMBER_0 in distiction to home from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2094	what is the telephone of the furthest away restaurant with rating lower than NUMBER_0 from here .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2095	how many total reviews in restaurant with at least NUMBER_0 reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2096	tell me the rating of the furthest restaurant with QUOTED_STRING_0 cuisine .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2097	for restaurants with QUOTED_STRING_0 in their descriptions display for me the zip code	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2098	which reviews that GENERIC_ENTITY_org.schema.Restaurant:Person_0 authored have exactly NUMBER_0 stars ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
2099	show me the restaurants serving QUOTED_STRING_0 food nearby with the lowest ratings .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2100	what are the restaurants with less than NUMBER_0 stars and the same address ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:current_location => notify
2101	from what country is the food of the restaurant with a rating over NUMBER_0 that is furthest from me .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2102	point out how many reviews exceeding NUMBER_0 that the restaurants have .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2103	what restaurant get rating at least NUMBER_0 and summary equivalent to QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2104	get the restaurant in LOCATION_0 which is farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) ) [ 1 ] => notify
2105	how many reviews have restaurants with a review count equal to NUMBER_0 that are the most distant from the job ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
2106	what is the total review count of the restaurant having postal code containing QUOTED_STRING_0 with the most reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
2107	which reviews rated NUMBER_0 were written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
2108	how many restaurant with 1 reviews exist ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
2109	show me restaurants that have QUOTED_STRING_0 in the summary with a minimum of a NUMBER_0 rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2110	get me what is the country of restaurants with rating lower than 1	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
2111	show me the country of the restaurant with QUOTED_STRING_0 in the description and smallest number of reviews .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
2112	grab the price range of restaurant with 1 reviews	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
2113	get dining locations around work having NUMBER_0 or having less number of evaluations	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:work => notify
2114	what are review made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having description being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
2115	how many total reviews do the restaurants with review count equal to NUMBER_0 that is farthest from work have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
2116	who wrote the lowest rated review ?	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
2117	reveal what 's the name of restaurant with phone number equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2118	show me the restaurants with a QUOTED_STRING_0 description serving QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
2119	what are the restaurants with zero reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) [ 1 ] => notify
2120	the restaurant with the same address as the restaurant offering QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2121	what is the number of reviews that have author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
2122	which restaurant having higher review count than NUMBER_0 and QUOTED_STRING_0 as summary gets the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2123	find QUOTED_STRING_0 restaurants	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2124	fetch me what is the name of restaurant having review count equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
2125	what is the image of the restaurant with higher review count than NUMBER_0 which is nearest to work ?	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2126	which restaurant here having QUOTED_STRING_0 in the cuisine has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2127	give all the restaurants with a rating over NUMBER_0 that serve QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2128	what is the name of the state that the restaurant that has the telephone number PHONE_NUMBER_0 is in ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
2129	i 'd like to see reviews of restaurants that are located at work	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2130	which reviews with a rating of NUMBER_0 or more were written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
2131	seek for me what is the telephone of the restaurant having review count more than NUMBER_0 farthest from home	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2132	find the restaurant near work with less than NUMBER_0 reviews and tell me the street .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2133	find restaurants that serve QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2134	show all restaurants in my area with a review count over NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
2135	a restaurant in LOCATION_0 would be found in which country ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
2136	what is the distance of the restaurant farthest away from me that has a rating larger than NUMBER_0 ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2137	look for restaurants that has a rating of not greater than NUMBER_0 and a review count of over NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
2138	tell me the zip code and type of food for restaurants with a NUMBER_0 or smaller rating and QUOTED_STRING_0 cuisine	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2139	fetch restaurants having NUMBER_0 or greater rating that offer QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2140	which restaurants with QUOTED_STRING_0 contained in their descriptions are the furthest away from this location ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2141	tell me which restaurant has the most reviews and a QUOTED_STRING_0 in its zip code .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2142	i need restaurants having QUOTED_STRING_0 in the food type and rating not more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2143	which restaurant in this area having cuisine being QUOTED_STRING_0 gets the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2144	which restaurants are located in GENERIC_ENTITY_tt:country_0 and have QUOTED_STRING_0 as summary ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:description:String =~ QUOTED_STRING_0 => notify
2145	name the restaurant rated NUMBER_0 or below with a minimum of NUMBER_1 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_1 and param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
2146	fetch the restaurants around home having QUOTED_STRING_0 as description with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
2147	inform me the restaurant with the postal code is QUOTED_STRING_0 and the description is QUOTED_STRING_1 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
2148	search near my job and tell me how close QUOTED_STRING_0 restaurants are .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
2149	where is the restaurants having review count larger than NUMBER_0 and phone number equal to PHONE_NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
2150	how far is the restaurant having zero reviews closest to work to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
2151	what information do you have on restaurants with a score of NUMBER_0 or less ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
2152	what is the image of restaurant close to here	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2153	determine the reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that are rated NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
2154	what are dining locations having description equal to QUOTED_STRING_0 and rating at minimum NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2155	i 'd like to know the food type and the description of restaurants inside GENERIC_ENTITY_tt:us_state_0 .	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
2156	what is the served cuisine and postal code of restaurant with NUMBER_0 or smaller rating and location equal to work .	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work ) => notify
2157	get me what is the location of restaurant with location equal to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2158	how many restaurant containing QUOTED_STRING_0 in the cuisine are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2159	i want reviews that have NUMBER_0 or more rating and a rating of under NUMBER_1 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_1 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
2160	grab the zip code of restaurant having rating lower than NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
2161	i need evaluations that was submitted by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
2162	which restaurant here with NUMBER_0 or lower rating gets the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
2163	what kind of rating is given to restaurants with the equivalent of a work location ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2164	what is the state name of restaurant here	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2165	get review having author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
2166	get restaurant in this area has telephone equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2167	find restaurants in the QUOTED_STRING_0 zip code area that are in the same place as my home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
2168	tell me the name of the city of restaurants zip code QUOTED_STRING_0 closest to home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2169	what QUOTED_STRING_0 food restaurant is near me ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2170	what restaurant have NUMBER_0 reviews and cooks QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2171	i need restaurant rated NUMBER_0 star having state equivalent to GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
2172	show me the nearest restaurants near my home and their cuisine .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2173	show restaurants near my place with ratings less than NUMBER_0 .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2174	what is the price range of a restaurant which has 1 review ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
2175	get dining locations having address equal to work and NUMBER_0 or less rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
2176	which reviews get date published before DATE_0 and is by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
2177	let me know the number of evaluations of dining locations with QUOTED_STRING_0 as description	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2178	tell me how many restaurants are in the city of LOCATION_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
2179	what are the reviews of all restaurants with over NUMBER_0 reviews that have QUOTED_STRING_0 in their description .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2180	find the restaurant with fewer with than NUMBER_0 reviews and is furthest away from home and tell me the how many reviews there are .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2181	find restaurant having QUOTED_STRING_0 as description and review count not larger than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2182	for the restaurant that has the lowest count of reviews what is its city ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
2183	i want to see a description of a restaurant with QUOTED_STRING_0 in it .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2184	i 'd like to know the name of a restaurant with a rating over NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
2185	what 's the summary of dining locations with NUMBER_0 or less rating	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
2186	find reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that were published before DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
2187	how close is the closest restaurants in GENERIC_ENTITY_tt:us_state_0 to work to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
2188	what is the price range for restaurants located here	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2189	fetch the farthest restaurants with rating more than NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2190	find the restaurant named that has a higher review count than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
2191	what 's the evaluations of the most distant dining locales with greater rating than 1	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
2192	farthest away from work , what is the street name of the restaurant with QUOTED_STRING_0 food	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2193	get me the country of the restaurant having QUOTED_STRING_0 in the description with the smallest count of reviews	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
2194	which restaurants have a review count of lower than NUMBER_0 and serve QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2195	get dining locations with food type being QUOTED_STRING_0 and number of evaluations not more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2196	find the state of restaurants having NUMBER_0 reviews	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2197	tell me how near QUOTED_STRING_0 restaurants are with the fewest reviews from my job .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
2198	which restaurants have QUOTED_STRING_0 in the postal code and their location is near work and have the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
2199	search restaurant in this area with smaller rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
2200	look for restaurants in this area that have a rating of smaller than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
2201	get the location of the restaurants that is closest to home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2202	what are the restaurants here with a description equaling QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
2203	please count the restaurants with zero reviews	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
2204	give me the restaurants with NUMBER_0 reviews that serve QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2205	gather street address of restaurants with review count smaller than NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2206	how many total reviews does the nearest restaurants to work have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2207	i 'm looking for restaurants near me that have QUOTED_STRING_0 contained in the summary and that have the worst rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
2208	present dining locations has phone number equal to PHONE_NUMBER_0 which serves QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2209	need dining locales having smaller rating than NUMBER_0 and food type equal to QUOTED_STRING_0 which has the tiniest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2210	fetch me the restaurant having QUOTED_STRING_0 in the zip code which is most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2211	what restaurant locations are there for QUOTED_STRING_0 food with QUOTED_STRING_1 in their rundown ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2212	show me restaurants with more than NUMBER_0 reviews that are farthest away	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2213	please name the restaurants with the same location as here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location => notify
2214	find nearby restaurants with QUOTED_STRING_0 cuisine with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2215	tell me the restaurant near here that serves QUOTED_STRING_0 cuisine and has the smallest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2216	grab the restaurants with postal code containing QUOTED_STRING_0	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2217	which restaurant containing QUOTED_STRING_0 as description and phone number equal to PHONE_NUMBER_0 gets the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
2218	show me what is the rating of the farthest dining places with having less evaluations than 1 from home	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
2219	grab for me the address of the restaurants with the lowest review count .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
2220	i need to know how far are the restaurant having country equal to GENERIC_ENTITY_tt:country_0 which is nearest to home from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
2221	how many of the reviews are in the NUMBER_0 star place farthest from work are ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
2222	find restaurants with more than NUMBER_0 reviews that have QUOTED_STRING_0 in the summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2223	which restaurants get food type equal to QUOTED_STRING_0 and location equivalent to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2224	grab the street address of restaurant with location equal to here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2225	show me the restaurant 's country which has a review count less than 1 and is farthest from home .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
2226	find the country of the restaurant that is farthest from work	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2227	find restaurants that have NUMBER_0 reviews and are located in GENERIC_ENTITY_tt:us_state_0 state .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
2228	tell me where the closest restaurants are to here with a location of work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
2229	what are restaurants with a QUOTED_STRING_0 description and a total of NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2230	find restaurants that have a location equal to home closest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) ) [ 1 ] => notify
2231	which restaurant with the best possible rating has NUMBER_0 reviews at most and a summary equaling QUOTED_STRING_0 ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2232	i would like to know which restaurant has a rating of under NUMBER_0 and the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
2233	seek for me restaurants with served cuisine being QUOTED_STRING_0 and rating not more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2234	find a restaurants with more than NUMBER_0 reviews and a rating not above NUMBER_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
2235	tell me which city the restaurant with a telephone number of PHONE_NUMBER_0 is located in .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
2236	please submit a file of QUOTED_STRING_0 restaurants rated NUMBER_0 stars or more .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2237	list the restaurants around here with a postal code equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
2238	which are the restaurant having no fewer than NUMBER_0 reviews and NUMBER_1 or smaller rating .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number <= NUMBER_1 => notify
2239	please enumerate restaurant having location equivalent to home that serves QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2240	grab ratings of restaurants with under 1 review .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
2241	which are the restaurant having no less than than NUMBER_0 evaluations and NUMBER_1 or less rating	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number <= NUMBER_1 => notify
2242	text the image and location of the most far away QUOTED_STRING_0 restaurants .	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2243	what is the address of the dining places with more review number than NUMBER_0 farthest from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2244	for the restaurants with the largest distance from home and smaller review count than NUMBER_0 , i would like to see reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2245	i 'd like to know the price range of restaurant with the QUOTED_STRING_0 id	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
2246	show me both the state and cuisine of the nearest restaurant to work .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2247	show restaurant with the state being GENERIC_ENTITY_tt:us_state_0 and QUOTED_STRING_0 in the cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2248	gather the city of restaurants with id equal to QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
2249	tell me the names of all QUOTED_STRING_0 restaurants in the QUOTED_STRING_1 postal code .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2250	how close are the restaurants with 1 reviews most far away from work to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
2251	what is the closeness of the restaurant with smallest amounts of reviews and the zip QUOTED_STRING_0 to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
2252	find the restaurant with the smallest number of reviews that is closest to here and give me the name and street address .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
2253	what places to eat have a NUMBER_0 or higher rating and more than NUMBER_1 reviews total ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
2254	show me restaurants with QUOTED_STRING_0 in the description that sell QUOTED_STRING_1 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
2255	i need to see the location of a restaurant with NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2256	which restaurants have gotten NUMBER_0 reviews and serve QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2257	how close is the nearest restaurants with NUMBER_0 reviews to work to home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2258	fetch the farthest restaurant that serve QUOTED_STRING_0 from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2259	fetch the city of restaurants with id equal to QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
2260	fetch the street of the nearest restaurants to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2261	what price range is the restaurant that has the phone number PHONE_NUMBER_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
2262	please find a restaurant that has the lowest number of reviews and a ranking of between NUMBER_0 and NUMBER_1 .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
2263	how close is the restaurants in this area with the smallest count of reviews to here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
2264	text me what is the zip code of restaurant having greater rating than NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
2265	tell me which restaurant with an id equal to QUOTED_STRING_0 is the greatest distance from me .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2266	what amount of reviews have been given to restaurants with QUOTED_STRING_0 in their descriptions ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2267	list the telephone number of the restaurant nearest to work in the QUOTED_STRING_0 postal code	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2268	i want restaurants with more than NUMBER_0 reviews and a total of NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
2269	where is the restaurants having QUOTED_STRING_0 as description and rating equivalent to NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) => notify
2270	show me the type of cuisine served at the restaurant with QUOTED_STRING_0 in the description that is the farthest distance from home .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2271	tell me how many reviews equal to NUMBER_0 there are .	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
2272	tell me the amount of restaurants with 1 reviews .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
2273	alert me the explanation of the restaurant having postal code containing QUOTED_STRING_0 closest to home	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2274	what are some restaurants close by that contain QUOTED_STRING_0 in the cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2275	which restaurants have a review count higher than NUMBER_0 in this location ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
2276	which is the review having description being QUOTED_STRING_0 and author equivalent to GENERIC_ENTITY_org.schema.Restaurant:Person_0 which has the lowest rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2277	which eateries with QUOTED_STRING_0 food have received NUMBER_0 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2278	get review uploaded by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with date of publication before DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
2279	check for restaurants with QUOTED_STRING_0 in the QUOTED_STRING_1 postal code with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
2280	give me all the zip code QUOTED_STRING_0 restaurants with a rating over NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
2281	present the restaurant with rating at least NUMBER_0 and summary equal to QUOTED_STRING_0 with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2282	tell me what the restaurant 's price range is lower than NUMBER_0 closest to home	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2283	how far is it from work to restaurant that has at least NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
2284	tell me the zip code of restaurant having id equivalent to QUOTED_STRING_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
2285	find reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with QUOTED_STRING_0 in the description .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
2286	tell me the contact number of restaurants that have a review count of NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2287	grab restaurant having NUMBER_0 reviews and address equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
2288	bring forth restaurant in GENERIC_ENTITY_tt:country_0 with number of evaluations higher than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
2289	what are the highest rated QUOTED_STRING_0 restaurants ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2290	where is the restaurants having NUMBER_0 or larger rating that serves QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2291	how are QUOTED_STRING_0 based restaurants described ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2292	find restaurants in this area with telephone equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2293	show the rating of restaurants with location equal to work .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2294	what are the QUOTED_STRING_0 restaurants around here ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2295	what 's both the postal code and food type of dining locations with NUMBER_0 or less rating and cuisine being QUOTED_STRING_0	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2296	name the restaurants with QUOTED_STRING_0 food and a summary of QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2297	for restaurants in LOCATION_0 i want to see the descriptions .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
2298	grab what is the location of the QUOTED_STRING_0 restaurant which has the maximum rating	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
2299	alert me the rating of the QUOTED_STRING_0 restaurant with the smallest rating	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
2300	show restaurants with a postal code equal to QUOTED_STRING_0 and address equal to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
2301	get review written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with date published after DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
2302	say the summary of reviews published earlier than DATE_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
2303	which restaurants get rating at least NUMBER_0 and are near me	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
2304	restaurants with the fewest reviews and a total of reviews equaling NUMBER_0 are how close to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
2305	where is a NUMBER_0 star rated restaurant located ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
2306	kindly list which restaurants have n't gotten any reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
2307	where is the restaurants having QUOTED_STRING_0 as description and QUOTED_STRING_1 in the cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) => notify
2308	fetch the state of restaurants with review count smaller than NUMBER_0	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2309	give me restaurant with NUMBER_0 or smaller rating which offers QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2310	tell me review having earlier date of publication than DATE_0 and lower rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
2311	say what is the name of the restaurant in this area with the largest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
2312	tell me the phone number of a restaurant with no reviews	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
2313	i 'd like to know how far the restaurant with no reviews is to work to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
2314	which are the restaurants near here that sells QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2315	find restaurants with a QUOTED_STRING_0 cuisine that is located here	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2316	gather zip code of restaurants with location equal to work .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2317	tell me the street name of a restaurant with a review count lower than NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2318	how close are the restaurants having fewer than NUMBER_0 reviews which is farthest from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2319	how many places with more reviews than NUMBER_0 are closest to where i am now ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2320	what restaurants are closest to work with a NUMBER_0 star rating	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
2321	how close are the restaurants having smaller than NUMBER_0 reviews that is most far away from home from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2322	what is the distance from home to restaurants containing QUOTED_STRING_0 in the cuisine	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
2323	i like to know the price range of restaurants that are here	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2324	how far from home is the restaurant with a lower count of reviews than NUMBER_0 with the least number of reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) ) => notify
2325	find me the restaurants with cuisine being QUOTED_STRING_0 and description equal to QUOTED_STRING_1 which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2326	what are the GENERIC_ENTITY_tt:us_state_0 restaurants with more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
2327	get the distance from here to restaurant having zip code being QUOTED_STRING_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
2328	find restaurants near home with the description QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
2329	let me see what zip code pertains to a restaurant that has a total of NUMBER_0 reviews .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2330	what is the postal code for the restaurant located around here that has the least reviews .	now => [ param:address.postalCode:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
2331	how many reviews in restaurant with at the minimum of NUMBER_0 reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2332	tell me the city of the nearest restaurant that has the postal code QUOTED_STRING_0 nearest my work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2333	find GENERIC_ENTITY_org.schema.Restaurant:Person_0 penned reviews with a rating of NUMBER_0 maximum .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
2334	show me the QUOTED_STRING_0 that is farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2335	show locations of restaurants offering QUOTED_STRING_0 cuisine and with a NUMBER_0 or lower rating .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2336	zip code QUOTED_STRING_0 is in which country ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2337	say the restaurant score under NUMBER_0 with the most reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
2338	look review count for restaurants that have QUOTED_STRING_0 in the summary	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2339	i would like to know which restaurants that have zero reviews are the least distance from home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
2340	how near is the most distant dining locales with number of evaluations equal to NUMBER_0 in distiction to home to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2341	show me what is the food type of restaurants with LOCATION_0 as city	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
2342	what are QUOTED_STRING_0 restaurants in the country of GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2343	which restaurants have more than NUMBER_0 reviews and a description that matches QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2344	i 'd like to know in what city are restaurants with no more than NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2345	what country has restaurants with a rating less than 1	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
2346	i would like to know which restaurants serving QUOTED_STRING_0 cuisine have fewer than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2347	what are the restaurants that have the smallest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) [ 1 ] => notify
2348	fetch me what is the distance of restaurant with review count less than NUMBER_0 from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
2349	show me the farthest restaurants containing less than NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2350	name the city that contains restaurants whose id equals QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
2351	get me what is the location of restaurants having QUOTED_STRING_0 in the descriptions	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2352	what is the distance between work and home for the closest restaurants in GENERIC_ENTITY_tt:us_state_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
2353	i 'd like to know the description of the closest restaurant to my location now that has a bigger rating than NUMBER_0	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2354	which restaurant with rating at least NUMBER_0 and NUMBER_1 or lower rating has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
2355	inform me the distance of restaurants that are located equal to here from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) => notify
2356	i want to know the furthest restaurant from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
2357	i want dining locations with cuisine equal to QUOTED_STRING_0 and location equal to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2358	what state has the restaurant with the postal code of QUOTED_STRING_0 and the most reviews ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
2359	fetch the state of restaurant with descriptions equal to QUOTED_STRING_0	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2360	gather the restaurant with location equal to home	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
2361	give me the QUOTED_STRING_0 restaurants that have an address near here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2362	find the restaurant nearest that has the PHONE_NUMBER_0 phone number .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
2363	tell me the street name of restaurants nearest my home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2364	find all restaurants in zip code QUOTED_STRING_0 that serve QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
2365	which dining locations around work having rating equal to NUMBER_0 gets the minimum number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
2366	who wrote the review with the worst rating ?	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
2367	find reviews that have an under NUMBER_0 rating and a description which matches QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
2368	for restaurants that have maximum rating i want to know their street .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
2369	going from home from work tell me distance to the farthest restaurant that has a phone number equal to PHONE_NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2370	find all restaurants that serve QUOTED_STRING_0 food near here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2371	what QUOTED_STRING_0 based restaurant is closest to home ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2372	what is the price range of restaurants with smaller review count than NUMBER_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2373	which are restaurant with description equal to QUOTED_STRING_0 and rating equivalent to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2374	what restaurant with QUOTED_STRING_0 food has the same address as this location ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2375	what is the creator of review having NUMBER_0 or smaller rating ?	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
2376	what are the restaurants with no less than NUMBER_0 reviews and smaller review count than NUMBER_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.reviewCount:Number <= NUMBER_1 => notify
2377	what is the town of the dining business that is nearest to home ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2378	get what is the rating of review having date published sooner than DATE_0	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
2379	tell me descriptions of restaurants with over NUMBER_0 review count	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2380	tell me the restaurant with an under NUMBER_0 review count and the fewest reviews of all .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
2381	show me the location of QUOTED_STRING_0 restaurants and their cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2382	which restaurants get cuisine equal to QUOTED_STRING_0 and location equal to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2383	search for me what is the distance of restaurants having location equal to here from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) => notify
2384	find all the most reviewed restaurants that are located in GENERIC_ENTITY_tt:us_state_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
2385	list restaurants with a postal code equal to QUOTED_STRING_0 and address equal to my home	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
2386	give me all the restaurant reviews with a rating over NUMBER_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2387	what is the rating of restaurant containing postal code equal to QUOTED_STRING_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2388	display for me the country that is the farthest distance away and that has the postal code with QUOTED_STRING_0 .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2389	grab the restaurant with at least NUMBER_0 reviews with the largest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
2390	display the rating of restaurants having at least NUMBER_0 reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2391	what is the cuisine type of restaurant near home .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
2392	which restaurants in my area have QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2393	how far are restaurants with fewer than 1 reviews from my location .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) ) => notify
2394	bring up the restaurants with the postal code of QUOTED_STRING_0 and has a food type equal to QUOTED_STRING_1 and has a review count that is the maximum .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
2395	give me the count of restaurants that have postal code with QUOTED_STRING_0 .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2396	gather the restaurants having telephone equal to PHONE_NUMBER_0 nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
2397	i want to see a restaurant with a lesser rating than NUMBER_0 that provides QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2398	i want to see the amount of reviews the nearest restaurant has .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2399	grab for me the descriptions of restaurant in LOCATION_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
2400	find me what is the image of restaurant with larger review count than NUMBER_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2401	what is the restaurants containing QUOTED_STRING_0 in the cuisine and rating equal to NUMBER_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2402	what are the QUOTED_STRING_0 restaurants near me ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2403	find all restaurants near home with a NUMBER_0 rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:home => notify
2404	find me what is the zip code of restaurants having review count equal to NUMBER_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2405	say the rating of dining locales around here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2406	how close is the closest restaurants rated NUMBER_0 star to home from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2407	tell me restaurant 's ratings that have LOCATION_0 as the city	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
2408	for the restaurant that has a rating below 1 and the highest number of reviews how close by is it ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) [ 1 ] ) ) => notify
2409	grab the country of restaurant having descriptions containing QUOTED_STRING_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2410	can you tell me the postal code for the restaurant here with the least reviews ?	now => [ param:address.postalCode:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
2411	how many current reviews in the restaurants having phone number equal to PHONE_NUMBER_0 closest to here ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
2412	get me what is the price range of the restaurant having greater rating than NUMBER_0 nearest to home	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2413	which restaurants in the postal code QUOTED_STRING_0 serve QUOTED_STRING_1 cuisine and have the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
2414	display any restaurants near me which have a rating that is less than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
2415	of restaurants with a NUMBER_0 rating , which also have QUOTED_STRING_0 in the description ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2416	what is the average score for restaurants under 1 with most reviews ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) => notify
2417	fetch me the price range of the closest restaurants with QUOTED_STRING_0 in the description to home .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2418	a restaurant with the QUOTED_STRING_0 description reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2419	i want to see the reviews of 1 star restaurants in the postal code QUOTED_STRING_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2420	what are the restaurant having description being QUOTED_STRING_0 and location equivalent to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
2421	show me the QUOTED_STRING_0 restaurants that in the country of GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2422	what number of reviews are there in the restaurant that has postal code with QUOTED_STRING_0 that is the greatest distance from home ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2423	suggest some reviews for restaurants ranked higher than NUMBER_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2424	i 'd like to see descriptions overview with a rating equal to 1	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == 1 ) => notify
2425	what 's the restaurant 's name near work ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work => notify
2426	how near is the farthest restaurant with phone number equal to PHONE_NUMBER_0 from home from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2427	which restaurant with a review count equal to NUMBER_0 is the longest distance from here ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
2428	find out which city restaurants are in with at most NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2429	get reviews of restaurants containing QUOTED_STRING_0 as summary	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2430	reveal what 's the food type and description of dining locales with state equal to GENERIC_ENTITY_tt:us_state_0	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
2431	what is the location of the restaurants with fewer rating than NUMBER_0 that is closest to here .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2432	tell me what the name of the city is for restaurants that have a review count that equals NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2433	i 'd like the reviews for NUMBER_0 star rated restaurants .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
2434	list the restaurant with a listing of QUOTED_STRING_0 and QUOTED_STRING_1 postal code .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:description:String =~ QUOTED_STRING_0 => notify
2435	which is the dining locations having QUOTED_STRING_0 that is in zip code and QUOTED_STRING_1 as description which has the minimum number of evaluations ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
2436	tell me where the restaurants are located without reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
2437	i 'd like to see reviews posted after DATE_0 by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
2438	can you find all the reviews GENERIC_ENTITY_org.schema.Restaurant:Person_0 wrote that have publication dates prior to DATE_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
2439	what kind of cuisine do restaurants here serve	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2440	how many reviews are there in restaurants furthest from here that have QUOTED_STRING_0 food near work .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2441	show me the worst rated restaurants furthest from my job .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
2442	how far away is restaurant having rating lower than 1 to here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) => notify
2443	name the QUOTED_STRING_0 cuisine restaurant with an address matching this address .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2444	which is the restaurant having smaller rating than NUMBER_0 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
2445	what is the number of reviews that a restaurant near hear has	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2446	find QUOTED_STRING_0 restaurants with the phone number PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2447	which restaurant with rating at tiniest NUMBER_0 and NUMBER_1 or less rating having the minimum number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
2448	what is the cuisine and zip code of a restaurant that is close to work with a rating that is NUMBER_0 or lower .	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work ) => notify
2449	tell me the rating of reviews that is equal to NUMBER_0 .	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
2450	name the places to eat with a NUMBER_0 as a rating that are close to my work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
2451	get the QUOTED_STRING_0 restaurants with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2452	show me the country of restaurants with rating more than NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
2453	grab the name of review with rating at most NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
2454	i 'd like to know the review ratings that have ratings of exactly NUMBER_0 .	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
2455	i want to know city restaurants that have NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2456	tell me restaurants with a rating of at least NUMBER_0 that serve QUOTED_STRING_0 which have the greatest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2457	show me the creator of the review which has the minimum rating .	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
2458	show me restaurants that have greater than NUMBER_0 reviews and include QUOTED_STRING_0 in the description	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2459	tell me the state of restaurants with NUMBER_0 reviews	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2460	tell me what are QUOTED_STRING_0 restaurants having summary being QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2461	i 'd like to know of a restaurant that has a lower than 1 rating that is the closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] => notify
2462	how close is the farthest restaurants with review count equal to NUMBER_0 from home to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2463	which QUOTED_STRING_0 restaurants have fewer rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2464	what is the street of restaurants close to here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2465	what is the restaurant with a minimum of NUMBER_0 reviews that has the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
2466	which restaurants with a location of here serve QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2467	i 'd like to see the zip code of restaurant with a rating of below NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
2468	show me the restaurant around me with QUOTED_STRING_0 in the postal code with the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
2469	i would like to know which food type the restaurant that has QUOTED_STRING_0 as the postal code serves .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2470	i 'd like to know the contact number of the restaurant near my work with the lowest reviews .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
2471	which evaluations get NUMBER_0 or more rating and is authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
2472	tell me the cuisine that is served at restaurants with lower than NUMBER_0 ratings	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2473	what topmost rated restaurant has more than NUMBER_0 reviews and QUOTED_STRING_0 in its introduction ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2474	find a restaurant here that is closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
2475	show me the street of the restaurant with cuisine being QUOTED_STRING_0 with the highest number of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
2476	what is the total reviews of restaurants with review count equal to NUMBER_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2477	new restaurant with food type similar to QUOTED_STRING_0 and NUMBER_0 checkpoints	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2478	how near to here is a restaurant that 's got a rating under 1 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) => notify
2479	i want to see reviews that GENERIC_ENTITY_org.schema.Restaurant:Person_0 wrote that are NUMBER_0 star	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
2480	seek restaurants having postal code being QUOTED_STRING_0 and food type containing QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
2481	get restaurant having summary equal to QUOTED_STRING_0 and review count larger than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2482	what restaurant has a rating less than NUMBER_0 and is farthest from home ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
2483	i would like to see what type of cuisine the restaurant has with a review count that is over NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2484	tell me the restaurant that has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
2485	say what is the telephone of the restaurant close to work with the least reviews	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
2486	please show me a restaurant that has less than a NUMBER_0 rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
2487	which is the restaurant nearby that serves QUOTED_STRING_0 food which having the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2488	grab reviews of restaurant having fewer than NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2489	fetch the city of restaurants having review count equal to NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2490	i want to know how close it is to restaurants that are equal to QUOTED_STRING_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) => notify
2491	get dining locations in here having served cuisine equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2492	what restaurants are close by that have QUOTED_STRING_0 in the cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2493	which restaurant has the highest rating with a review count that is greater than NUMBER_0 and contains QUOTED_STRING_0 in the description ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2494	which are restaurant having QUOTED_STRING_0 in the cuisine and telephone number equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2495	give me all restaurants in the zip code QUOTED_STRING_0 that serve QUOTED_STRING_1 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
2496	fetch me what is the name of restaurant with phone number equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2497	show me a restaurant with a rating less than NUMBER_0 that is close tow ork .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
2498	gather the country of restaurant with telephone equal to PHONE_NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
2499	for restaurant that serve QUOTED_STRING_0 food let me know the price range	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2500	what are the restaurants with lower review count than NUMBER_0 and cuisine being QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2501	get me the location of restaurant with telephone equal to PHONE_NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
2502	what are the restaurants in here that offer QUOTED_STRING_0 food type	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2503	tell me a city with a restaurant that offers QUOTED_STRING_0 as served cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2504	tell me how far restaurants close to work are to here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
2505	find the restaurants with reviews containing QUOTED_STRING_0 as their description and rating of NUMBER_0 or under .	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:description:String =~ QUOTED_STRING_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) and param:reviewRating.ratingValue:Number <= NUMBER_0 } => notify
2506	pull up restaurants in GENERIC_ENTITY_tt:country_0 with address equivalent to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
2507	tell me how many reviews GENERIC_ENTITY_tt:us_state_0 restaurants have .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
2508	what is the rating of restaurant having postal code equivalent to QUOTED_STRING_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2509	what zip code applies to a restaurant with zero reviews ?	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
2510	find restaurants that have NUMBER_0 reviews at this location .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
2511	i 'd like to know the rating of restaurants that have LOCATION_0 as the city	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
2512	name the places to eat that have NUMBER_0 or fewer posted reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
2513	can you give me a NUMBER_0 star rated restaurant that is located in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
2514	show me the picture of restaurants in zip code QUOTED_STRING_0 that are closest to me in work .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2515	gather the food type and phone number of the most far away QUOTED_STRING_0 restaurants	now => [ param:servesCuisine:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2516	alert me both the state and cuisine of the nearest restaurant to work	now => [ param:address.addressRegion:Entity(tt:us_state) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2517	fetch restaurants having QUOTED_STRING_0 as description and review count not more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2518	search the restaurants with id equivalent to QUOTED_STRING_0 farthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2519	what are the QUOTED_STRING_0 restaurants that have more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2520	find a QUOTED_STRING_0 restaurant that has QUOTED_STRING_1 in the description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2521	i want the restaurant with at least NUMBER_0 reviews that 's closest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2522	amount of evaluations that is in restaurant rated NUMBER_0 star which is most far away in distiction to work ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
2523	i would like to know the price range and name of restaurant that is in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
2524	let me know what 's the city of restaurant with rating at minimum NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
2525	what are the reviews for the restaurant furthest from work with a greater than NUMBER_0 rating ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2526	tell me the price range of restaurants that contain QUOTED_STRING_0 in their description that 's closest to me .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2527	what is the city name of the restaurant that is closest to home ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2528	text me the rating of review having QUOTED_STRING_0 in the descriptions	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2529	what is the phone number of restaurants that have a review count of exactly NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2530	grab for me the country of the restaurant having larger rating than NUMBER_0 farthest from home .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2531	i need restaurants having NUMBER_0 or larger rating which offer QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2532	i want to know the street address of a restaurant that has the location equal to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2533	tell me the closest distance from home to work for restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
2534	how far away are the restaurant having lower review count than NUMBER_0 with the smallest number of reviews to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) ) => notify
2535	show me the reviews of restaurant having smaller review count than NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2536	what 's the distance to restaurants in LOCATION_0 from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
2537	how close is the restaurant with QUOTED_STRING_0 as postal code with the smallest number of reviews to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
2538	where is the restaurant in the state of GENERIC_ENTITY_tt:us_state_0 with the highest number of reviews	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) => notify
2539	give me the rating of restaurants that have a summary of QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2540	what are the restaurants with a description of QUOTED_STRING_0 and a NUMBER_0 rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2541	gather the telephone of restaurant having higher review count than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2542	which reviews with a QUOTED_STRING_0 summary have a publication date later than DATE_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
2543	fetch me what is the descriptions of restaurant in QUOTED_STRING_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2544	what are restaurant which serves QUOTED_STRING_0 food and with QUOTED_STRING_1 that is in zip code ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2545	what does a restaurant with NUMBER_0 reviews have as its rating ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2546	tell me the farthest restaurant away from here is .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
2547	tell me how many reviews there are for restaurants with NUMBER_0 reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2548	show me the ratings of the restaurants that are the closest which also have QUOTED_STRING_0 in the description ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2549	show me restaurant with NUMBER_0 or less rating which offers QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2550	tell me the minimum score of the QUOTED_STRING_0 restaurant	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
2551	give me a city that serves QUOTED_STRING_0 food .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2552	what restaurants are the greatest distance from here and have descriptions with QUOTED_STRING_0 in them ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2553	what is the rating of a restaurant that has QUOTED_STRING_0 as the zip code ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2554	what are the restaurants with a QUOTED_STRING_0 postal code located in GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
2555	fetch restaurant with food type equal to QUOTED_STRING_0 and state equal to GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2556	say the number of reviews of restaurant with location equivalent to here	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2557	fetch me what is the country of restaurants rated NUMBER_0 star .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
2558	retrieve the number of reviews for a restaurant that has less than a 1 rating	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
2559	let me know where a restaurant with a location that 's the same as work can be found .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2560	gather me what is the food type of the restaurants with lower rating than NUMBER_0 closest to home	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2561	find me reviews of restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2562	what are the places to eat that have a rating of NUMBER_0 or more and also have a summary titled QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2563	seek the restaurants with greater rating than 1 with the least reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] => notify
2564	what is the cuisine of restaurant with rating at minimum NUMBER_0	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
2565	find me restaurants that have QUOTED_STRING_0 in the description and the phone number PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2566	gather for me the street of restaurant with location equal to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2567	name the restaurant with a summary that has QUOTED_STRING_0 in it and a rating of NUMBER_0 or higher .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2568	tell me QUOTED_STRING_0 restaurants with the closest distance .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location => notify
2569	get the restaurant with review count fewer than NUMBER_0 which is most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
2570	what list can you come up with for restaurants in GENERIC_ENTITY_tt:us_state_0 where QUOTED_STRING_0 cuisine is offered ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2571	i 'd like to know how far away the restaurant that has a higher than NUMBER_0 review count is from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2572	show all reviews from restaurants with more than NUMBER_0 reviews published later than DATE_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2573	which restaurants with QUOTED_STRING_0 in the description have the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
2574	show all restaurants with a telephone number of + PHONE_NUMBER_0 and a review number of more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2575	report the QUOTED_STRING_0 food restaurants in this neighborhood , please .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2576	i want restaurant having address equivalent to home and cuisine being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2577	get me what is the country of restaurants rated NUMBER_0 star .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
2578	show restaurants nearby with a rating under NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
2579	where are the restaurants located that are in GENERIC_ENTITY_tt:us_state_0 and their summaries have to be QUOTED_STRING_0 as well ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:description:String =~ QUOTED_STRING_0 ) => notify
2580	give me all restaurants with more than NUMBER_0 reviews and have QUOTED_STRING_0 in the description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2581	i 'd like to know the restaurant in QUOTED_STRING_0 that is nearest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2582	for restaurants with review counts of less than NUMBER_0 show me the street address	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2583	display the country of the restaurant which is farthest from home and that has a review count lower than 1 .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
2584	present to me what is the image of the nearest restaurants with QUOTED_STRING_0 in the description to work	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2585	fetch me the phone number of the restaurants with QUOTED_STRING_0 as postal code which is most far away from work .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2586	what restaurant , with at least NUMBER_0 reviews , has QUOTED_STRING_0 cuisine and the max score ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2587	tell me the phone number of the restaurant with more than NUMBER_0 reviews that 's furthest from my house .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2588	find the furthest restaurants from my home that have less than NUMBER_0 reviews .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
2589	reveal what 's the evaluations of the restaurant having postal code containing QUOTED_STRING_0 most distant in distiction to here	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2590	show me the closest restaurant with a number of PHONE_NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2591	how close is the restaurant around here with the fewest reviews to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
2592	i desire restaurant having address equal to home and cuisine being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2593	find a restaurant with a 1 star rating that is farthest away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
2594	inform me street addresses of restaurants that are located near here .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2595	say all streets of the restaurants with ratings lower than NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
2596	find me some restaurants with a postal code of QUOTED_STRING_0 that serve QUOTED_STRING_1 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
2597	fetch me what is the description of the nearest restaurants with QUOTED_STRING_0 as postal code .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2598	which restaurant with rating at minimum NUMBER_0 and NUMBER_1 or lower rating has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
2599	get the restaurant with rating more than NUMBER_0 which is most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2600	count the restaurant with rating more than 1	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) => notify
2601	where is the restaurant having review count larger than NUMBER_0 with the largest number of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
2602	find restaurants with the QUOTED_STRING_0 description and that are located here	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
2603	show me a restaurant located here with QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2604	restaurants with a rating exceeding NUMBER_0 are found in which city ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
2605	look for a NUMBER_0 star rated restaurant with the zip code QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
2606	tell me the food type of the furthest QUOTED_STRING_0 restaurant .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2607	what is the most reviewed restaurant that is rated under NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
2608	i desire restaurant in GENERIC_ENTITY_tt:country_0 with rating equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
2609	what is the name of restaurant close to work	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work => notify
2610	get the farthest restaurant that serve QUOTED_STRING_0 from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2611	say the city of the nearest restaurants with postal code having QUOTED_STRING_0 to work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2612	show me the descriptions for restaurants located in LOCATION_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
2613	get the telephone of restaurant with review count less than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2614	which restaurants get address equivalent to work and NUMBER_0 or greater rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
2615	tell me the name of the restaurant that is farthest away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
2616	are restaurants serving QUOTED_STRING_0 cuisine here ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2617	get the restaurants having NUMBER_0 reviews farthest from home ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
2618	what 's the food type of the dining locales with greater rating than NUMBER_0 with the least evaluations	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
2619	please fetch restaurants rated NUMBER_0 star around me	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
2620	tell me what are the restaurant around home with QUOTED_STRING_0 as summary ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
2621	show me QUOTED_STRING_0 restaurants which have the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2622	list dining locations with number of evaluations equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
2623	i want to know the location of restaurants with NUMBER_0 reviews furthest from here .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2624	get reviews with rating bigger than NUMBER_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
2625	what is the state name of restaurant in GENERIC_ENTITY_tt:country_0	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
2626	what 's the QUOTED_STRING_0 restaurant that 's the most miles away from here ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2627	show me the reviews of the farthest restaurants with fewer review count than NUMBER_0 from home .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2628	how many reviews does the restaurant near here have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2629	get restaurants with QUOTED_STRING_0 in the description that have a rating of at least NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2630	show reviews published after DATE_0 , written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 , and with the lowest rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 ) ) [ 1 ] => notify
2631	what is the food type of restaurant with rating at least NUMBER_0	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
2632	tell me how close are restaurants that are in GENERIC_ENTITY_tt:us_state_0 with the largest number of reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) ) => notify
2633	what restaurants around me have the minimum score with a telephone equal to + PHONE_NUMBER_0 ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
2634	tell me the telephone of restaurants with location equivalent to work	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2635	what restaurants have QUOTED_STRING_0 cuisine and exactly a NUMBER_0 star rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2636	what is the most far away restaurants with zero reviews from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
2637	seek the restaurants around work which offer QUOTED_STRING_0 food which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2638	show me the review number restaurants of a rating lower than NUMBER_0 with the smallest number of ratings .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
2639	which restaurants with the highest rating serve QUOTED_STRING_0 cuisine and are located in the postal code QUOTED_STRING_1 ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2640	display restaurant reviews which have QUOTED_STRING_0 in the description and have a review score that is equal to NUMBER_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2641	look for eating places that have the phone number PHONE_NUMBER_0 that provide QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2642	what restaurants have a NUMBER_0 or higher rating and exactly NUMBER_1 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:aggregateRating.reviewCount:Number == NUMBER_1 => notify
2643	what is the restaurants having review count larger than NUMBER_0 closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2644	which restaurants containing QUOTED_STRING_0 as description and address equal to here gets the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
2645	get restaurants with the QUOTED_STRING_0 postal code and the QUOTED_STRING_1 food type .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
2646	name an QUOTED_STRING_0 restaurant that 's in this immediate vicinity .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2647	find a restaurant serving QUOTED_STRING_0 that is open on QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2648	fetch restaurants with review count not more than NUMBER_0 and postal code being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
2649	get the descriptions of review with rating at highest NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
2650	locate the restaurant that 's the greatest distance away from this point with a rating below NUMBER_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
2651	display restaurant descriptions that have location equal to work	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2652	get the street address of restaurant with location equal to here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2653	which is the restaurant around here that cooks QUOTED_STRING_0 cuisine with the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2654	what is the restaurant with a rating above NUMBER_0 and the number is PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2655	what are restaurant having state equal to GENERIC_ENTITY_tt:us_state_0 and postal code equivalent QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
2656	show me descriptions of restaurants that have a rating of under NUMBER_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
2657	what restaurant serves QUOTED_STRING_0 cuisine here has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2658	what is the country of restaurant having greater than 1 reviews	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
2659	restaurants with review count of under one i would like the zip code	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
2660	among reviews with descriptions that include QUOTED_STRING_0 , which were written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
2661	find phone numbers of restaurants in QUOTED_STRING_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2662	i would like to see a list of the restaurants rated below NUMBER_0 and that are QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2663	what is the current review count of the restaurant with review count less than NUMBER_0 farthest from work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2664	inform me the description of the dining business having zip code encompassing QUOTED_STRING_0 nearest to home	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2665	are there any restaurants near me that are rated less than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
2666	i want to find the closest restaurants that have a NUMBER_0 star rating	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
2667	what restaurant has QUOTED_STRING_0 noted in its details and can be reached at PHONE_NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2668	what is the street name of the restaurant with food type being QUOTED_STRING_0 that is most far away from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2669	fetch the most far away restaurants having review count more than NUMBER_0 from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2670	get the restaurant having location equal to work farthest from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
2671	what 's the description of the restaurant with more than NUMBER_0 stars that is closest to here ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2672	for the restaurants that have a number of reviews that is the minimum i want to see the reviews .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
2673	how far away are restaurants that have under NUMBER_0 reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
2674	what 's the restaurant situation here ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2675	i want dining locations having zip code being QUOTED_STRING_0 which serves QUOTED_STRING_1 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
2676	what is the number of restaurants that have descriptions that have QUOTED_STRING_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2677	i want to see restaurants that have an address of home that have the least number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] => notify
2678	i need the review with NUMBER_0 or higher rating , and can you please elaborate on it for me ?	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
2679	show me the restaurant with the least reviews and a rating that 's below NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
2680	from my work , how close are the restaurants with under NUMBER_0 review and under with the least amount of reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
2681	what is the postal code of the restaurant here with the smallest amount of reviews	now => [ param:address.postalCode:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
2682	give me a restaurant that serves QUOTED_STRING_0 and is in GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2683	grab the descriptions of restaurants with higher review count than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2684	find reviews with a rating of NUMBER_0 or higher .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
2685	show me restaurants by home with QUOTED_STRING_0 in the summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
2686	show me the telephone of restaurants with location equal to work	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2687	what 's the restaurant near here with only NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
2688	display the price range of restaurant rated NUMBER_0 stars .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
2689	give me a restaurant near home that has the least reviews and serves QUOTED_STRING_0 .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2690	get restaurants in this area with telephone equal to + PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2691	find the restaurants with address equal to home with the least reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] => notify
2692	get restaurants with food type being QUOTED_STRING_0 and review count not greater than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2693	find GENERIC_ENTITY_org.schema.Restaurant:Person_0 's review with QUOTED_STRING_0 in the summary	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
2694	bring up review that was written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and with description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
2695	get me restaurant having QUOTED_STRING_0 as description and rating at least NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2696	how far away are restaurants rated NUMBER_0 star from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
2697	which restaurant having review count not higher than NUMBER_0 and QUOTED_STRING_0 as summary gets the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2698	name restaurants that serve QUOTED_STRING_0 cuisine and that have QUOTED_STRING_1 as a summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2699	what is the distance from work to restaurants with more reviews than NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
2700	what is the current price range of restaurant in GENERIC_ENTITY_tt:country_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
2701	i require restaurants with NUMBER_0 or lower rating and address equal to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home => notify
2702	which are the reviews having author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 of restaurants with rating smaller than NUMBER_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2703	how far away are the nearest restaurant with NUMBER_0 reviews from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2704	name the restaurants with a description equaling QUOTED_STRING_0 and an address matching work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
2705	gather the descriptions of restaurants with smaller review count than NUMBER_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2706	i want to see the reviews of restaurants with ratings lower to than NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2707	show me which restaurants are rated NUMBER_0 or greater with the largest number of reviews and are in the country equal to GENERIC_ENTITY_tt:country_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
2708	what restaurants with NUMBER_0 reviews is closest to work ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
2709	search restaurant having greater review count than NUMBER_0 and address equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
2710	get review with NUMBER_0 or bigger rating .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
2711	show me the city of the restaurant that has a review count of under 1 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
2712	tell me the number of reviews of restaurants with no reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
2713	name the restaurants with a minimum NUMBER_0 rating and a work location .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
2714	what street are restaurants with the greatest rating on ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
2715	i 'd like to know the street address of restaurants that have QUOTED_STRING_0 as their id	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
2716	find QUOTED_STRING_0 restaurant that is near home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2717	what is the restaurant that offers QUOTED_STRING_0 cuisine and has the best rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2718	list restaurants with QUOTED_STRING_0 in the summary and tell me their ratings	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2719	show me the reviews of the nearest restaurants which have less than NUMBER_0 reviews .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2720	where is the farthest restaurant near me .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2721	display a photo of a close restaurant	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2722	get evaluations of dining locations in GENERIC_ENTITY_tt:us_state_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2723	text me the restaurant with telephone equal to PHONE_NUMBER_0 with the smallest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
2724	fetch me the restaurants around here with served cuisine being QUOTED_STRING_0 which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2725	find reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with a rating of NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
2726	i would like to see the restaurants offering QUOTED_STRING_0 food with QUOTED_STRING_1 as their descriptions .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2727	show the city of restaurants with more than a single review that 's farthest from here .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
2728	i would like to know which restaurants that offer QUOTED_STRING_0 cuisine are nearby .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2729	grab review having author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 for restaurants with NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2730	search for a restaurant with a GENERIC_ENTITY_tt:country_0 location and a rating of NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
2731	get restaurant in this area having telephone equal to + PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2732	write down restaurants with QUOTED_STRING_0 that has a cuisine in a rating maximum NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2733	restaurant with review count higher than NUMBER_0 that is equal to the country of GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
2734	which are the restaurants serving QUOTED_STRING_0 cuisine and less than NUMBER_0 with the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2735	how far away are the most far away restaurants having description being QUOTED_STRING_0 from here from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
2736	what is the distance to a restaurant that is QUOTED_STRING_0 and farthest from work to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
2737	what are restaurant having served food type being QUOTED_STRING_0 and postal code equal to QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2738	find reviews published prior to DATE_0 that were authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
2739	for the restaurant that has below NUMBER_0 reviews and the smallest number of reviews let me know what type of food they serve .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
2740	i want restaurants with more than NUMBER_0 reviews that are the farthest away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2741	seek me the image of restaurant having more than NUMBER_0 reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2742	what are the restaurants with a work location , a QUOTED_STRING_0 description , and the best rating possible ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
2743	tell me what the NUMBER_0 star restaurant nation is	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
2744	which restaurant in here that offers QUOTED_STRING_0 gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2745	get restaurant having cuisine being QUOTED_STRING_0 and NUMBER_0 or more review count .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2746	which are the restaurant having address equivalent to home which offer QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2747	list for me the restaurants near home that have a summary of QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
2748	show nearest to my home the restaurants with more than NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2749	find restaurants with both QUOTED_STRING_0 and QUOTED_STRING_1 food types .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
2750	i want to find restaurants with a QUOTED_STRING_0 menu and a rating equal to or more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2751	a restaurant that 's gotten no reviews can be found in which state ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
2752	tell me a restaurant with a lesser rating of 1 that is the shortest distance to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] => notify
2753	find restaurant with cuisine being QUOTED_STRING_0 and QUOTED_STRING_1 as summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2754	what number of restaurants are there that have received 1 review ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
2755	present the restaurant around here having served food type equal to QUOTED_STRING_0 which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2756	what is the street of the restaurants with smaller review count than NUMBER_0 which is nearest to work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2757	find restaurants around home having QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
2758	show me restaurants in GENERIC_ENTITY_tt:country_0 with served cuisine being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2759	what is the date published of the reviews which has the largest rating	now => [ param:datePublished:Date ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
2760	list restaurants with the postal code QUOTED_STRING_0 and the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
2761	find restaurants near here with the fewest number of reviews , and give me their countries and telephone numbers .	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
2762	show me the country of restaurants farthest from my home that have a review count fewer than 1 .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
2763	show me which QUOTED_STRING_0 restaurant is closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2764	show me the closest NUMBER_0 star rated restaurant to me	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
2765	show restaurants nearby my job that have QUOTED_STRING_0 in their description .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2766	show me the city with a restaurant that rates below NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
2767	tell me how close the nearest restaurant with PHONE_NUMBER_0 as the number is from my home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2768	what is the address of a restaurant that 's gotten NUMBER_0 reviews ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2769	seek the reviews of the restaurant with rating bigger than NUMBER_0 with the largest count of reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
2770	what restaurants are around here that offer QUOTED_STRING_0 cuisine with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2771	calculate distance to furthest restaurant with phone number equal to PHONE_NUMBER_0 when traveling from home from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2772	get the cuisine of the restaurant with QUOTED_STRING_0 as food type with the largest number of reviews .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
2773	what restaurants have a smaller review count than NUMBER_0 and food type is QUOTED_STRING_0 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2774	tell me the street address of the restaurant that has NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2775	tell me the country where there would be restaurants with a minimum of NUMBER_0 reviews .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2776	enumerate restaurants which sells QUOTED_STRING_0 and having country equal to GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2777	what is the current distance from home of restaurants with telephone equal to PHONE_NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
2778	how many reviews in the restaurant with more review count than 1 that is furthust away from home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
2779	find the restaurant with less than NUMBER_0 reviews and QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2780	name the restaurant with QUOTED_STRING_0 cuisine that is located right here , near me .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2781	retrieve dining locations having QUOTED_STRING_0 as description and rating equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2782	what restaurants serve QUOTED_STRING_0 food next to here ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2783	tell me the distance from the restaurant with no reviews to home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
2784	message me what is the location of restaurants having at least NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2785	what restaurant get country equivalent to GENERIC_ENTITY_tt:country_0 and review count higher than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
2786	what are the restaurants with a description of QUOTED_STRING_0 and greater than NUMBER_0 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2787	locate me a restaurant in GENERIC_ENTITY_tt:us_state_0 that offer cuisine that contains QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2788	how many reviews are in the restaurant with a number of PHONE_NUMBER_0 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
2789	how many total reviews are there in the restaurants having fewer than NUMBER_0 reviews with the highest number of reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
2790	what is the price range of the restaurants with higher rating than NUMBER_0 with the highest number of reviews	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
2791	how near is the restaurant with rating more than NUMBER_0 with the largest count of reviews from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
2792	seek for me the farthest restaurant having no reviews from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
2793	show me restaurants with fewer than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2794	how close is the restaurant with no reviews to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
2795	can you find a restaurant that serves QUOTED_STRING_0 food that has exactly a NUMBER_0 star rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2796	what are the dining locations with cuisine being QUOTED_STRING_0 and number of evaluations higher than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2797	where is restaurant serving QUOTED_STRING_0 located	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2798	show how far from home restaurants are with QUOTED_STRING_0 in the cuisine .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
2799	i 'd like the telephone number of QUOTED_STRING_0 located restaurants .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2800	tell me the furthest restaurant with a review number lower than NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2801	which restaurants have a rating of no less than NUMBER_0 and are located in the zip code QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
2802	find a restaurant with NUMBER_0 or more reviews that also has a rating or NUMBER_1 or less .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number <= NUMBER_1 => notify
2803	what QUOTED_STRING_0 restaurant can you find that has QUOTED_STRING_1 on the menu ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2804	tell me the restaurant that has the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
2805	what is the rating of the restaurant that 's nearest to me .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2806	fetch review having summary being QUOTED_STRING_0 for restaurant having food type containing QUOTED_STRING_1	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_1 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2807	i want restaurants farthest from my work that have at least NUMBER_0 reviews	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2808	grab restaurant having food type being QUOTED_STRING_0 and NUMBER_0 or more review count .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2809	which restaurants have smaller rating than NUMBER_0 and are inside GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
2810	i want to know the name of restaurant having a review count of under NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
2811	from home , how far away are NUMBER_0 star rated restaurants	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
2812	who is the author that has written the most top rated reviews	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
2813	find review put in by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having earlier date published than DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
2814	look for restaurant containing QUOTED_STRING_0 in the description and the food type QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
2815	what are the current restaurants in GENERIC_ENTITY_tt:us_state_0 around here	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
2816	what QUOTED_STRING_0 restaurant has a rating of NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2817	get restaurant with served cuisine equal to QUOTED_STRING_0 and NUMBER_0 or better rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2818	get me the country of restaurants with rating more than NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
2819	can you find restaurants in this area that have NUMBER_0 reviews or more posted ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:current_location => notify
2820	fetch me the image of the nearest restaurant with description being QUOTED_STRING_0	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2821	grab the state of the farthest restaurants from here	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2822	give me a restaurants with QUOTED_STRING_0 in the summary and a max review count that is located near QUOTED_STRING_1	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2823	what restaurants rated NUMBER_0 or less have an address equaling work ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
2824	for the restaurant that has a review count of under 1 tell me its city .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
2825	i want to know the rating of the farthest restaurant with under NUMBER_0 reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2826	get restaurant which sell QUOTED_STRING_0 cuisine and with lower review count than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2827	search the restaurants with summary being QUOTED_STRING_0 and cuisine equivalent to QUOTED_STRING_1 which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
2828	what are the restaurant around me that sells QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2829	what is the reviews having earlier date published than DATE_0 which has the highest rating ?	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) ) [ 1 ] => notify
2830	what is the restaurant rated 1 star which is furthest from work ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
2831	what QUOTED_STRING_0 restaurants are there in zip code QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2832	show me the closest restaurant to my location .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
2833	looking for a restaurant image around here	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2834	what city are restaurants near me in	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2835	what 's the distance to the closest restaurants with QUOTED_STRING_0 in the description	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
2836	send me a NUMBER_0 or lower-rated restaurant that offers QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2837	list of restaurants similar to GENERIC_ENTITY_tt:us_state_0 offering QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2838	taking restaurant reviews in GENERIC_ENTITY_tt:us_state_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2839	i want to see NUMBER_0 star reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
2840	where would a restaurant with a QUOTED_STRING_0 menu be located ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2841	retrieve restaurants with QUOTED_STRING_0 at home as a definition with the largest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
2842	what restaurant in the vicinity of home has been reviewed NUMBER_0 times or fewer ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:home => notify
2843	how many reviews do the restaurants have with a review count no more than NUMBER_0 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2844	local restaurants with telephone number + PHONE_NUMBER_0 serving QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2845	tell me how far away the restaurants found in GENERIC_ENTITY_tt:country_0 are that 's nearest to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
2846	get me what is the city of restaurant having rating equal to NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
2847	get me what is the review count of restaurants with review count not more than NUMBER_0 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2848	find me restaurants rated NUMBER_0 stars that have a postal code equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
2849	what is the number of reviews for the restaurant that has the phone number equal to PHONE_NUMBER_0 that is nearest to here ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
2850	closest to my location , which restaurants have reviews of more than NUMBER_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
2851	which restaurant have more review count than NUMBER_0 and rating not higher than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
2852	get review having summary being QUOTED_STRING_0 for restaurant having cuisine containing QUOTED_STRING_1	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_1 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2853	tell me the zip code of restaurants that have higher than NUMBER_0 review count .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2854	what is the postal code of restaurant with NUMBER_0 reviews	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2855	what are restaurant having NUMBER_0 reviews and higher review count than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
2856	say the summary of reviews having earlier date of publication than DATE_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
2857	i 'd like to know the zip code of restaurants that have a 1 star rating	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) => notify
2858	get the restaurant with rating lower than NUMBER_0 with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
2859	grab the telephone of restaurants that is QUOTED_STRING_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2860	show me a restaurant near me with the smallest rating and QUOTED_STRING_0 cuisine .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2861	how much is a restaurant that has less than NUMBER_0 reviews ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2862	what is both the telephone and state of the restaurant having bigger rating than NUMBER_0 that is closest to here	now => [ param:address.addressRegion:Entity(tt:us_state) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
2863	which is the restaurants with smaller rating than NUMBER_0 which is farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
2864	show me the reviews of restaurants which have a score equal to NUMBER_0 and that have QUOTED_STRING_0 in its description .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2865	please tell me what the street addresses are for restaurants found in LOCATION_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
2866	please fetch review having less rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
2867	find QUOTED_STRING_0 restaurants near work	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2868	i 'd like to know the restaurants with at least NUMBER_0 reviews and a score of NUMBER_1 or less .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number <= NUMBER_1 => notify
2869	find the review count of restaurant with telephone equal to PHONE_NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
2870	reviews equaling a NUMBER_0 rating are published on what date ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
2871	let me know the restaurant having zip code being QUOTED_STRING_0 and description being QUOTED_STRING_1 which has the maximum number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
2872	what restaurant offer QUOTED_STRING_0 food and have summary equivalent to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2873	what are the dining locations with less than than NUMBER_0 evaluations and cuisine being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2874	i would like to get reviews that have ratings above NUMBER_0 in restaurants that have no more than NUMBER_1 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_1 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2875	what price range does the highest rated restaurant have ?	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
2876	present for me the reviews of restaurant having smaller review count than NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2877	how far is the furthest restaurant from my location at this time ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
2878	let me see which restaurant has a less than NUMBER_0 rating and the lowest review amount .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
2879	which are GENERIC_ENTITY_tt:us_state_0 restaurants around the building	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:home => notify
2880	find me a QUOTED_STRING_0 restaurant with NUMBER_0 or more reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2881	text me what is the zip code of restaurant with at least 1 reviews .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
2882	which dining locations get has less number of evaluations than NUMBER_0 and serves QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2883	for the review that is NUMBER_0 or below tell me the creator .	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
2884	tell me the nearest restaurant with NUMBER_0 reviews near my home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2885	i 'm looking for restaurants with QUOTED_STRING_0 cuisine that are located here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2886	which restaurant has a review count of smaller than NUMBER_0 with the smallest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
2887	get the street address of restaurant having no reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
2888	locate the restaurants that are closest to work and have QUOTED_STRING_0 in their descriptions .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2889	what 's the restaurant country with more than 1 reviews ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
2890	where can i find nearby QUOTED_STRING_0 restaurants ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2891	i want to see an image of the closet restaurant that has a description of QUOTED_STRING_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2892	what is the location of restaurants with bigger than NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2893	message me what is the date published of review having less rating than NUMBER_0 .	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
2894	get the rating of restaurant having zero reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
2895	what is the price range of dining in GENERIC_ENTITY_tt:country_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
2896	which are the restaurant that sells QUOTED_STRING_0 cuisine and having state equal to GENERIC_ENTITY_tt:us_state_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2897	in which location would one find the restaurant that is the greatest distance from home and has zero reviews ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) => notify
2898	get me restaurants with QUOTED_STRING_0 in the summary and the country equal to GENERIC_ENTITY_tt:country_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2899	what amount of restaurants have a minimum of NUMBER_0 reviews ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2900	what restaurants have a location equaling home and QUOTED_STRING_0 cuisine on the menu ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2901	get me the restaurants having postal code being QUOTED_STRING_0 and food type equal to QUOTED_STRING_1 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
2902	list a restaurant with phone equivalent to + PHONE_NUMBER_0 and QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2903	text me restaurant with telephone equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2904	find a restaurant near me that has a NUMBER_0 star rating with the greatest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
2905	what are the restaurant around me with fewer rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
2906	which is the restaurant here having food type being QUOTED_STRING_0 which has the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2907	what are the restaurants with a description of QUOTED_STRING_0 that have a QUOTED_STRING_1 menu ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) => notify
2908	fetch reviews having summary being QUOTED_STRING_0 and rating equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
2909	give me the restaurants that have a cuisine of QUOTED_STRING_0 and a description that is equal to QUOTED_STRING_1 and that have the minimum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2910	can you find me a place to eat with a NUMBER_0 or higher as far as ratings go and a summary that includes the title QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2911	show what is the city of the restaurant with QUOTED_STRING_0 as postal code which is nearest to home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2912	fetch restaurant in this area having telephone equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2913	what are QUOTED_STRING_0 restaurants here containing review count equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2914	which are dining locations with NUMBER_0 evaluations and food type equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2915	bring up review made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with summary being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
2916	for the restaurants closest to here i want to know the cuisine .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2917	find a review that GENERIC_ENTITY_org.schema.Restaurant:Person_0 wrote with the summary of QUOTED_STRING_0 that has the lowest rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2918	fetch the restaurants with greater rating than 1 with the least reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] => notify
2919	find restaurants with the descriptions including QUOTED_STRING_0 that are closest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
2920	how many reviews more than one , does the farthest restaurant from home have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
2921	what 's the food type of the restaurants with reviews of fewest reviews than NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
2922	what restaurant are in this area and get phone number equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2923	enumerate QUOTED_STRING_0 restaurants around the house as a rundown	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
2924	i 'd like to see restaurants nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
2925	fetch the country of the restaurant that is farthest from work	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2926	on the reviews that have NUMBER_0 stars , when were they made ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) => notify
2927	get restaurants for me that offer the cuisine of QUOTED_STRING_0 and whose description is equal to QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2928	what 's the location and the image of the QUOTED_STRING_0 restaurants that are the greatest distance away ?	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2929	how many current reviews in the restaurant having postal code containing QUOTED_STRING_0 which is most far away from here	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2930	which restaurants from my current location has the farthest distance ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
2931	for restaurant with NUMBER_0 reviews , what is the zip code	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
2932	which restaurants with the phone number PHONE_NUMBER_0 are the greatest distance away ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
2933	what are the restaurant having country equivalent to GENERIC_ENTITY_tt:country_0 and QUOTED_STRING_0 as summary ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:description:String =~ QUOTED_STRING_0 => notify
2934	what restaurant get rating at minimum NUMBER_0 and summary equal to QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
2935	how far away are the restaurants having smaller than NUMBER_0 reviews which is farthest from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2936	fetch me the telephone of the restaurant having lower review count than 1 that is most far away from home .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
2937	which reviews get date published before DATE_0 and is created by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
2938	how many combined reviews does restaurants in QUOTED_STRING_0 have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2939	tell me the restaurants in GENERIC_ENTITY_tt:country_0 with the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
2940	fetch the QUOTED_STRING_0 restaurants which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2941	find reviews having earlier date published than DATE_0 and say summary .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
2942	alert me the restaurant with the highest level of counts	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
2943	which restaurants around me having NUMBER_0 or more review count has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
2944	what are dining locations around home that serves QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2945	where is the restaurants with country equal to GENERIC_ENTITY_tt:country_0 that is furthest from home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) => notify
2946	get me the image of restaurant in GENERIC_ENTITY_tt:country_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
2947	get the number of reviews of restaurant with location equal to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
2948	get what is the country of restaurants with lower rating than NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
2949	i would like to see the restaurants that in the country equal to GENERIC_ENTITY_tt:country_0 and that offer QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2950	what are the reviews posted by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that are rated NUMBER_0 tops .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
2951	tell me the price range of restaurant having smaller review count than NUMBER_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
2952	fetch the name of restaurant with review count less than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
2953	tell me what the restaurant that has NUMBER_0 reviews is called .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
2954	find reviews that have QUOTED_STRING_0 in the description and show me the rating	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
2955	i want to know the location of restaurants that are NUMBER_0 star rated .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
2956	message me the reviews of restaurants with QUOTED_STRING_0 in the cuisine	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2957	find the nearest restaurant to work from my house that only have NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2958	which restaurants have a summary that is titled QUOTED_STRING_0 and serve QUOTED_STRING_1 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
2959	what restaurants with a review count no more than NUMBER_0 and which location is the highest	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
2960	what is the number of restaurantss with a zip code of QUOTED_STRING_0	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
2961	enumerate for me restaurants that have LOCATION_0 as a city	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
2962	for restaurants with a minimum of NUMBER_0 reviews , what rating would apply ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
2963	how are the restaurants with a rating lower than NUMBER_0 stars away from home described ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
2964	i would like to know the distance form work to the restaurants that have a higher review count than NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
2965	what is the number of ratings of the restaurants that have a higher rating that one ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
2966	i would like to see the restaurants that are not rated over NUMBER_0 and whose address is equal to work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
2967	what is both the food type and price range of the restaurants with location equivalent to home with the tiniest number of reviews ?	now => [ param:priceRange:String , param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
2968	show locations nearest to me of restaurants with QUOTED_STRING_0 in the description .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2969	reveal what 's the street of restaurant with phone number equal to PHONE_NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
2970	which are reviews in restaurants with greater rating than NUMBER_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
2971	how close is the farthest restaurant tthat has under a NUMBER_0 rating from home from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
2972	give me the distance from here of restaurant with review count bigger than NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
2973	how far away is the closest restaurants in GENERIC_ENTITY_tt:us_state_0 to work from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
2974	tell me what the price ranges for restaurants that sell QUOTED_STRING_0 food	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
2975	what is the distance to here from the restaurant around here that has the tiniest amount of reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
2976	i want to see the phone number of restaurants that have QUOTED_STRING_0 as the postal code and that are the longest distance from work .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2977	show me a restaurant here that has QUOTED_STRING_0 cuisine and the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2978	please list restaurants having location equal to here and lower rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
2979	find me restaurants in GENERIC_ENTITY_tt:us_state_0 around home	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:home => notify
2980	find restaurants that are rated NUMBER_0 or higher and are located at work and have the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
2981	which restaurant with a PHONE_NUMBER_0 number can be found in the GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
2982	seek the restaurant with lower review count than NUMBER_0 that serves QUOTED_STRING_0 cuisine with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2983	name the restaurants with a summary equal to QUOTED_STRING_0 , the highest ratings , and a QUOTED_STRING_1 menu .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
2984	how many reviews in the restaurant with the largest rating ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
2985	grab the most far away restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] => notify
2986	tell me the street address information for a restaurant that has n't received any reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
2987	what is the cuisine and description of the restaurant with cuisine equivalent to QUOTED_STRING_0 closest to work ?	now => [ param:description:String , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2988	show dining places with rating equal to NUMBER_0 and address equal to work	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work => notify
2989	what are the restaurants with the QUOTED_STRING_0 postal code and the workplace equivalent with the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
2990	what places to eat with the maximum number of reviews are in this area and serve QUOTED_STRING_0 cuisine ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2991	how many reviews does the restaurant have located here	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
2992	which restaurant with rating at minimum NUMBER_0 and description equal to QUOTED_STRING_0 gets the maximum number of evaluations ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
2993	which are the restaurant having no less than NUMBER_0 reviews and NUMBER_1 or lower rating .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number <= NUMBER_1 => notify
2994	show me what is the location of restaurant with location equal to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
2995	how close are the restaurants with greater rating than NUMBER_0 with the least reviews from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
2996	get me the restaurant around me with postal code equal to QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
2997	show me a restaurant with a lower rating than NUMBER_0 that sells QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
2998	say what is the description of the furthest restaurants having description being QUOTED_STRING_0 .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
2999	find for me what is the food type of restaurants having NUMBER_0 reviews .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3000	say what is the country of the furthest restaurant having lower review count than 1 from home	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
3001	tell me which restaurant whose address is equal to home received the minimum number of reviews and has a rating of no more than NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
3002	the restaurants that are nearest to work have been given how many total reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3003	how near is the furthest restaurants with review count equal to NUMBER_0 from home to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3004	how many total reviews are there in the restaurant having greater rating than 1 nearest to here ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
3005	if a restaurant has QUOTED_STRING_0 in the zip code what state is it in ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
3006	what are the worst-ranked reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that were issued past DATE_0 ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 ) ) [ 1 ] => notify
3007	show me what is the zip code of restaurant with location equal to here	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3008	which restaurants here with QUOTED_STRING_0 as description has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
3009	retrieve reviews with rating more than NUMBER_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3010	how far are restaurants rated with NUMBER_0 star from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
3011	i 'm looking for the name of a restaurant with NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
3012	tell me the restaurants rated NUMBER_0 or higher that are furthest from my home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
3013	show me the farthest away restaurants from work that have QUOTED_STRING_0 in their descriptions	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3014	show me all restaurants that have a review that is higher than NUMBER_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3015	get me the reviews of the restaurant with review count less than 1 closest to work	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
3016	where is a restaurant located that doesn't have a rating over NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
3017	find the restaurant with the fewest reviews , a description equaling QUOTED_STRING_0 and a phone number of PHONE_NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
3018	get the zip code of restaurants with review count bigger than NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3019	find restaurants in GENERIC_ENTITY_tt:us_state_0 and their food type and description .	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
3020	grab what is the description of restaurants near work	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
3021	i want to see restaurants with the summary containing QUOTED_STRING_0 that have more than a NUMBER_0 rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3022	show me the restaurants image that have the biggest review count	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3023	show me the food type of restaurant with QUOTED_STRING_0 as postal code .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
3024	let me know the restaurant around me with zip code equal to QUOTED_STRING_0 which having the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
3025	tell me the restaurants with QUOTED_STRING_0 as their zip code .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
3026	show me restaurants with a greater review count than 1 with the smallest number of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) [ 1 ] ) => notify
3027	i 'd like to see a picture of a restaurant located in GENERIC_ENTITY_tt:country_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
3028	how near are restaurants with postal code containing QUOTED_STRING_0 to here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
3029	get both the description and phone number of the nearest dining places with more review number than 1 to here	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
3030	which QUOTED_STRING_0 restaurants have received under NUMBER_0 reviews in total ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3031	display for me the distance from work to restaurants that have a count of reviews that is higher than NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
3032	find restaurants with a description matching QUOTED_STRING_0 that are rated under NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3033	tell me the description of restaurants with a higher rating than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
3034	name all the restaurants that have an address equal to home that are also located in GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:home => notify
3035	what restaurants get QUOTED_STRING_0 in the postal code and rating at smallest NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
3036	gather the city of restaurant having greater rating than NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
3037	where are the restaurants in GENERIC_ENTITY_tt:us_state_0 near my work ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) => notify
3038	which is the restaurant with city containing LOCATION_0 with the smallest amount of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) [ 1 ] => notify
3039	enumerate restaurants near here having review count larger than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
3040	i 'd like the telephone number of a restaurant with a NUMBER_0 rating .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
3041	which restaurants are QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3042	what is the street of the restaurant with a review count lower than NUMBER_0 that 's near work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3043	where is the restaurant with NUMBER_0 star which is most far away from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
3044	what is the current rating and telephone of the restaurant in GENERIC_ENTITY_tt:us_state_0 nearest to here	now => [ param:aggregateRating.ratingValue:Number , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
3045	how many total restaurant having at most 1 reviews are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
3046	show me restaurants in GENERIC_ENTITY_tt:us_state_0 with the largest number of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) => notify
3047	what is the restaurant here with larger rating than NUMBER_0 with the smallest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
3048	i would like to know the review for the restaurants with over NUMBER_0 reviews and whose descriptions are QUOTED_STRING_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3049	look for restaurants containing QUOTED_STRING_0 in the description with QUOTED_STRING_1 as the cuisine that have the least reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3050	what address applies to restaurants with locations matching the work location ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
3051	what is the reviews of the farthest restaurants with bigger rating than 1 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
3052	where is the closest QUOTED_STRING_0 restaurant closed to my work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
3053	get restaurant having more review count than NUMBER_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3054	get review having later date published than DATE_0 and description being QUOTED_STRING_0 of dining locations around work	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3055	how far from home our restaurants that serve QUOTED_STRING_0 cuisine ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
3056	what are the reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with a publication date prior to DATE_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
3057	search for a restaurant near home with NUMBER_0 reviews or less .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:home => notify
3058	when were reviews published that have NUMBER_0 ratings	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
3059	tell me the restaurant name with telephone number + PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3060	what is the distance from home of restaurants with telephone equivalent to PHONE_NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
3061	can you tell me the count of reviews for restaurants that have under NUMBER_0 reviews and that have the most reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
3062	message me the city of the restaurant having review count greater than 1 that is most far away from here .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
3063	what is the price range of NUMBER_0 star rated restaurant ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
3064	show me the name of the dining business which is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
3065	what 's the date published of the evaluations which having the highest rating	now => [ param:datePublished:Date ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
3066	tell me the restaurants having QUOTED_STRING_0 in the postal code that sells QUOTED_STRING_1 with the largest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3067	find the restaurants near work that are rated NUMBER_0 or above and have a max review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
3068	find the street address of restaurant having zip code being QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
3069	which is the restaurants containing QUOTED_STRING_0 as description and QUOTED_STRING_1 in the food type which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3070	find me the food type of the restaurant with review count fewer than NUMBER_0 with the smallest count of reviews	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
3071	i am looking for a restaurant that has NUMBER_0 reviews and is most far away	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3072	what are reviews having author equivalent to GENERIC_ENTITY_org.schema.Restaurant:Person_0 in restaurant having review count more than NUMBER_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3073	grab me the descriptions of restaurants with id equal to QUOTED_STRING_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
3074	please tell me the restaurant location for those places which have no reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
3075	tell me the location of the restaurant that has a NUMBER_0 star rating	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
3076	what is the furthest away restaurants with no reviews from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
3077	seek for me what is the food type of the restaurants with larger rating than NUMBER_0 closest to here .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3078	where is the closest restaurants having phone number equal to PHONE_NUMBER_0 to home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
3079	which is the restaurants having QUOTED_STRING_0 as summary and cuisine containing QUOTED_STRING_1 with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3080	i would like the name of the reviews that have the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
3081	what are the reviews of restaurants that have NUMBER_0 reviews ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3082	which restaurant that makes QUOTED_STRING_0 food has the lowest overall rating and is in my area ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3083	find restaurants in the QUOTED_STRING_0 postal code which have a QUOTED_STRING_1 summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
3084	what are the QUOTED_STRING_0 food restaurants located in the country of GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3085	which are the restaurants with rating equivalent to NUMBER_0 and address equal to work	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work => notify
3086	show photos of restaurants with under NUMBER_0 reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3087	tell me which review written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 was published later than DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
3088	which reviews are precisely NUMBER_0 stars that GENERIC_ENTITY_org.schema.Restaurant:Person_0 posted ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
3089	how far are the nearest restaurants with greater than NUMBER_0 reviews to home to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3090	what is the rating of the nearest restaurants with QUOTED_STRING_0 in the description ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3091	look for restaurants with a description equaling QUOTED_STRING_0 that have been reviewed more than NUMBER_0 times .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3092	where is the dining locales in GENERIC_ENTITY_tt:country_0 with the most evaluations	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) => notify
3093	show me restaurants in GENERIC_ENTITY_tt:us_state_0 and their city .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
3094	how are restaurants with a review count above NUMBER_0 described ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3095	show me what is the rating of restaurants having review count equal to NUMBER_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3096	get review uploaded by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having rating at most NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
3097	show me what is the distance from here to restaurants having telephone equal to PHONE_NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
3098	i 'd like to know the contact number of restaurants that have the zip code QUOTED_STRING_0 that are farthest from work .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3099	enumerate restaurant having state equal to GENERIC_ENTITY_tt:us_state_0 and QUOTED_STRING_0 that is in cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3100	i like to know the restaurant that has QUOTED_STRING_0 in the zip code that is the largest distance from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3101	i 'd like to get the description and telephone number of nearby restaurants with more than 1 review close to here .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
3102	find restaurants in this area with the most reviews that serve QUOTED_STRING_0 food .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3103	grab me the country of the restaurants with lower rating than NUMBER_0 most far away from here	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3104	how far away are the restaurants with more than a single review from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) ) => notify
3105	bring forth restaurants having description being QUOTED_STRING_0 and the same address to work	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
3106	show me restaurants nearest to me that have a rating of NUMBER_0 or higher .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3107	what is the current reviews of the restaurants with review count less than NUMBER_0 with the smallest number of reviews ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
3108	what restaurants have NUMBER_0 or less reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
3109	what are the restaurants with the least amount of reviews near home that serve QUOTED_STRING_0 food .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3110	please identify reviews with a summary posted before DATE_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
3111	tell me the restaurant having country equal to GENERIC_ENTITY_tt:country_0 and QUOTED_STRING_0 as summary ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:description:String =~ QUOTED_STRING_0 => notify
3112	find out the location of the restaurant with phone number PHONE_NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
3113	i want to know what city the restaurant that serve QUOTED_STRING_0 is in	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3114	grab for me the rating of the QUOTED_STRING_0 restaurant with the minimum rating	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
3115	find restaurants that serves QUOTED_STRING_0 , with QUOTED_STRING_1 as summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3116	which restaurants serve QUOTED_STRING_0 cuisine and are in GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3117	when were the NUMBER_0 ratings reveiws published	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
3118	find reviews that have QUOTED_STRING_0 in the descriptions .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
3119	gather me the image of restaurant in GENERIC_ENTITY_tt:country_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
3120	how many reviews in the restaurant rated NUMBER_0 star with the highest number of reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) [ 1 ] ) => notify
3121	tell me what is the telephone number of the restaurant having review count higher than NUMBER_0 farthest from home	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3122	present the restaurant around here having served cuisine equal to QUOTED_STRING_0 which has the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3123	in what city would a restaurant with a below 1 review count be ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
3124	find a restaurant with a phone number exactly PHONE_NUMBER_0 that has the smallest amount of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
3125	i 'm looking for restaurants that serve QUOTED_STRING_0 and have a NUMBER_0 or larger rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3126	find reviews with QUOTED_STRING_0 in the summary and also serve QUOTED_STRING_1 style food .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_1 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3127	tell me the location where the restaurant with no reviews is	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
3128	retrieve restaurants with served food type being QUOTED_STRING_0 and country equal to GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3129	how many reviews are there in a restaurant that have at least NUMBER_0 reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3130	how far are restaurants with zip code QUOTED_STRING_0 from me .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
3131	how far are the restaurant with rating lower than NUMBER_0 that is most far away in distiction to work from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3132	i would like to see the restaurants that have a rating of under NUMBER_0 and an address equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home => notify
3133	i need a restaurant with QUOTED_STRING_0 cuisine for QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3134	show QUOTED_STRING_0 restaurants closes to work and their location .	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3135	which QUOTED_STRING_0 is farthest from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3136	which restaurants countain the word QUOTED_STRING_0 in the summary , have a cuisine of QUOTED_STRING_1 , and have the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3137	get the city of the restaurant which has the smallest review count	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3138	find the restaurant farthest from home with a rating less than NUMBER_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3139	locate for me the restaurants that has NUMBER_0 reviews or more and that have the highest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
3140	find me the street of a restaurant with fewer than NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3141	take a look at NUMBER_0 or more rating reviews	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3142	text me the cuisine of the restaurant having QUOTED_STRING_0 in the description that is farthest from home	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3143	how many miles are restaurants with a contact number of PHONE_NUMBER_0 from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
3144	return reviews with QUOTED_STRING_0 in the description and a rating that is more than NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3145	what is the number of reviews in the restaurant that is in GENERIC_ENTITY_tt:us_state_0 that is nearest to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
3146	for restaurants that serve QUOTED_STRING_0 what is the telephone number ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3147	fetch me what is the postal code of the most far away restaurant from home .	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3148	show me restaurants with no reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
3149	what restaurant in the GENERIC_ENTITY_tt:country_0 has a PHONE_NUMBER_0 phone number ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3150	fetch me the name and street of the restaurant near here with the fewest number of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
3151	collect the street address of restaurants with location equal to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
3152	search for all restaurants that have more than NUMBER_0 reviews near me .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
3153	new restaurant over NUMBER_0 , serving QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3154	tell me the QUOTED_STRING_0 restaurant that has NUMBER_0 reviews or less and has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3155	what are the review with grander rating than NUMBER_0 and description equal to QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3156	search for the GENERIC_ENTITY_org.schema.Restaurant:Person_0 penned reviews published earlier than DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
3157	alert me the city of restaurant has QUOTED_STRING_0 that is in cuisine	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3158	show me a restaurant that serves QUOTED_STRING_0 and that has QUOTED_STRING_1 in the description	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3159	how close is the farthest restaurant with lower rating than NUMBER_0 from home from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3160	which are restaurants with cuisine equal to QUOTED_STRING_0 and location equivalent to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3161	find restaurants that serve QUOTED_STRING_0 , have the max rating , and have QUOTED_STRING_1 as a summary .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3162	show me phone numbers of restaurants at work	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
3163	i would like to know which restaurants are around work , have the maximum count of reviews and have their state equal to GENERIC_ENTITY_tt:us_state_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
3164	get me the rating of the QUOTED_STRING_0 restaurant with the minimum rating	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
3165	find the city of restaurant with a rating equal to NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
3166	retrieve the most far away restaurants having at least NUMBER_0 reviews from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
3167	show me what is the distance to restaurant with city containing LOCATION_0 from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
3168	what is the name of the restaurant furthest from my location .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
3169	fetch the postal code of the nearest restaurants with cuisine being QUOTED_STRING_0 to work	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3170	get the rating of restaurants having telephone equal to PHONE_NUMBER_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
3171	speak the summary of reviews having earlier date published than DATE_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
3172	find the name of restaurant with rating higher than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
3173	fetch reviews having rating more than 1 in restaurants with QUOTED_STRING_0 as postal code	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3174	what 's the number of evaluations of the restaurant with review count less than NUMBER_0 most distant in distiction to work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3175	may i have the phone number of restaurant sharing the home location ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
3176	get the most far away restaurant having smaller review count than NUMBER_0 from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3177	pull up review created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with summary being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
3178	fetch the most far away restaurants having lower rating than NUMBER_0 from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3179	which state are the restaurants with QUOTED_STRING_0 in their descriptions located in ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
3180	how near is the nearest restaurants with food type being QUOTED_STRING_0 to work from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
3181	show me the restaurants that have over NUMBER_0 reviews and are n't rated above NUMBER_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
3182	find me reviews rated NUMBER_0 or over	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3183	text me what is the location of restaurants having at least NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3184	find the cuisine of the restaurant with QUOTED_STRING_0 as food type with the biggest number of reviews .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
3185	give me all the QUOTED_STRING_0 restaurants near home with the least amount of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3186	find a restaurant with NUMBER_0 or fewer stars that has QUOTED_STRING_0 food and the least reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3187	i want to know the country for the restaurant that has a higher rating than NUMBER_0 that is the greatest distance from home .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3188	tell me restaurants with NUMBER_0 reviews and tell me how far away they are from home to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3189	what are the names of the reviews that include the word QUOTED_STRING_0 in their descriptions ?	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
3190	what restaurant are in this area and get phone number equivalent to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3191	i want to know the distance of restaurant nearest to my home with NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3192	which restaurants have QUOTED_STRING_0 in their description and an address equal to home ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
3193	get a restaurant that has QUOTED_STRING_0 cuisine and is located at or near my home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3194	which restaurants with here as an address serve QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3195	in what state are restaurants that have NUMBER_0 reviews ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3196	get restaurants with review count equivalent to NUMBER_0 and location equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
3197	search for reviews rated NUMBER_0 or above .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3198	let me see the nearest restaurants ' ratings which also have the description that says QUOTED_STRING_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3199	give me all QUOTED_STRING_0 restaurants near here with a zip of QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3200	what is the price range of the restaurant having QUOTED_STRING_0 in the description closest to here .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3201	find me the zip code of restaurant with an id of precisely QUOTED_STRING_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
3202	what is both the rating and name of the most far away restaurants which have QUOTED_STRING_0 food from here ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3203	tell me how far away the restaurant with a rating lower than NUMBER_0 is from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3204	which are the restaurant with served food type equal to QUOTED_STRING_0 and rating equal to NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3205	what is the phone number of the furthest restaurant from here which has a rating less than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3206	furthest from my location , tell me the number of reviews of restaurants with less than NUMBER_0 reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3207	tell me the name of the restaurant with the lowest rating in GENERIC_ENTITY_tt:us_state_0 that has a review count of greater than NUMBER_0 .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
3208	which restaurants around home with QUOTED_STRING_0 as summary gets the largest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
3209	get me what is the description of the restaurant with the minimum rating	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3210	search the restaurant with lower rating than NUMBER_0 with the smallest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
3211	find the zip code of restaurants that are located at work	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
3212	let me see the lowest rated reviews with a QUOTED_STRING_0 summary and a publishing date later than DATE_0 .	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3213	which restaurant get cuisine being QUOTED_STRING_0 and country equivalent to GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3214	tell me the number of reviews rated at a NUMBER_0 .	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
3215	gather for me what is the distance from work to restaurants with higher review count than NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
3216	what is the restaurants having NUMBER_0 or lower review count that offer QUOTED_STRING_0 cuisine with the largest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3217	show me the descriptions of restaurant having at most NUMBER_0 reviews .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3218	show me reviews that contain the author name which is equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 and that have more than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3219	please name the street of only restaurants with less than NUMBER_0 ratings	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
3220	tell me which restaurants with a review count of less than NUMBER_0 have the most reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
3221	give me restaurants with a minimum of NUMBER_0 stars that are close to me .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
3222	tell me the restaurant that have more than NUMBER_0 reviews that 's closest to my location .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
3223	list the phone for the restaurant closest to work that has a rating lower than 1	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) => notify
3224	get review having author equivalent to GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
3225	what is the cuisine type of the restaurants with greater rating than NUMBER_0 with the least reviews	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
3226	where is a restaurant that has a description of QUOTED_STRING_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) => notify
3227	how many QUOTED_STRING_0 restaurants are near my home ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3228	tell me the furthest restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] => notify
3229	search the restaurants around work which sell QUOTED_STRING_0 food which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3230	gather the telephone of restaurant with QUOTED_STRING_0 in the descriptions	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
3231	which restaurants in the vicinity of work have an QUOTED_STRING_0 menu ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3232	show me the reviews that have the highest ratings .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
3233	get restaurant having NUMBER_0 reviews and address equivalent to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
3234	enumerate for me the restaurants with location equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home => notify
3235	what is the address of restaurants containing NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3236	what 's the picture of restaurants with more than NUMBER_0 ratings from home ?	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3237	how close away are the most far away restaurants having fewer than NUMBER_0 reviews to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3238	get the name of restaurants with review count fewer than 1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
3239	tell me restaurant around me with food type being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3240	give me the rating of the restaurant with the phone number PHONE_NUMBER_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
3241	seek reviews having rating bigger than 1 for restaurants with NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3242	what 's the image of a restaurant with more than NUMBER_0 reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3243	give me all the restaurants that have a review that was submitted by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) } => notify
3244	which are restaurant with description equivalent to QUOTED_STRING_0 and rating equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3245	what is the number of evaluations does the dining places having less than than NUMBER_0 reviews that is most far away from home have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3246	tell me the rating of the restaurant that is considered QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3247	what are the names of the restaurants that have an under NUMBER_0 review account ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
3248	give me the review count of restaurants close to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
3249	show a list of restaurants with the least number of reviews that has no less than NUMBER_0 reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
3250	what restaurants in this area that are QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3251	grab me what is the description of the restaurant with the lowest rating	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3252	tell me the location for restaurants with a review count that is NUMBER_0 or lower .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3253	what is the name of the street with a QUOTED_STRING_0 cuisine restaurant .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3254	find me the image of restaurant having larger than NUMBER_0 reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3255	i want to see which QUOTED_STRING_0 restaurant is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3256	retrieve the restaurants having postal code being QUOTED_STRING_0 and cuisine equal to QUOTED_STRING_1 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3257	find the restaurants near my job and give me the location .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3258	get a restaurant with a rundown of QUOTED_STRING_0 and a score of more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3259	which is the restaurant around here that serves QUOTED_STRING_0 cuisine with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3260	show me what is the review count of restaurants with review count not higher than NUMBER_0 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3261	i want to see the location for a restaurant with at least NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3262	which restaurant get cuisine being QUOTED_STRING_0 and tinier rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3263	what is the photo of restaurant around here .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3264	what is the restaurant address with more than NUMBER_0 reviews and farthest away from work ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3265	i need to know how far restaurants are that have under 1 review .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) ) => notify
3266	in what state are restaurants with QUOTED_STRING_0 in the zip code	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
3267	what 's the distance of restaurants with more than NUMBER_0 reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
3268	let me see the restaurant farthest away from work that has zero reviews .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
3269	grab the distance to restaurants having review count equal to NUMBER_0 from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
3270	i want restaurants having QUOTED_STRING_0 as served food type and phone number equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3271	can you get me the address of a NUMBER_0 star restaurant ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
3272	list restaurants with QUOTED_STRING_0 in the same address and postal code as the home	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
3273	which restaurant get cuisine being QUOTED_STRING_0 and lower rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3274	text me the image and location of the QUOTED_STRING_0 restaurants closest to work	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3275	say what is the descriptions of restaurants with rating fewer than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
3276	name the rating given to restaurants that have a phone number of PHONE_NUMBER_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
3277	tell me the descriptions of restaurants with an under NUMBER_0 rating .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
3278	i need restaurants close to work with a zip code of QUOTED_STRING_0	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3279	what are NUMBER_0 star restaurants with more than NUMBER_1 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
3280	seek the restaurant with zip code equal to QUOTED_STRING_0 farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3281	what restaurant get postal code being QUOTED_STRING_0 and cooks QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3282	where is the restaurant with review count equal to NUMBER_0 with the biggest count of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) => notify
3283	get review with publication date after DATE_0 and QUOTED_STRING_0 as summary .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
3284	what is the date of publication of the reviews which has the highest rating	now => [ param:datePublished:Date ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
3285	fetch the restaurant with rating more than 1 .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) => notify
3286	what is the price range of the restaurants with the fewest number of reviews	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3287	how far away are restaurants with postal code containing QUOTED_STRING_0 to here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
3288	text me what is the country of restaurants with rating lower than 1	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
3289	which is the restaurant having review count not more than NUMBER_0 and served food type being QUOTED_STRING_0 which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3290	get the price range of restaurant having city equal to LOCATION_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
3291	i 'd like to know the distance of restaurants to work that have a location here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) => notify
3292	tell me the prices of restaurants like QUOTED_STRING_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
3293	which are the restaurants with served food type being QUOTED_STRING_0 and description equal to QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3294	get me the street of the restaurants with lower review count than NUMBER_0 that is farthest from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3295	i nee reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
3296	i 'm looking for QUOTED_STRING_0 cuisine restaurants rated NUMBER_0 or above .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3297	please show restaurants having 1 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
3298	bring up restaurant in GENERIC_ENTITY_tt:country_0 with review count higher than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
3299	get me what is the distance of restaurant with review count fewer than NUMBER_0 from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
3300	give me all the restaurants that are located within the zip code QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
3301	what is the restaurant that has QUOTED_STRING_0 cuisine '' and whose country is equal to GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3302	i 'd like to know the countries of restaurants that are rated NUMBER_0 stars .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
3303	retrieve restaurants containing QUOTED_STRING_0 as description and rating equivalent to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3304	what is the price range of the restaurant nearest to work with a QUOTED_STRING_0 food type	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3305	show me descriptions of restaurants in LOCATION_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
3306	find restaurants with the phone number PHONE_NUMBER_0 that are located in this area	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3307	can you tell me what review GENERIC_ENTITY_org.schema.Restaurant:Person_0 was the author of and that came out after DATE_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
3308	show me restaurant in this area with summary being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
3309	display for me what is the city of restaurants with at most NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3310	what has GENERIC_ENTITY_org.schema.Restaurant:Person_0 authored that was a review	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
3311	find an image of a restaurant around here	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3312	which restaurant has summary being QUOTED_STRING_0 and served cuisine being QUOTED_STRING_1 has the highest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3313	show me the restaurant with the telephone number + PHONE_NUMBER_0 and the same location as the house	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3314	can you list some restaurants that are by my work that come up if you do a search for QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3315	in which state is the restaurant that has received no reviews ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
3316	show me all of the restaurants in the zip code QUOTED_STRING_0 that serve QUOTED_STRING_1 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3317	look for dining establishments with the phone number being PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3318	what 's both the rating and name of the most far away dining locales which offer QUOTED_STRING_0 food in distiction to here ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3319	seek for me the rating of review having QUOTED_STRING_0 in the descriptions	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
3320	what is the country of the restaurant that has greater than 1 review ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
3321	get me the country of the restaurants near home with the smallest number of reviews .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
3322	look for reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having rating at most NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
3323	which restaurants have the best ratings , a QUOTED_STRING_0 description , and location equaling here ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
3324	text me the price range of restaurant with id equal to QUOTED_STRING_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
3325	what 's the restaurant telephone with over NUMBER_0 reviews ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3326	text me the image of the restaurants near work with the least reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
3327	find the restaurants near here having food type being QUOTED_STRING_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3328	show me what is the city of restaurant having state equal to GENERIC_ENTITY_tt:us_state_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
3329	who created the review that has rating of under NUMBER_0 ?	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
3330	i 'd like to know restaurants that have at most NUMBER_0 reviews that are closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3331	which are restaurant in this area that are QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3332	get the rating of review having author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
3333	grab the restaurants with location equal to work which is most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
3334	what is both the telephone and state of the dining business having greater rating than NUMBER_0 that is closest to here	now => [ param:address.addressRegion:Entity(tt:us_state) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3335	what is the distance from home of restaurants with QUOTED_STRING_0 cuisine ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
3336	show me the restaurant with the phone number of PHONE_NUMBER_0 that have QUOTED_STRING_0 within the description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3337	show me what the name of city is for restaurants that are here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3338	what is the restaurant having served food type being QUOTED_STRING_0 and phone number equal to PHONE_NUMBER_0 with the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
3339	what 's the price range of dining locations with having less number of evaluations than NUMBER_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3340	get me the zip code of restaurant with NUMBER_0 reviews	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3341	as far as restaurants , what are the streets of the closest one to me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3342	how close to me are the restaurant with NUMBER_0 reviews farthest from here from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3343	name the eatery here with a rating of NUMBER_0 or less and the largest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
3344	find out where restaurant with no reviews is located	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
3345	find the reviews of the restaurant near home with the biggest number of reviews .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
3346	show me review for places near here which have a greater number of reviews than NUMBER_0 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3347	how many reviews make up the review count for restaurants with no reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
3348	which are reviews having later date published than DATE_0 for restaurant having larger than NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3349	what 's the country farthest from my home that has restaurants with a lower review count than 1 .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
3350	get reviews having summary being QUOTED_STRING_0 and rating equal to NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
3351	what number of reviews have been given to those restaurants closest to work ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3352	show me reviews from restaurants with a rating above 1 that have QUOTED_STRING_0 as the zip code	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3353	how far away is the restaurant that offer QUOTED_STRING_0 cuisine with the least reviews from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
3354	please list restaurants in here with review count greater than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
3355	which reviews with a summary containing QUOTED_STRING_0 were written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
3356	what is the distance from home to restaurants with QUOTED_STRING_0 in the cuisine	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
3358	get the street address of restaurants having at least 1 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
3359	show the restaurant furthest from work that offers QUOTED_STRING_0 cuisine and its rating and country .	now => [ param:address.addressCountry:Entity(tt:country) , param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3360	say what is the current name of the restaurants with cuisine being QUOTED_STRING_0 with the largest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3361	what is the country name of restaurants in GENERIC_ENTITY_tt:country_0 ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
3362	how close is a restaurant that serves QUOTED_STRING_0 food and far from work and home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
3363	record a restaurant that has QUOTED_STRING_0 as a summary and the following phone number PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3364	what 's the postal code of the closest restaurant to here	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3365	look for restaurant that has QUOTED_STRING_0 in the description that provides QUOTED_STRING_1 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3366	find all restaurants near home with a zip code of QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
3367	what can you indicate in the way of restaurants showing QUOTED_STRING_0 in their overview ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
3368	get restaurant in GENERIC_ENTITY_tt:us_state_0 with served food type being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3369	get the restaurants having descriptions containing QUOTED_STRING_0 closest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3370	reveal what 's the number of evaluations of dining locations having review count higher than NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3371	show me the restaurant with the phone number of PHONE_NUMBER_0 and that 's near here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3372	show me the restaurant having QUOTED_STRING_0 in the zip code which is most far away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3373	name a restaurant around my house that 's summary is exactly QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
3374	show me the image of restaurant in GENERIC_ENTITY_tt:country_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
3375	list restaurants offering QUOTED_STRING_0 restaurants with a country equivalent to GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3376	i want to know how far away the restaurant is .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) => notify
3377	show me the street of the furthest restaurant from here that has a rating lower than NUMBER_0 .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3378	how many reviews does the furthest restaurant from here to GENERIC_ENTITY_tt:us_state_0 have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
3379	which restaurant here in GENERIC_ENTITY_tt:country_0 has the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
3380	gather the nearest restaurant having location equal to work to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
3381	get reviews with rating more than NUMBER_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3382	what is the location of restaurants having NUMBER_0 or greater review count	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3383	what are QUOTED_STRING_0 dining locations in GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3384	get me what is the food type of restaurants having NUMBER_0 reviews .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3385	show me restaurants that have NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
3386	i want to know of a restaurant from LOCATION_0 with the least reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) [ 1 ] => notify
3387	please enumerate restaurant with QUOTED_STRING_0 as served cuisine and address equivalent to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3388	gather restaurants having at least 1 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
3389	please find a restaurant in my area that serves QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3390	which are restaurants with a total score of NUMBER_0 or less than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
3391	what is the number of reviews that rate at most NUMBER_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
3392	which QUOTED_STRING_0 restaurant has the tiniest amount of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3393	give me a restaurant in this area with a QUOTED_STRING_0 rundown .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
3394	what are the QUOTED_STRING_0 cuisine restaurants around the house ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3395	get the restaurant with location equal to here which is nearest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
3396	tell me how close the nearest NUMBER_0 star restaurant is from my work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3397	say what is the number of evaluations of dining locations near home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
3398	for the restaurant that has more than 1 review what is its country ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
3399	what is the restaurant ranking with the lowest number of reviews ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3400	present the price range of restaurant having no reviews .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
3401	which restaurants rated better than NUMBER_0 have an address of work ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
3402	what is the name of the street with restaurants near to this location ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3403	please tell me what the descriptions of reviews are for ratings of 1 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == 1 ) => notify
3404	grab me the country of the restaurants close to home with the smallest number of reviews .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
3405	show me the restaurants having at least NUMBER_0 reviews with the least reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
3406	restaurants with home as their location are found in what country ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
3407	the GENERIC_ENTITY_tt:country_0 restaurant is located in what state ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
3408	what is the current reviews of restaurants with review count equal to NUMBER_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3409	find restaurants that have reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) } => notify
3410	gather the state of the farthest restaurants from here	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3411	which are review having rating at largest NUMBER_0 and greater rating than NUMBER_1 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
3412	i 'm looking for descriptions of restaurants with id that 's the same as QUOTED_STRING_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
3413	look for restaurants with this location and a description that equals QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
3414	tell me what the restaurant is rated that has a postal code of QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
3415	tell me the price range for restaurants that serve QUOTED_STRING_0 food .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3416	fetch the most far away restaurants with at most NUMBER_0 reviews from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3417	find the review uploaded by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with a date made before DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
3418	which restaurant with QUOTED_STRING_0 as served cuisine and number of evaluations equal to NUMBER_0 having the tiniest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3419	show QUOTED_STRING_0 food that 's close to my job and their description and cuisine .	now => [ param:description:String , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3420	get restaurants having postal code being QUOTED_STRING_0 and food type equivalent to QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3421	fetch the restaurant in this area that serves QUOTED_STRING_0 food which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3422	grab the country of restaurants with higher review count than 1	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
3423	find the restaurant with PHONE_NUMBER_0 as its telephone number .	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3424	let me see the QUOTED_STRING_0 restaurants in this area with the most reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3425	what is the telephone number of the restaurant with the greatest distance from here that has a rating lower than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3426	out of the restaurants nearest to home , how many reviews out of the ones with more than NUMBER_0 have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3427	find the restaurant with the phone number of PHONE_NUMBER_0 and the fewest reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
3428	give me all of the restaurants that are rated above NUMBER_0 and are in are QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
3429	let me know what restaurants with the phone number PHONE_NUMBER_0 have as far as their price range .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
3430	study with a score of more than NUMBER_0 and a review of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3431	ask the restaurant location nearest to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3432	i 'd like to find restaurant reviews of a LOCATION_0 restaurant .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
3433	reveal the dining locations with QUOTED_STRING_0 as summary and address equal to home with the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
3434	what restaurants with a QUOTED_STRING_0 menu feature a description of QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3435	list the restaurants with the fewest reviews that have a QUOTED_STRING_0 description and a QUOTED_STRING_1 menu .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3436	what is the location of restaurant rated with NUMBER_0 star	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
3437	gather the restaurant having review count equal to NUMBER_0 most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
3438	which are the restaurants near here that cooks QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3439	get restaurant which offer QUOTED_STRING_0 cuisine and with having less number of evaluations than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3440	find the closest restaurant having zero reviews to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
3441	where are restaurants with a PHONE_NUMBER_0 telephone number and more than NUMBER_0 reviews ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
3442	what QUOTED_STRING_0 restaurant is farthest away	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3443	what are the reviews for restaurant having description that of QUOTED_STRING_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3444	from my job , show me the furthest restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
3445	show me distance of the restaurant with only NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
3446	what is the country of the restaurant QUOTED_STRING_0 in the description that has the smallest amount of reviews .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
3447	how far is restaurants rated with NUMBER_0 stars to here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
3448	find the best rated QUOTED_STRING_0 restaurant that serve QUOTED_STRING_1 .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3449	tell me how many reviews the restaurants with less than NUMBER_0 reviews that are nearby have .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3450	i 'm looking for restaurants that offer QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3451	which restaurants have telephone equal to PHONE_NUMBER_0 and QUOTED_STRING_0 in the cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3452	ask me the QUOTED_STRING_0 restaurant road in the kitchen	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3453	how close away are the restaurant in GENERIC_ENTITY_tt:us_state_0 farthest from home to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
3454	what are restaurant nearby having QUOTED_STRING_0 in the food type ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3455	tell me the location and food type for the closest restaurant that is QUOTED_STRING_0 .	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3456	how far is the restaurant with the phone number PHONE_NUMBER_0 from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
3457	tell me what is the city of restaurants right here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3458	say what is the street of restaurants with smaller rating than NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
3459	from where i work , tell me the nearest restaurant with less than a NUMBER_0 rating .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3460	reviews of restaurants near my home with reviews less than NUMBER_0 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3461	where is there a restaurant in the QUOTED_STRING_0 zip code that has QUOTED_STRING_1 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3462	where are the restaurants with the most ratings in GENERIC_ENTITY_tt:country_0 ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) => notify
3463	which are the restaurant in this area having review count greater than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
3464	what restaurants are by my work that have a rating of NUMBER_0 or more ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
3465	find the rating of restaurant with review count fewer than 1 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
3466	a restaurant with a minimum of 1 review has what as its zip code ?	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
3467	how many total reviews does the most far away restaurants in GENERIC_ENTITY_tt:us_state_0 from here have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
3468	can you tell me the restaurants with no reviews that are closest to home ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
3469	what QUOTED_STRING_0 restaurants are there ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3470	get restaurants with bigger rating than NUMBER_0 and QUOTED_STRING_0 as served cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3471	tell me restaurant name that have QUOTED_STRING_0 as the zip code that are closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3472	tell me what kind of food do restaurants in LOCATION_0 serve	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
3473	tell me the city that the restaurants with a location equal to here are located in .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3474	tell me what is the zip code of restaurant with location equivalent to here	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3475	tell me the restaurant having QUOTED_STRING_0 as description and food type equal to QUOTED_STRING_1 which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3476	give me a restaurant with a definition of QUOTED_STRING_0 and a minimum of NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3477	find restaurants having postal code being QUOTED_STRING_0 and food type equal to QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3478	what city has QUOTED_STRING_0 restaurants	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
3479	how are restaurants with a description of QUOTED_STRING_0 rated ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
3480	which restaurants have a location that is the same as this one ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location => notify
3481	how many reviews are the in the restaurant that has the highest rating ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3482	i 'd like to see images of restaurants that have QUOTED_STRING_0 in the description nearby my job .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3483	show me the farthest restaurant away from work , with less than NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3484	show me what is the road name of dining business with phone number equal to PHONE_NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
3485	show me what is the reviews of restaurants with higher review count than NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3486	which restaurants near my home that are rated not more than NUMBER_0 and have the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
3487	what are the restaurants the shortest distance from here with more than NUMBER_0 reviews ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
3488	i 'd like to see the zip code of restaurants with work as the location	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
3489	tell me restaurants that have no more than NUMBER_0 reviews and receive the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
3490	fetch me what is the image of restaurant with more review count than NUMBER_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3491	what QUOTED_STRING_0 restaurant has the smallest amount of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3492	i need a restaurant with NUMBER_0 or less stars and less than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:aggregateRating.ratingValue:Number <= NUMBER_1 => notify
3493	text me what is the date published of review having less rating than NUMBER_0 .	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
3494	find for me the restaurant the greatest distance from here that has rating equal to 1	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
3495	find me restaurants with more than NUMBER_0 reviews located farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
3496	where is the restaurant near my home that serves QUOTED_STRING_0 food .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3497	what restaurants get rating at least NUMBER_0 and state equal to GENERIC_ENTITY_tt:us_state_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
3498	look for GENERIC_ENTITY_org.schema.Restaurant:Person_0 reviews which give a NUMBER_0 star rating .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
3499	say the city name of the nearest restaurants with postal code containing QUOTED_STRING_0 to work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3500	which restaurant has more than NUMBER_0 reviews and is the farthest from my workplace	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
3501	tell me the number of restaurants with a description that contains QUOTED_STRING_0	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
3502	what is the lowest rated restaurant that serves QUOTED_STRING_0 food .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3503	give all restaurants not rated above NUMBER_0 that serve QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3504	present restaurant with higher rating than NUMBER_0 that serves QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3505	show me the rating of restaurant with NUMBER_0 reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3506	search the restaurant with rating lower than NUMBER_0 with the smallest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
3507	look for the QUOTED_STRING_0 restaurants which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3508	the restaurant with a rating of NUMBER_0 or higher has what type of food ?	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
3509	where is the restaurant having no evaluations most far away in distiction to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) => notify
3510	fetch restaurant which offer QUOTED_STRING_0 cuisine and with lower review count than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3511	how many restaurant with only 1 reviews are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
3512	which restaurant get food type being QUOTED_STRING_0 and country equal to GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3513	what restaurants that have counts of reviews equal to NUMBER_0 have the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] => notify
3514	what are the reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that figure QUOTED_STRING_0 in their overview ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
3515	get the restaurant that is QUOTED_STRING_0 closest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3516	find me a restaurant serving QUOTED_STRING_0 with a lower than NUMBER_0 review count	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3517	reveal what 's the number of evaluations of the dining locales with QUOTED_STRING_0 that is in explanation with the least reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
3518	from here what 's the farthest restaurant with a review count of NUMBER_0 ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
3519	list restaurants serving QUOTED_STRING_0 food with NUMBER_0 or fewer reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3520	fetch the location of restaurant having no reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
3521	what city has a restaurant with a rating under NUMBER_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
3522	get locations of restaurants with QUOTED_STRING_0 included in the description	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
3523	out of restaurants farthest from my job , find one with a rating higher than 1 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] => notify
3524	give me addresses of nearby restaurants .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3525	get me what is the distance from work to restaurants with more review count than NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
3526	can you tell me which QUOTED_STRING_0 restaurants serve QUOTED_STRING_1 as well ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3527	search for the restaurant nearest to here which has zero reviews .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
3528	look for restaurant that is in GENERIC_ENTITY_tt:us_state_0 and that sells QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3529	find a restaurant that has QUOTED_STRING_0 as its description and has review count not more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3530	what menu prices are found at the restaurant with the best rating ?	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3531	between here and restaurants in LOCATION_0 what is the distance	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
3532	what 's the cuisine and price range of restaurants close by with the lowest amount of reviews .	now => [ param:priceRange:String , param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
3533	which restaurants that serve QUOTED_STRING_0 cuisine are rated less than NUMBER_0 stars and have the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3534	how far away is the nearest restaurants with NUMBER_0 reviews to work to home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3535	grab the reviews of restaurants having NUMBER_0 reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3536	what reviews does GENERIC_ENTITY_org.schema.Restaurant:Person_0 have that include QUOTED_STRING_0 in the overview ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
3537	what is the zip code for restaurants in the city of LOCATION_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
3538	find QUOTED_STRING_0 cuisine restaurants that have a rating of NUMBER_0 or less .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3539	show me the distance of restaurants having cuisine equal to QUOTED_STRING_0 from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
3540	what is the price range for restaurants with less than NUMBER_0 reviews ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3541	i 'd like to know restaurant ratings with at least NUMBER_0 reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3542	tell me restaurants close to here with served cuisine being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3543	i want NUMBER_0 or higher-rated restaurants offering QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3544	show me the furthest NUMBER_0 rating restaurant and what is the cuisine .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3545	find restaurants serving QUOTED_STRING_0 that have QUOTED_STRING_1 in the summary	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3546	how many total reviews in the restaurants having phone number equal to PHONE_NUMBER_0 closest to here ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
3547	find all QUOTED_STRING_0 restaurants with QUOTED_STRING_1 in their description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3548	what is the country of restaurants located here	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3549	find the QUOTED_STRING_0 restaurant with over NUMBER_0 reviews and the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3550	locate restaurants with a rating of NUMBER_0 or less that have a bigger review count than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
3551	what are review having rating not bigger than 1 of restaurant having more than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3552	show me reviews for restaurants in the postal code QUOTED_STRING_0 that have more than a rating of 1 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3553	grab the restaurant with id equal to QUOTED_STRING_0 which is most far away from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3554	tell me the distance of a restaurant from work that has the phone number PHONE_NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
3555	show me restaurant in this area with description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
3556	get review gets the soonest date published	now => ( sort param:datePublished:Date asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
3557	i want a description of restaurants that contain QUOTED_STRING_0 in its zip code that 's closest to work .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3558	grab me what is the city of the farthest restaurant having QUOTED_STRING_0 in the description from here	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3559	tell me the county of under NUMBER_0 rated restaurants furthest from here .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3560	what are QUOTED_STRING_0 restaurants ' names having address equal to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3561	how close is the restaurant in this area that has the least amount of reviews to here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
3562	find restaurants with ratings NUMBER_0 or below that are QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3563	what is the price range of the restaurant which has the biggest rating .	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3564	what is the current rating of the restaurant that is closest to home	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3565	list review made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with date published after DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
3566	get me the street address of restaurant in LOCATION_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
3567	what is the street of restaurant with QUOTED_STRING_0 as served food type ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3568	what is the QUOTED_STRING_0 restaurant in here with the largest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3569	i am trying to find a QUOTED_STRING_0 restaurant near my workplace .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
3570	get me the name and street of the restaurant near here with the smallest number of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
3571	tell me which country the restaurants are in with a rating lower than NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
3572	which restaurants with fewer review count than NUMBER_0 and food type equal to QUOTED_STRING_0 gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3573	how close to home are restaurants in the GENERIC_ENTITY_tt:country_0 with the highest number of reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) ) => notify
3574	enumerate review with NUMBER_0 or higher rating .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3575	tell me how many restaurants have no reviews .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
3576	get me the farthest restaurant having no reviews from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
3577	which are the evaluations having later date published than DATE_0 in dining locales with number of reviews equal to 1	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3578	fetch the description of the nearest restaurants with review count fewer than NUMBER_0 to home .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3579	get the restaurants with rating lower than NUMBER_0 which is nearest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3580	what is the QUOTED_STRING_0 postal code and food category for restaurants with NUMBER_0 or lower ratings ?	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3581	i want to see the restaurants close to home that have QUOTED_STRING_0 as their summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
3582	for GENERIC_ENTITY_tt:country_0 , show the restaurant price range .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
3583	how many current reviews are there in the restaurant rated 1 star that is nearest to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] ) => notify
3584	what restaurants get description equal to QUOTED_STRING_0 and phone number that is PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3585	find the restaurant with the fewest reviews by work	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] => notify
3586	get me what is the reviews of the restaurant having postal code containing QUOTED_STRING_0 farthest from here .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3587	find GENERIC_ENTITY_tt:us_state_0 restaurants with the zip code QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
3588	tell me restaurants that have a maximum of NUMBER_0 reviews that are nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3589	show the restaurant farthest from home with a rating over NUMBER_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
3590	i want the telephone number of the restaurant with more than NUMBER_0 reviews .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3591	tell the rating and phone number of the closest restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:aggregateRating.ratingValue:Number , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
3592	show me the image of restaurants that are closest to work with the tiniest number of reviews	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
3593	fetch me what is the zip code of restaurant with QUOTED_STRING_0 in the descriptions	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
3594	are there any restaurants in my vicinity that serve QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3595	how far away is the closest restaurants rated NUMBER_0 star to home from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3596	what are review created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having rating equivalent to NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
3597	how far is restaurant with review count equivalent to NUMBER_0 from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
3598	what restaurants get description being QUOTED_STRING_0 and telephone number equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3599	what is the rating of restaurants having location equivalent to here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3600	tell me how close restaurants with descriptions equal to QUOTED_STRING_0 are .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) => notify
3601	i would like to know all the restaurants that have the postal code of QUOTED_STRING_0 here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
3602	which are the reviews having later publication date than DATE_0 in restaurants with review count equal to 1 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3603	can you tell me the rating of the restaurant that has a postal code that is equal to QUOTED_STRING_0 ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
3604	fetch for me the restaurant in LOCATION_0 which is farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) ) [ 1 ] => notify
3605	i 'd like to know how many reviews restaurants with QUOTED_STRING_0 in the descriptions have .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
3606	tell me the country of the closest restaurants with QUOTED_STRING_0 as a zip code ''	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3607	i would like to know the restaurants with over NUMBER_0 reviews and a location that equals work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work => notify
3608	give me the reviews of the restaurant which has the lowest review count	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3609	hello what is the name and price range of restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
3610	find a restaurant in GENERIC_ENTITY_tt:us_state_0 that has a NUMBER_0 star rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
3611	what reviews have a rating of more than NUMBER_0 and and a date published later than DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3612	what restaurant get state equivalent to GENERIC_ENTITY_tt:us_state_0 and are QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3613	tell me the reviews published later than DATE_0 with only 1 review .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3614	i want restaurant having zip code being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
3615	look for reviews with a maximum of NUMBER_0 rating and that have ea better rating than NUMBER_1	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
3616	find restaurants having QUOTED_STRING_0 as description and rating equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3617	find a restaurant that NUMBER_0 reviews and the summary that is QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3618	what restaurants with the telephone number equal to PHONE_NUMBER_0 are the least distance to work ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
3619	tell me a restaurant that has a NUMBER_0 or more review count and an address close to work	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work => notify
3620	what country is the restaurant with the id equal to QUOTED_STRING_0 located in ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
3621	what are the reviews with the maximum rating and have QUOTED_STRING_0 in their description .	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3622	which are current review for restaurant rated NUMBER_0 star	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3623	get reviews created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with description being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
3624	for restaurants in GENERIC_ENTITY_tt:country_0 i want to see all that are QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3625	i want to see the reviews that were published later than DATE_0 and a summary of QUOTED_STRING_0 that have the minimum rating ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3626	find QUOTED_STRING_0 restaurants in the vicinity of home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3627	text me what is the telephone of restaurant with location equal to home .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
3628	show me the description and cuisine of the QUOTED_STRING_0 restaurant closest to my work	now => [ param:description:String , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3629	which state contains the restaurant in GENERIC_ENTITY_tt:country_0 ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
3630	gather the number of reviews in restaurant having city equal to LOCATION_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
3631	find the cuisine type of the farthest QUOTED_STRING_0 restaurant .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3632	show me what kind of food restaurants with NUMBER_0 reviews serve	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3633	which is the restaurants with zero reviews with the smallest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) [ 1 ] => notify
3634	show me the street of the restaurants with postal code containing QUOTED_STRING_0 which is nearest to work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3635	what is the distance to the restaurant with zero reviews that is the nearest to work to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
3636	how far is the closest restaurant that has QUOTED_STRING_0 in the description	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
3637	i would like to know the phone number of the restaurant that has a review count of above NUMBER_0 that are the largest distance from home .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3638	i 'd like to know how many restaurants there are they have one review at most	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
3639	fetch me what is the food type of restaurant with telephone equal to PHONE_NUMBER_0	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
3640	which restaurants get lower review count than NUMBER_0 and sells QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3641	the closest restaurants in GENERIC_ENTITY_tt:us_state_0 are how far from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
3642	which are the dining locations with rating not more than NUMBER_0 and greater number of evaluations than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
3643	i am looking for a restaurant that has less than NUMBER_0 reviews and is close to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3644	what is the restaurant with the max review count that has a rating under NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
3645	i want restaurants with QUOTED_STRING_0 in the description that serve QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3646	say what is the food type of the closest restaurants to here	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3647	what is the name of the reviews with the biggest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
3648	how many reviews does the furthest restaurant have with a review count under NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3649	tell me which state restaurants with review count under NUMBER_0 is in	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3650	look for the description of restaurant that has over NUMBER_0 reviews	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3651	gather for me the telephone of restaurants in QUOTED_STRING_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
3652	what places to eat have the lowest rating , are in the QUOTED_STRING_0 zip code , and are very close to my work ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
3653	what is the image of restaurant near here .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3654	how many reviews are there in the furthest restaurants which offer QUOTED_STRING_0 food from work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3655	find the restaurant that 's rating is NUMBER_0 or higher , and tell me what city it is in .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
3656	gather the reviews of restaurant rated NUMBER_0 stars .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
3657	what is the description of review having later publication date than DATE_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) => notify
3658	i want to know the name of restaurants that have QUOTED_STRING_0 and a postal code closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3659	how close to me are the most far away restaurant with telephone equal to PHONE_NUMBER_0 from home to home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
3660	fetch restaurants with food type being QUOTED_STRING_0 and review count not more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3661	show me the restaurant that has at least NUMBER_0 reviews that is the biggest distance from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
3662	which restaurants have QUOTED_STRING_0 in the cuisine and description equivalent to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3663	find the zip code for restaurants located in LOCATION_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
3664	i 'm interested in QUOTED_STRING_0 restaurants with the biggest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3665	find restaurants that have the address of home that have the smallest amount of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] => notify
3666	out of the restaurants near my job , find the nearest QUOTED_STRING_0 restaurant .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
3667	tell me which restaurants have a location equal to work and more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work => notify
3668	which restaurants are inside the GENERIC_ENTITY_tt:country_0 and get telephone equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3669	what dining locations get rating at minimum NUMBER_0 and state equal to GENERIC_ENTITY_tt:us_state_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
3670	what 's the rating of the diner that is closest to home	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3671	for restaurants with NUMBER_0 reviews , what are the reviews ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3672	what summary describes restaurants that have a rating of NUMBER_0 or below ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
3673	pull up restaurant with QUOTED_STRING_0 description and work-like email	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
3674	how would restaurants with a location matching that of work be rated ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
3675	find a review with at most a NUMBER_0 rating and tell me the name	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
3676	name the restaurant with the greatest number of reviews that serves QUOTED_STRING_0 food and has a description of QUOTED_STRING_1 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3677	i would like for you to find the restaurant that has a rating equal to 1 and is the greatest distance from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
3678	enumerate evaluations which was done by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
3679	what city is the restaurant in who 's rating is NUMBER_0 or higher ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
3680	show me the farthest restaurant from home to serves QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3681	tell me the names of the restaurants with the highest review count that have QUOTED_STRING_0 in the description .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
3682	what is the restaurant name that serves QUOTED_STRING_0 food with the tiniest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3683	what is the distance from here are restaurant in zip code QUOTED_STRING_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) => notify
3684	what restaurant is the greatest number of miles from home and has a count of reviews fewer than NUMBER_0 ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3685	which are restaurant having QUOTED_STRING_0 in the food type and telephone equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3686	message me the name of the restaurants having QUOTED_STRING_0 as food type that is nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3687	what is the number of restaurants with a rating that 's less than NUMBER_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
3688	show the name of reviews with rating larger than NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3689	which restaurants are rated NUMBER_0 stars and earn no less than NUMBER_1 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_1 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
3690	how far away is the restaurants with state equal to GENERIC_ENTITY_tt:us_state_0 with the biggest number of reviews from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) ) => notify
3691	what are restaurants with state equivalent to GENERIC_ENTITY_tt:us_state_0 and NUMBER_0 or more review count	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
3692	what is the current address of restaurants with NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3693	tell me the price range of a QUOTED_STRING_0 restaurant that 's farthest from my house .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3694	tell me which street restaurants with a greater review count than 1 and the smallest number of reviews are on	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) [ 1 ] ) => notify
3695	list restaurant with food type equal to QUOTED_STRING_0 and state equal to GENERIC_ENTITY_tt:us_state_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3696	i would like to know the location and type of food served at the closest QUOTED_STRING_0 restaurant .	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3697	please tell me how many reviews there are for a restaurant with a rating below 1 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
3698	show me the QUOTED_STRING_0 restaurants as a list and email equivalent to the minimum score at home .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
3699	what restaurant with a minimum score of NUMBER_0 and a description equivalent to QUOTED_STRING_0 will receive the maximum number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3700	what are the reviews of restaurants with NUMBER_0 reviews ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3701	tell me the street address of restaurants with at least 1 review .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
3702	which restaurants around me with telephone equal to PHONE_NUMBER_0 gets the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
3703	list restaurant having telephone equal to PHONE_NUMBER_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3704	show me a restaurant that has a NUMBER_0 or more review count and an address nearby work	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work => notify
3705	what review has the minimum rating out of those submitted by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with the summary that is QUOTED_STRING_0 ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3706	show me the rating of restaurants that have QUOTED_STRING_0 as summary	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
3707	tell me the country of restaurants near my house with the fewest reviews .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
3708	find the name of the country that has restaurants with a rating under 1	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
3709	how far away are the restaurant having country equal to GENERIC_ENTITY_tt:country_0 that is nearest to work from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
3710	which evaluations get date published before DATE_0 and is by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
3711	tell me the city of restaurants with ratings below NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
3712	get restaurants containing QUOTED_STRING_0 as description that offer QUOTED_STRING_1 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3713	get a review that has a rating under NUMBER_0 and that was published prior to DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
3714	which review get author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 and later date of publication than DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
3715	fetch restaurant having description being QUOTED_STRING_0 and QUOTED_STRING_1 as cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3716	show me what is the postal code of restaurant with QUOTED_STRING_0 as served cuisine .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3717	which restaurant with a QUOTED_STRING_0 menu and more than NUMBER_0 reviews has the worst rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3718	show me street addresses of restaurants near here .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3719	what zip code does the restaurant with a QUOTED_STRING_0 id have ?	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
3720	what is the state of the restaurant with QUOTED_STRING_0 as postal code with the biggest amount of reviews	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
3721	what is the restaurant near work with more than NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) => notify
3722	alert me what 's the price range of the restaurant having greater rating than NUMBER_0 closest to home	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3723	find a restaurant with this phone number PHONE_NUMBER_0 in this area	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3724	which restaurants are the furthest which also have a review count equal to NUMBER_0 and the lowest number of reviews from my current location ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) ) => notify
3725	which restaurants serve food that is QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3726	which are the restaurants that have a review count equal to NUMBER_0 and have the largest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] => notify
3727	give me all restaurants rated higher than NUMBER_0 with QUOTED_STRING_0 in summary .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3728	i would like to know what the restaurant is that has a telephone number that equals PHONE_NUMBER_0 and that is in this area .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3729	what is the price range of the restaurant with cuisine being QUOTED_STRING_0 that is furthest from home ?	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3730	what 's the current position of the dining locales with QUOTED_STRING_0 that is in explanation closest to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3731	what restaurant described as QUOTED_STRING_0 and served QUOTED_STRING_1 cuisine has the highest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3732	display for me the range of prices of the restaurants most near to home that have the word QUOTED_STRING_0 in the description .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3733	show me the restaurant with exactly NUMBER_0 reviews and whose address is here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
3734	i would like to see reviews for restaurants that offer QUOTED_STRING_0 food type and whose summaries have QUOTED_STRING_1 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3735	gather the farthest restaurants having no reviews	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
3736	find restaurants in GENERIC_ENTITY_tt:country_0 that are nearby	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
3737	how close is the restaurants with 0 reviews which is most far away from work to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
3738	reveal what 's the rating and country of the restaurant that offer QUOTED_STRING_0 cuisine most far away in distiction to work	now => [ param:address.addressCountry:Entity(tt:country) , param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3739	i need reviews published before DATE_0 that were published by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
3740	i need to find the closest restaurant to my home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
3741	how close to work are those restaurants which are located in the LOCATION_0 city area ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
3742	which is the restaurant having lower rating than NUMBER_0 which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
3743	for restaurants that have a count of reviews of under NUMBER_0 , tell me the street address .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3744	can you tell me the name of the reviews that are rated highest ?	now => ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
3745	grab the food type of restaurant with QUOTED_STRING_0 as postal code	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
3746	what is the total review count of the QUOTED_STRING_0 restaurants that is closest to work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3747	reveal dining locations here with NUMBER_0 or having less number of evaluations	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
3748	out of restaurants with less than NUMBER_0 reviews , what 's the furthest from my location .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3749	get the most far away restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] => notify
3750	what is the telephone of the restaurants which has the largest rating	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
3751	find the reviews of the restaurant near here with the phone number PHONE_NUMBER_0 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
3752	what are QUOTED_STRING_0 restaurant in this area with postal code equivalent to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3753	which restaurant is closest to work that has a rating of under 1	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] => notify
3754	count the reviews for restaurants in QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
3755	tell me how many restaurant reviews closest to here have the PHONE_NUMBER_0 phone number .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
3756	what is the country of local restaurants	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3757	find the restaurant in GENERIC_ENTITY_tt:us_state_0 closest to here and give me its rating and telephone	now => [ param:aggregateRating.ratingValue:Number , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
3758	for the restaurant whose phone number is equal to PHONE_NUMBER_0 that is closest to here how many reviews does it have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
3759	show me QUOTED_STRING_0 restaurants with a home location .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3760	get the state of restaurants having NUMBER_0 reviews	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3761	give me the name of a QUOTED_STRING_0 restaurant offering a QUOTED_STRING_1 selection , please .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3762	pull up restaurants having QUOTED_STRING_0 in the postal code and address equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
3763	bring up restaurant which offer QUOTED_STRING_0 cuisine , with description being QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3764	find the distance from work of restaurant with city containing LOCATION_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
3765	tell me restaurant descriptions that have NUMBER_0 reviews at maximum .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3766	say what is the name of the dining places with cuisine being QUOTED_STRING_0 with the greatest count of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3767	which restaurant having description being QUOTED_STRING_0 and served food type being QUOTED_STRING_1 has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3768	what is the zip code of restaurants at work	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
3769	say the number to QUOTED_STRING_0 restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3770	how far away is the restaurants with no reviews which is most far away from work to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
3771	alert me the address of the most distant restaurant with number of evaluations less than NUMBER_0 in distiction to here	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3772	tell me where the nearest restaurants at work are to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
3773	i would like to see which restaurants have QUOTED_STRING_0 as their cuisine and whose address equals here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3774	what are restaurants that have QUOTED_STRING_0 in the postal code and location is close to work with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
3775	which are the restaurant that has reviews which was made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) } => notify
3776	find the restaurants with rating lower than NUMBER_0 which is nearest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3777	find restaurant ratings with a review count of exactly NUMBER_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
3778	what is the current name of the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
3779	what are reviews having author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 in restaurant having review count greater than NUMBER_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3780	tell me the restaurant having postal code being QUOTED_STRING_0 and summary being QUOTED_STRING_1 which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
3781	show me restaurants with country equal to GENERIC_ENTITY_tt:country_0 and postal code equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
3782	what cities are the restaurants with at least NUMBER_0 reviews in ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3783	share the zip code with me of the restaurant that is located here	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3784	show me the restaurants with a review count lower than NUMBER_0 serving QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3785	text me what is the distance from work of restaurant having rating lower than NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) => notify
3786	show the rating of restaurants with id equal to QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
3787	i would like to know for the restaurants that offer QUOTED_STRING_0 food what their price range is .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3788	enumerate restaurants around home containing QUOTED_STRING_0 as summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
3789	say what is the review number of dining places near home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
3790	get evaluations made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
3791	which restaurant in here that has QUOTED_STRING_0 gets the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3792	how many restaurant reviews scored NUMBER_0 star most far from work ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
3793	which are the restaurant having no fewer than NUMBER_0 reviews and location equivalent to work .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:work => notify
3794	where is the restaurants in GENERIC_ENTITY_tt:country_0 with the highest amount of reviews	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) => notify
3795	i 'm looking for what date reviews with a rating of greater than NUMBER_0 were published	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) => notify
3796	get me the cuisine of restaurant having review count more than NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3797	what restaurants with a PHONE_NUMBER_0 phone number have a QUOTED_STRING_0 menu ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3798	fetch me the descriptions of restaurant having at most NUMBER_0 reviews .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3799	show me restaurants here with NUMBER_0 or less review count .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
3800	can you tell me how far are the restaurant having country equal to GENERIC_ENTITY_tt:country_0 which is nearest to home from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
3801	get me the restaurants with at most NUMBER_0 reviews which is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3802	get me what is the city of the restaurants having QUOTED_STRING_0 as food type most far away from work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3803	please show me reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that were published after DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
3804	give me the restaurants that have under NUMBER_0 reviews and whose location is equal to work .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:work => notify
3805	what is the price range of restaurants that have 1 review ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
3806	get me the rating of the restaurants with rating more than 1 with the smallest number of reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] ) => notify
3807	seek restaurant in this area with smaller rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
3808	what is the cuisine type and description of the restaurant with cuisine equal to QUOTED_STRING_0 closest to work ?	now => [ param:description:String , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3809	seek the restaurant with review count larger than NUMBER_0 which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
3810	which restaurant having review count not more than NUMBER_0 and QUOTED_STRING_0 as summary gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3811	look for restaurants that contain QUOTED_STRING_0 in the description and are located here with the tiniest review account	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
3812	tell me restaurants farthest away from home with more than NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3813	how many miles from work is the restaurant with a rating under NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) => notify
3814	please come up with a list of reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that have QUOTED_STRING_0 as the overview .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
3815	tell me how close restaurants with one reviews are from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) => notify
3816	how are restaurants with a less than NUMBER_0 review count described ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3817	what are the restaurants with no fewer than NUMBER_0 reviews and lower review count than NUMBER_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.reviewCount:Number <= NUMBER_1 => notify
3818	speak the number of reviews in restaurants having description being QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
3819	show me the restaurants that serve QUOTED_STRING_0 cuisine , are rated less than NUMBER_0 stars , and have the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3820	what are the restaurant with cuisine being QUOTED_STRING_0 and review count larger than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3821	find restaurant having QUOTED_STRING_0 as description and number of evaluations not more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3822	which is the reviews having summary being QUOTED_STRING_0 with the largest rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3823	search for QUOTED_STRING_0 cuisine that has received a low number of reviews that are also each NUMBER_0 star ratings or lower .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3824	which is the restaurant here having food type being QUOTED_STRING_0 which has the smallest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3825	in what state are restaurants offering QUOTED_STRING_0 dishes ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3826	inform me of the zip code of restaurants is that has less than 1 review .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
3827	how many review having author equivalent to GENERIC_ENTITY_org.schema.Restaurant:Person_0 are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
3828	get restaurant having greater review count than NUMBER_0 which serves QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3829	what restaurants are near here that have QUOTED_STRING_0 cuisine with a minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3830	find me the restaurants with a number of reviews equal to NUMBER_0 and whose phone number is equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3831	search restaurant having rating not higher than NUMBER_0 and food type equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3832	for the restaurant that has postal code of QUOTED_STRING_0 that is the greatest distance from here tell me the number of reviews it has .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3833	find the description of restaurant having more review count than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3834	let me know which restaurant has under NUMBER_0 reviews and a postal code that is equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
3835	present the nearest restaurant to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
3836	what kind of price range does one find in LOCATION_0 city restaurants ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
3837	where is the restaurant around home having QUOTED_STRING_0 in the food type .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3838	bring up reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with a rating equal to or over NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3839	what street is the restaurant that 's rated less than NUMBER_0 and is the most miles away from here found on ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3840	get reviews of restaurants that have more than NUMBER_0 reviews that are located near work .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3841	tell me the zip code of the restaurant that is here	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3842	which are restaurants with rating at lowest NUMBER_0 which serves QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3843	text me the most far away restaurant having rating equal to 1 from here .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
3844	what is the restaurant with a PHONE_NUMBER_0 phone number and a QUOTED_STRING_0 description that has the least number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
3845	retrieve restaurant with served cuisine equal to QUOTED_STRING_0 and NUMBER_0 or greater rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3846	seek the farthest restaurants having no reviews	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
3847	what 's both the cuisine and number of evaluations of the dining locales with food type being QUOTED_STRING_0 that is closest to here	now => [ param:aggregateRating.reviewCount:Number , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3848	get reviews with rating equal to NUMBER_0 are there	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
3849	show me the restaurant having QUOTED_STRING_0 in the zip code with the most reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3850	seek restaurants having phone number equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3851	find a restaurant with the fewest reviews that 's rated lower than NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
3852	can you tell me the restaurants with location equal to work which is most far away from work ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
3853	what are the places to eat that have a location that is home and that also serves QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3854	of restaurants with QUOTED_STRING_0 cuisine , which has the most reviews and the phone number PHONE_NUMBER_0 ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
3855	show me the restaurant having QUOTED_STRING_0 in the postal code and address equal to home with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
3856	for the restaurants nearest here with a rating no less than NUMBER_0 , what food type is served ?	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3857	where is the location of restaurants with 1 review .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) [ 1 ] ) => notify
3858	which QUOTED_STRING_0 restaurant has the highest review count and a rating greater than NUMBER_0 ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3859	grab reviews having rating more than 1 for restaurants with NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3860	where is the restaurants near here that have a rating of under NUMBER_0 .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3861	find restaurants in GENERIC_ENTITY_tt:country_0 that are under NUMBER_0 stars .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3862	find restaurants with QUOTED_STRING_0 food that are in the GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3863	find a restaurants with locations equal to work and that have under NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:work => notify
3864	how many current reviews do the restaurants with review count less than NUMBER_0 that is closest to here have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3865	what is the location of the QUOTED_STRING_0 restaurant with a minimum rating of NUMBER_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3866	what is the restaurant that has a count of reviews that equals NUMBER_0 is the greatest distance from here ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
3867	what are restaurants rated NUMBER_0 star having bigger review count than NUMBER_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
3868	tell me the amount of reviews the furthest restaurant in GENERIC_ENTITY_tt:us_state_0 from my location has .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
3869	show me what is the location of restaurants with no reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
3870	show me restaurants that have a description QUOTED_STRING_0 and a phone number of PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
3871	describe the types of restaurants that are near work .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
3872	show the price range of restaurant rated NUMBER_0 stars .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
3873	i want a zip code of a restaurant that has more than NUMBER_0 reviews	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
3874	i 'd like to know the restaurants with an QUOTED_STRING_0 zip code .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
3875	please list restaurants with food type equal to QUOTED_STRING_0 and rating not more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3876	alert me what 's the current position of dining locales with no evaluations	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
3877	give the the restaurant that serves QUOTED_STRING_0 food and is the highest rated .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3878	at my location , tell me how many reviews the restaurants with reviews greater than 1 star have .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
3879	what are QUOTED_STRING_0 restaurants having address equivalent to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3880	find restaurants with a max review count and a rating of NUMBER_0 and above that are near work .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
3881	list restaurant having description being QUOTED_STRING_0 and QUOTED_STRING_1 in the cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3882	help me locate restaurants that are in GENERIC_ENTITY_tt:us_state_0 and in close proximity to work .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) => notify
3883	message me the city of restaurant with QUOTED_STRING_0 as served cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3884	where is the restaurants with rating equal to NUMBER_0 which is nearest to home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
3885	what is the food type of restaurant close to home .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
3886	alert me what 's the current position of restaurant with locale equal to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
3887	what restaurants are farthest and have no reviews	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
3888	take a restaurant serving QUOTED_STRING_0 cuisine with less than NUMBER_0 stars .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3889	how far are the restaurant having less than than 1 evaluations with the most reviews in distiction to here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) ) => notify
3890	what restaurant near me has the biggest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
3891	search the distance from work of restaurant with city containing LOCATION_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
3892	retrieve the price range of the eatery that has more than NUMBER_0 review count that is the nearest to home	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3893	what restaurants are in this area and are graded NUMBER_0 stars ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
3894	what is both the rating and name of the most far away restaurants which sell QUOTED_STRING_0 food from here ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3895	give me restaurants with a rating of not more than NUMBER_0 and an address equal to my work	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
3896	get me the distance of restaurant with telephone equal to PHONE_NUMBER_0 from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
3897	what are restaurants having QUOTED_STRING_0 as description and review count larger than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3898	what is the QUOTED_STRING_0 restaurant with the postal code of QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3899	what is the street of the restaurant with food type being QUOTED_STRING_0 that is farthest away from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3900	tell me a restaurant town with QUOTED_STRING_0 in the kitchen	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3901	find me the review count of restaurants with a telephone number that is PHONE_NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
3902	tell me the dates that the reviews with a rating lower than NUMBER_0 were published on .	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
3903	get me the state of restaurants having QUOTED_STRING_0 in the zip code .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
3904	find the highest rated QUOTED_STRING_0 restaurants with a nearby location .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
3905	i want to know how many reviews restaurant has that has under one review	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
3906	i 'd like to know of the restaurants closest to me that have a rating of NUMBER_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
3907	which are the restaurant that serves QUOTED_STRING_0 cuisine and having state equivalent to GENERIC_ENTITY_tt:us_state_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3908	which dining locations around home with QUOTED_STRING_0 that is in food type having the minimum number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3909	of restaurants with less than NUMBER_0 reviews , tell me the country .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
3910	show me the restaurants that serve both QUOTED_STRING_0 and QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3911	fetch me restaurant with NUMBER_0 or lower rating which offers QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3912	what are QUOTED_STRING_0 restaurant having fewer review count than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3913	i 'm looking for review counts of restaurants with a review count of NUMBER_0 at most	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3914	of restaurants with QUOTED_STRING_0 in their description , which is the furthest away ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3915	which is the dining locations with served cuisine being QUOTED_STRING_0 and smaller rating than NUMBER_0 with the maximum number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3916	what is the restaurant serving QUOTED_STRING_0 cuisine and the QUOTED_STRING_1 postal code ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3917	what 's the name of a restaurant in GENERIC_ENTITY_tt:country_0 .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
3918	what restaurants have a rating of NUMBER_0 or more and serve QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3919	where is the restaurants having phone number equal to PHONE_NUMBER_0 with the biggest amount of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] ) => notify
3920	which are reviews in restaurants with grander rating than NUMBER_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3921	find me restaurants close to here that serve QUOTED_STRING_0 with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3922	tell me how close the restaurants where close to i work that have the largest number of reviews to my home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) ) => notify
3923	find restaurants that have maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
3924	list all restaurants with a NUMBER_0 or higher rating that have QUOTED_STRING_0 as the summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
3925	look for QUOTED_STRING_0 restaurants rated under NUMBER_0 that have the least reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3926	i would like to see the food type for restaurants that have a rating under NUMBER_0 and that are nearest to home .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3927	find those restaurants nearest to home with QUOTED_STRING_0 in their descriptions .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3928	find the restaurant with a NUMBER_0 or higher rating that 's been given NUMBER_1 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:aggregateRating.reviewCount:Number == NUMBER_1 => notify
3929	message me the country of restaurant in LOCATION_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
3930	show me the furthest closest restaurant with a zip code of QUOTED_STRING_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
3931	get restaurants having at least 1 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
3932	i would like to see restaurants with NUMBER_0 reviews at most that are the least distance to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
3933	look at restaurants with upwards of NUMBER_0 reviews , and get me the rating of the one that is nearest to me .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3934	what are the total review of restaurants having description being QUOTED_STRING_0 and review count higher than NUMBER_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3935	what are the total reviews for restaurant having description being QUOTED_STRING_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3936	grab the telephone of restaurant with review count less than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3937	which are the restaurant having address equal to home which offer QUOTED_STRING_0 food type	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3938	what is the current review count of the restaurant having postal code containing QUOTED_STRING_0 with the most reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
3939	show me the restaurants rated with a NUMBER_0 that have an QUOTED_STRING_0 menu .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3940	seek the restaurants with review count not more than NUMBER_0 and location equal to here which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
3941	seek for me the country of the restaurants with fewer rating than NUMBER_0 most far away from here	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3942	show me what is the street of restaurant having rating not higher than NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
3943	tell me the location of the farthest restaurants from work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
3944	list food restaurant of the same kind as QUOTED_STRING_0 and GENERIC_ENTITY_tt:us_state_0 state	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3945	what is the address of a restaurant located near me	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3946	get restaurants in here having served food type equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3947	tell me the street of the restaurants with a review count of less than NUMBER_0 that are closest to work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3948	find a restaurant that serves QUOTED_STRING_0 cuisine and has a review account of exactly NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3949	what reviews is by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and have NUMBER_0 or greater rating .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3950	name the person who authored the review with the lowest rating .	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
3951	how far away is the closest restaurant to GENERIC_ENTITY_tt:us_state_0 from my work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
3952	get me the food type of the restaurant with review count less than NUMBER_0 with the smallest count of reviews	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
3953	how many reviews does the restaurants having fewer than NUMBER_0 reviews that is farthest away from home have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3954	seek the rating of restaurant with review count less than 1 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
3955	state what is the name of restaurant with at least 1 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
3956	please identify a QUOTED_STRING_0 restaurant with QUOTED_STRING_1 in the description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3957	what 's the location of restaurants with over NUMBER_0 reviews and a phone number of PHONE_NUMBER_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
3958	which are the reviews having later date published than DATE_0 in restaurants with review count equivalent to 1 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3959	tell me the telephone number for a restaurant that 's got a review count that 's below NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
3960	show me reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that are a rating of NUMBER_0 stars	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
3961	what type of cuisine does the restaurant have with QUOTED_STRING_0 in the description and is also the farthest from home ?	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
3962	which are restaurant having state equal to GENERIC_ENTITY_tt:us_state_0 and review count equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
3963	between work and home , list the closest restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
3964	find the restaurant that sells QUOTED_STRING_0 food that is in the QUOTED_STRING_1 zip code	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3965	give me a listing of restaurants with more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
3966	i need feedback from GENERIC_ENTITY_org.schema.Restaurant:Person_0 with a score of NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
3967	tell me the restaurant with the largest distance from home that has QUOTED_STRING_0 in the zip code .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
3968	say the current rating of restaurants around here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
3969	tell me the review that has a higher rating than NUMBER_0 and whose description is equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
3970	what are several restaurants around home that have QUOTED_STRING_0 as a summary that have the biggest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
3971	show me restaurant reviews that have less than NUMBER_0 review count and also the least amount of reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
3972	grab the city of the restaurant with review count less than NUMBER_0 closest to here	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
3973	get evaluations having summary being QUOTED_STRING_0 and rating equal to NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
3974	look for the restaurant in closest proximity to work with a location the same as here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
3975	find QUOTED_STRING_0 restaurants that have a NUMBER_0 or higher for a rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3976	find a restaurants near work with QUOTED_STRING_0 in the summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
3977	what reviews are there for restaurants that have more than NUMBER_0 reviews total and are located nearby my office ?	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
3978	how many reviews in total the the closest restaurant to home with have with more than NUMBER_0 reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
3979	collect the restaurants having at least NUMBER_0 reviews with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
3980	enumerate QUOTED_STRING_0 dining locations with the same address to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3981	what are the restaurant having QUOTED_STRING_0 in the postal code and QUOTED_STRING_1 in the cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
3982	text me the number of reviews in restaurant having rating lower than 1	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
3983	i want to know the street address of the restaurant with a zip code of QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
3984	what are the restaurants with less than NUMBER_0 reviews and address equal to here	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:current_location => notify
3985	find places near my job with a rating of lower than NUMBER_0 with the fewest reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) ) => notify
3986	display for me what is the telephone of restaurant having rating equivalent to NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
3987	get the price range of restaurants with QUOTED_STRING_0 as food type .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3988	find the QUOTED_STRING_0 restaurant with the max review count that is nearby .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3989	i want to know which city the restaurant with the phone number PHONE_NUMBER_0 is in .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
3990	what is the restaurant with the smallest number of reviews serving QUOTED_STRING_0 food ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3991	fetch the rating of restaurant that is QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
3992	show me restaurants with a NUMBER_0 star rating who have a bigger review count than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
3993	enumerate restaurants with the same address as QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
3994	show restaurants with rating at least at NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
3995	tell me the restaurant that has more than NUMBER_0 reviews and that has QUOTED_STRING_0 as summary and that gets the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
3996	show me the restaurants with QUOTED_STRING_0 as summary and address equal to home with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
3997	which restaurants with review count not more than NUMBER_0 and location equivalent to here gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
3998	get the distance to restaurants having review count equivalent to NUMBER_0 from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
3999	get evaluations with rating more than NUMBER_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
4000	how many total restaurants having at least NUMBER_0 reviews are there	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4001	show me the furthest restaurant to here with postal code QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4002	display to me what is the location of restaurants having QUOTED_STRING_0 in the descriptions	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4003	find a QUOTED_STRING_0 restaurant that has more than NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4004	get me what is the review count of restaurants having review count higher than NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4005	how many total reviews are there in the restaurant rated 1 star that is nearest to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] ) => notify
4006	out of the restaurants with the most reviews with post code QUOTED_STRING_0 how many are there .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4007	how far away is the NUMBER_0 star restaurant from my house ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
4008	display restaurants with under NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4009	retrieve the restaurant having QUOTED_STRING_0 in the food type and location equal to work which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4010	find review created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having earlier date published than DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
4011	find me NUMBER_0 star restaurants that have QUOTED_STRING_0 on the menu	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4012	which restaurants with a home address and a QUOTED_STRING_0 summary have the worst rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
4013	tell me the restaurant name with a review count of exactly NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
4014	please find the reviews for restaurants with ratings of NUMBER_0 stars .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
4015	what are the highest rated restaurants nearby that have QUOTED_STRING_0 cuisine ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4016	how many reviews do restaurants with exactly NUMBER_0 reviews have that 's furthest from work .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
4017	which restaurant has the smallest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
4018	speak the rating of the restaurants with lower rating than NUMBER_0 with the most reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
4019	which restaurants near home have QUOTED_STRING_0 cuisine on the menu ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4020	show what is the name of restaurant with at minimum 1 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
4021	present for me the price range of restaurant having smaller review count than NUMBER_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
4022	tell me the restaurant with QUOTED_STRING_0 as QUOTED_STRING_1 definition and cuisine with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
4023	fetch review with NUMBER_0 or more rating .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
4024	of restaurants with the fewest reviews , which are in GENERIC_ENTITY_tt:country_0 ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4025	what are the QUOTED_STRING_0 restaurants with the best rating and a summary of QUOTED_STRING_1 ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4026	show reviews penned by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that have a description matching QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
4027	show me the price range of restaurant with the id that is QUOTED_STRING_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
4028	which restaurant has the fewest reviews and serves QUOTED_STRING_0 ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4029	what kind of reviews have restaurants with QUOTED_STRING_0 cuisine received ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4030	find restaurants with QUOTED_STRING_0 in the description that do not have more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4031	display for me the most far away restaurant having higher review count than NUMBER_0 from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
4032	fetch the restaurant with rating larger than NUMBER_0 which is most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
4033	how close are the restaurants with lower rating than 1 which is closest to work from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) ) => notify
4034	i want the number of reviews for food places near me .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4035	get the farthest restaurants having descriptions containing QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4036	grab for me what is the descriptions of restaurant in QUOTED_STRING_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
4037	what is the restaurant with the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
4038	what is the writer of the reviews which has the highest rating	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
4039	which restaurants get food type being that of QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4040	show me the phone number for restaurants with the postal code of QUOTED_STRING_0 that are the farthest away from work .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4041	show me review descriptions that have a rating of maximum NUMBER_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
4042	find the farthest restaurants with zero reviews	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
4043	i want to know the country and telephone number for restaurants close to here with the tiniest review count	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
4044	which is the highest-rated restaurant	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
4045	can you tell me with restaurants offer QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4046	tell me restaurants that have NUMBER_0 reviews that are the farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
4047	how many reviews in the restaurant rated NUMBER_0 star which is farthest away from work ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
4048	tell me the furthest country of under NUMBER_0 rated restaurants .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4049	which are restaurants having address equal to work and description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
4050	i 'd like the distance from the nearest restaurant to home from work with 1 review .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
4051	which state is the restaurant at PHONE_NUMBER_0 in	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4052	fetch the city of restaurant having greater rating than NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
4053	i 'd like to find a restaurant with a rating of over NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
4054	search for restaurants offering QUOTED_STRING_0 cuisine with QUOTED_STRING_1 definition .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4055	grab the food type of restaurants having at least NUMBER_0 reviews	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4056	show me the number of reviews for the restaurant with the telephone number PHONE_NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4057	what locations do you have for QUOTED_STRING_0 restaurants mentioning QUOTED_STRING_1 in their overview ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4058	grab the state of restaurants with review count less than NUMBER_0	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
4059	which restaurants with review count not higher than NUMBER_0 and location equal to here gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4060	find me restaurants with larger rating than NUMBER_0 and postal code of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
4061	find a restaurant in the zip code QUOTED_STRING_0 that has QUOTED_STRING_1 in the description and has a max review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
4062	find all QUOTED_STRING_0 food restaurants with a review containing QUOTED_STRING_1 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4063	find restaurants with a NUMBER_0 or bigger rating that have QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4064	i need restaurant containing description being QUOTED_STRING_0 which offer QUOTED_STRING_1 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
4065	find the best rated restaurant with at least NUMBER_0 reviews that has QUOTED_STRING_0 food	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4066	find me the coordinates of a place to eat that is NUMBER_0 stars .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
4067	what restaurant that is near by has a description of QUOTED_STRING_0 and the fewest reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4068	please output the names of QUOTED_STRING_0 restaurants with the most stars .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4069	i want to know which restaurants have QUOTED_STRING_0 cuisine available , the largest number of reviews and a rating of at least NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4070	which restaurant in this area having food type being QUOTED_STRING_0 gets the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4071	i 'd like to know the zip code of restaurant that has QUOTED_STRING_0 in the description	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4072	show me what is the location of restaurant having location equal to work .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4073	fetch me the distance of restaurant with telephone equal to PHONE_NUMBER_0 from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
4074	get the restaurant having food type containing QUOTED_STRING_0 farthest from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4075	what is the name and street of a restaurant that is nearby and that also has the smallest amount of reviews ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
4076	search for QUOTED_STRING_0 restaurants in the vicinity with the greatest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4077	get restaurants containing QUOTED_STRING_0 as description and review count not more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4078	what dining businesses get description being QUOTED_STRING_0 and telephone equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4079	what cuisine is served at the restaurants closest to here with a greater rating than NUMBER_0	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4080	get restaurant with cuisine being QUOTED_STRING_0 and QUOTED_STRING_1 as summary	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4081	what restaurant has a NUMBER_0 or higher rating and serves QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4082	what is the zip for the furthest restaurant from home .	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4083	i 'm looking to find a restaurant that 's QUOTED_STRING_0 and in my exact area .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4084	what is the number of restaurants that have maximum 1 review	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
4085	show me the picture and location of QUOTED_STRING_0 restaurants nearest work .	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4086	retrieve for me what is the country of restaurants having location equal to home	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
4087	give me every review that was published after DATE_0 and written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
4088	tell me the state of the restaurants farthest from me .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4089	what is the rating of the restaurants with the tiniest number of reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4090	say what is the telephone of the restaurants having description being QUOTED_STRING_0 with the biggest number of reviews .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4091	show me restaurants with a minimum rating of NUMBER_0 in the QUOTED_STRING_0 zip code .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
4092	how far from work is a restaurant with city containing LOCATION_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
4093	name the restaurants with under NUMBER_0 reviews that have no less than NUMBER_1 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_1 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4094	seek the restaurants having NUMBER_0 or greater rating and location equal to work which has the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
4095	get me the name of the restaurant which is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
4096	please find a review by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that mentions QUOTED_STRING_0 in the explanation .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
4097	i demand restaurant having greater rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
4098	which are the reviews posted in restaurants with a review count equal to 1 later than DATE_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4099	what is both the postal code and food type of restaurants with NUMBER_0 or lower rating and food type being QUOTED_STRING_0 .	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4100	give me what is the country of restaurant having id equal to QUOTED_STRING_0 .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
4101	where is the restaurant with the highest number of reviews equal to NUMBER_0	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) => notify
4102	what is the amount of restaurants with the location that is work	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4103	find a restaurant near here that serves the cuisine QUOTED_STRING_0 with the max rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4104	give me the description of a place that serves QUOTED_STRING_0 food .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4105	i need the restaurant that is rated under NUMBER_0 's image , and tell me the type of food it serves .	now => [ param:image:Entity(tt:picture) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4106	tell me the street names of restaurant with a lower than NUMBER_0 rating .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4107	what city is the restaurant in that has more than NUMBER_0 reviews with the smallest review count .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
4108	look for restaurants with an address equaling home that are rated NUMBER_0 or under .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home => notify
4109	fun restaurants that have QUOTED_STRING_0 cuisine with a rating of NUMBER_0 and over	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4110	look for restaurants containing review count at most NUMBER_0 and zip code QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4111	get me the image of the nearest restaurant with description being QUOTED_STRING_0	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4112	i 'd like to know the price range of restaurants with no reviews .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
4113	i 'd like to know the street address of a restaurant that has a location equaling here .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4114	which are the restaurants with review count not more than NUMBER_0 and QUOTED_STRING_0 in the cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4115	how close are the restaurants that 's furthest away from my home with the phone number of PHONE_NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4116	find the name of restaurant that has a review count above NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
4117	show me QUOTED_STRING_0 restaurants with the largest number of reviews .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4118	what restaurant have NUMBER_0 reviews and sells QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4119	how many restaurants having at minimum NUMBER_0 reviews are there	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4120	get reviews made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
4121	tell me restaurant ratings of places that have NUMBER_0 reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4122	get review brought about by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with date created before DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
4123	inform me of the zip code of a restaurant that has a rating higher than NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
4124	what city are the restaurants with a location equal to here in ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4125	show me restaurants in QUOTED_STRING_0 zip code nearest here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4126	show descriptions of restaurants with a bigger rating than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
4127	i need to see the food type of restaurant with QUOTED_STRING_0 as postal code .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
4128	what is the published date for the reviews with the highest rating	now => [ param:datePublished:Date ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
4129	i desire reviews having rating at most NUMBER_0 and greater rating than NUMBER_1 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
4130	please bring up the most low rated QUOTED_STRING_0 restaurants .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4131	grab the farthest restaurants having descriptions containing QUOTED_STRING_0 from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4132	what is both the food type and price range of the restaurants with location equal to home with the smallest number of reviews ?	now => [ param:priceRange:String , param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
4133	which restaurant has the greatest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
4134	show me all the restaurants that are QUOTED_STRING_0 and have a rating of under NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4135	show me the postal code of a restaurant with QUOTED_STRING_0 as offered cuisine	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4136	find the farthest away restaurant from here that has a rating of 1	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
4137	for the restaurant with a rating above NUMBER_0 , which one is farthest from home ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4138	what is the served food type and postal code of restaurant with NUMBER_0 or lower rating and location equal to work .	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work ) => notify
4139	i would like to know the street address for restaurants that have 1 review or more .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
4140	let me know the address of the restaurant that has a rating of NUMBER_0 or under .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4141	speak the name of the city that the restaurant closest to here with less than NUMBER_0 reviews is in .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4142	get the evaluations of the dining business near home with the highest number of reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
4143	what are the dining locales with having less number of evaluations than NUMBER_0 and food type being QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4144	find the LOCATION_0 restaurant that is farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) ) [ 1 ] => notify
4145	what restaurants with reviews numbering NUMBER_0 or below are in the vicinity of work ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:work => notify
4146	what restaurant is nearest to home and has a review count lower than NUMBER_0 ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
4147	what 's the restaurant 's nearest postal code ?	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4148	look for QUOTED_STRING_0 restaurants close to work	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4149	how far away are NUMBER_0 star restaurants from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
4150	how many total reviews in the restaurant rated NUMBER_0 star with the largest number of reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) [ 1 ] ) => notify
4151	get me what is the street address of restaurant with NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4152	what are reviews for LOCATION_0 restaurants	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
4153	which restaurants having QUOTED_STRING_0 as description and address equivalent to here gets the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4154	find restaurants with the phone number PHONE_NUMBER_0 and QUOTED_STRING_0 in the description	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4155	find restaurants in here having served cuisine equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4156	text me what is the number of reviews of QUOTED_STRING_0 restaurants	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4157	what are restaurant by me having QUOTED_STRING_0 in the cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4158	what 's the explanation of the nearest dining locations with rating lower than NUMBER_0 to work ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4159	i 'd like to know the price range of restaurant that has 1 review	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
4160	how far away are the restaurants having fewer than NUMBER_0 reviews that is most far away from home from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4161	which restaurant has more than NUMBER_0 reviews and a QUOTED_STRING_0 summary ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4162	display me restaurants with NUMBER_0 or less rating numbers here	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
4163	find reviews submitted by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
4164	what restaurants have QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4165	find for me the restaurants that serve the food type of QUOTED_STRING_0 and the maximum number of reviews and that have a postal code of QUOTED_STRING_1 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4166	tell me how close the restaurants are with greater than 1 review nearest to here to home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) ) => notify
4167	present to me what is the city of the restaurants having QUOTED_STRING_0 as food type most far away from work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4168	which are reviews having rating the same to NUMBER_0 for restaurants with QUOTED_STRING_0 in the description .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4169	the restaurants that have NUMBER_0 reviews and are the greatest distance from here are how close to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4170	get me the location of the QUOTED_STRING_0 restaurant with the best rating .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4171	show me restaurants with a location of work that is farthest from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
4172	how many reviews are there for the restaurant that has the phone number PHONE_NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4173	give me a review created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with the summary that is QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
4174	review scored NUMBER_0 star restaurants with QUOTED_STRING_0 food type .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4175	what is the name and street of the closest restaurant which also has the lowest number of reviews ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
4176	show me the review for NUMBER_0 star restaurants .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4177	give the the number of reviews that the QUOTED_STRING_0 restaurant closest to work has .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4178	get me the image of the nearest restaurants with postal code containing QUOTED_STRING_0 to work	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4179	i need the street of the closest restaurants to me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4180	i want to know the restaurants ' rating with postal code containing QUOTED_STRING_0 that is closest to this location .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4181	give me restaurants with country equivalent to GENERIC_ENTITY_tt:country_0 and address equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:home => notify
4182	i want the review count for all restaurants that have the word QUOTED_STRING_0 in their descriptions .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4183	what is the city of the restaurant that is nearest to home ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4184	what 's the location of the nearest restaurant .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4185	let me know what the rating is for a restaurant that has reviews numbering NUMBER_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4186	show me the farthest restaurant to me that have more than 1 review .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
4187	show me restaurants that are furthest from work that have at least NUMBER_0 reviews	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
4188	look for a restaurant around home with a review count of NUMBER_0 and over	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
4189	what type of cuisine does a restaurant with the phone number PHONE_NUMBER_0 serve ?	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4190	how many reviews does the restaurant with the zip QUOTED_STRING_0 that is the furthest from home .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4191	tell me the description of reviews of higher than NUMBER_0 rated restaurants .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) => notify
4192	show me the location and street of restaurants with less than NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
4193	for restaurants with NUMBER_0 reviews i would like to view the reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4194	fetch review submitted by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having earlier date published than DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
4195	what are the reviews for the NUMBER_0 star rated restaurant ?	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4196	what is the restaurant picture of less than NUMBER_0 count	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
4197	enumerate restaurant having description equal to QUOTED_STRING_0 and bigger rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4198	how far from home are restaurants with a PHONE_NUMBER_0 phone number ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
4199	please tell me the zip code of a restaurant with a rating below NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4200	what restaurants that have review counts of NUMBER_0 or under and have QUOTED_STRING_0 as the cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4201	tell me the distance from home for restaurants that have a phone number equal to PHONE_NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
4202	tell me the food type of the restaurant that has QUOTED_STRING_0 as the postal code .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
4203	where is the location of restaurants in this area	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4204	say what is the cuisine of the nearest restaurants to here	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4205	what are the dining locales with less than than NUMBER_0 evaluations and address equal to here	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:current_location => notify
4206	present the restaurant with rating at minimum NUMBER_0 and summary equal to QUOTED_STRING_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4207	show me review descriptions with a rating of exactly 1	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == 1 ) => notify
4208	tell me which country restaurants close to home with the smallest amount of reviews are in	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
4209	i like to know where the restaurant that is rated NUMBER_0 stars is located	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
4210	get restaurants around work having NUMBER_0 or smaller review count .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:work => notify
4211	find restaurants that serve QUOTED_STRING_0 and that have QUOTED_STRING_1 in the description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4212	what are critiques by GENERIC_ENTITY_org.schema.Restaurant:Person_0 rated NUMBER_0 star .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
4213	fetch the QUOTED_STRING_0 restaurants nearest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4214	what is the telephone of restaurants with larger rating than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
4215	i would like to know what restaurants with a review count that is the maximum and a NUMBER_0 or lower rating .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4216	i want the ratings for restaurants with QUOTED_STRING_0 in summary	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4217	retrieve the dining locations with QUOTED_STRING_0 as summary and country equal to GENERIC_ENTITY_tt:country_0 with the tiniest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4218	show me what is the city of restaurants here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4219	please get restaurants having phone number equal to PHONE_NUMBER_0 and review count higher than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4220	let me know what restaurant serves QUOTED_STRING_0 in this neighborhood .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
4221	which QUOTED_STRING_0 cuisine restaurants are located in the QUOTED_STRING_1 postal code ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4222	show the restaurant by work with the fewest reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] => notify
4223	tell me which city the restaurant with the phone number PHONE_NUMBER_0 is in .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4224	can you tell me the country for the restaurants closest to work that have QUOTED_STRING_0 as the postal code ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4225	send me comments with a summary of QUOTED_STRING_0 and NUMBER_0 or less	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
4226	i 'd like to know how many restaurants with a zip code of QUOTED_STRING_0 there are .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
4227	itemize the restaurants that feature QUOTED_STRING_0 cuisine and boast in excess of NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4228	get me the restaurants with QUOTED_STRING_0 as summary and address equal to home with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
4229	which is the restaurant nearby rated NUMBER_0 star with the biggest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4230	i would like to know the restaurant that has QUOTED_STRING_0 cuisine and whose state is GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4231	text me restaurants in GENERIC_ENTITY_tt:country_0 with served cuisine being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4232	show the rating of restaurants having at minimum NUMBER_0 reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4233	list and number restaurants around me that have a NUMBER_0 star rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
4234	name the restaurants in the vicinity of work with a QUOTED_STRING_0 summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
4235	how many reviews are there in the restaurant with at least NUMBER_0 reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4236	what are the highest rated restaurants around me ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
4237	what is the name of the restaurants with QUOTED_STRING_0 as postal code closest to here ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4238	i am looking for a restaurant that has more than NUMBER_0 reviews and want to see the rating	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4239	how many reviews do QUOTED_STRING_0 restaurants have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4240	what is the description of the nearest restaurants with rating smaller than NUMBER_0 to work ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4241	which dining locations here with QUOTED_STRING_0 as description having the highest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4242	where are the GENERIC_ENTITY_tt:country_0 restaurants that 's furthest from me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) => notify
4243	bring up restaurants which are QUOTED_STRING_0 and having NUMBER_0 or lower rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4244	what is the rating of the most far away restaurants with smaller review count than NUMBER_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4245	how many total reviews in the restaurant with more review count than 1 that is farthest from home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
4246	find a place to eat near my house that has NUMBER_0 or less reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:home => notify
4247	show me the city of the restaurants that have QUOTED_STRING_0 cuisine that 's furthest away from work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4248	for the restaurant that is rated at the minimum level present to me its description .	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4249	what city has restaurants with NUMBER_0 reviews ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4250	find the closest restaurant to me and tell me the street .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4251	which restaurant having review count larger than NUMBER_0 and QUOTED_STRING_0 as description has the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4252	get me the restaurant that is located in postal code QUOTED_STRING_0 and serves QUOTED_STRING_1 food , as it 's cuisine type .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
4253	grab the street address of restaurants with id equal to QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
4254	which are the dining locations near here that offers QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4255	what is the distance from here of restaurants near to here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
4256	show me the restaurant having QUOTED_STRING_0 as description and cuisine equal to QUOTED_STRING_1 which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
4257	search for QUOTED_STRING_0 restaurants that have a total NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4258	locate restaurants that have a description of QUOTED_STRING_0 and an address which equals home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
4259	what is the restaurants with review count fewer than NUMBER_0 with the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
4260	how close is the restaurants close to work with the biggest number of reviews to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) ) => notify
4261	what is the phone number of restaurants that have a location equaling work ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4262	show me reviews that have ratings of more than NUMBER_0 and were published later than DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
4263	what are dining locations rated NUMBER_0 star having greater number of evaluations than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
4264	how far are the restaurant with rating fewer than NUMBER_0 that is most far away from work from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4265	show me the cities in GENERIC_ENTITY_tt:us_state_0 with restaurants .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
4266	grab the restaurant with review count fewer than NUMBER_0 that is most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
4267	what is the QUOTED_STRING_0 food restaurant with the highest review count .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4268	fetch the restaurant in QUOTED_STRING_0 that is nearest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4269	show restaurants with NUMBER_0 plus reviews	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4270	i want restaurants with the same QUOTED_STRING_0 cuisine and the same location	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4271	tell me how many review that restaurants with NUMBER_0 reviews have that 's farthest from work .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
4272	text me restaurant in this area with summary being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
4273	please get restaurant with served cuisine equal to QUOTED_STRING_0 and review count equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4274	show QUOTED_STRING_0 restaurants descriptions that have the lowest rating .	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4275	what is the restaurants in this area with served food type being QUOTED_STRING_0 with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4276	find nearby restaurants with the postal code QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) => notify
4277	find reviews for restaurants that are close to my work and have NUMBER_0 reviews or more .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4278	how many reviews do the nearest restaurants with more than NUMBER_0 reviews to my house have .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4279	find a restaurant that has QUOTED_STRING_0 included in the description and that serves QUOTED_STRING_1 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
4280	i would like to know what the city of restaurant which serves QUOTED_STRING_0 is .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4281	what is the price range of the restaurant with the phone number PHONE_NUMBER_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4282	seek the most far away restaurants having lower rating than NUMBER_0 from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
4283	find the street of the most far away restaurant with rating lower than NUMBER_0 from here	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4284	tell the descriptions of review with rating equal to 1	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == 1 ) => notify
4285	what restaurant QUOTED_STRING_0 food provides and has a list of QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4286	get the restaurant having QUOTED_STRING_0 in the zip code with the most reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4287	show me reviews with a rating of NUMBER_0 or less written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
4288	show me the price range of restaurants having location equal to here	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4289	what is a QUOTED_STRING_0 restaurant with less than NUMBER_0 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4290	what 's the rating of the closest restaurants near me with more than NUMBER_0 reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4291	which restaurants around work having rating equal to NUMBER_0 gets the smallest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
4292	fetch the most far away restaurants having descriptions containing QUOTED_STRING_0 from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4293	find the distance from my home the restaurant with the smallest review count under NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) ) => notify
4294	i want to see reviews for all the restaurants that have QUOTED_STRING_0 in the description .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4295	say the rating of the dining locales with lower rating than NUMBER_0 with the most evaluations	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
4296	what 's the least reviewed restaurant in this location that has a QUOTED_STRING_0 description ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4297	search for the review with a publication date later than DATE_0 and a QUOTED_STRING_0 summary .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
4298	list restaurants close to home that serve QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4299	what restaurant has a summary of QUOTED_STRING_0 that is right by my house ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
4300	of restaurants with less than NUMBER_0 reviews , show me those in postal code QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4301	what NUMBER_0 star restaurants are closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
4302	which are dining locations having the same address to work and description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
4303	can you give me the phone numbers and countries of the places to eat near me right now that have the lowest number of reviews ?	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
4304	which is the restaurants containing QUOTED_STRING_0 in the postal code and QUOTED_STRING_1 as description which has the lowest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
4305	grab me the street of restaurant with location equal to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4306	gather me the street of the restaurants with fewer review count than NUMBER_0 that is farthest from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4307	what is the number of reviews in the restaurant with the biggest rating ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4308	look up a place with QUOTED_STRING_0 cuisine , and tell me the description of it .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4309	what reviews numbering above NUMBER_0 do you have for a restaurant that 's in direct proximity to work ?	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4310	what QUOTED_STRING_0 restaurants are located nearby that have the max number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4311	how near is the dining places with rating more than NUMBER_0 with the largest count of evaluations from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
4312	i 'd like to see reviews of restaurants that have higher than NUMBER_0 review count	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4313	how far away is the restaurant having no reviews closest to work to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
4314	grab the city of restaurants having review count equal to NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4315	show me the number of reviews of the restaurant farthest from my home that has more than one review	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
4316	fetch the restaurant with location equal to here which is nearest to heref	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
4317	do a search for the restaurant whose review count is under NUMBER_0 and is the greatest distance away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
4318	recover a restaurant with more than NUMBER_0 stars and a GENERIC_ENTITY_tt:us_state_0 state with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
4319	how near is the restaurants with state equal to GENERIC_ENTITY_tt:us_state_0 with the largest number of reviews from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) ) => notify
4320	which restaurants have a location equal to here to home ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
4321	what is the description of review having later date published than DATE_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) => notify
4322	what are the restaurants with an QUOTED_STRING_0 menu and a QUOTED_STRING_1 description ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4323	how many QUOTED_STRING_0 restaurants are there	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4324	which QUOTED_STRING_0 restaurants have received NUMBER_0 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4325	what amount of restaurants with QUOTED_STRING_0 as their code are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
4326	search the restaurant having description being QUOTED_STRING_0 and location equal to work which has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
4327	how close are the restaurants with more than 1 reviews nearest to here to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) ) => notify
4328	tell me the phone number of restaurants with QUOTED_STRING_0 in their description with the highest number of reviews .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4329	give me a tally of the restaurants with a location equal to home	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
4330	find a restaurant near home with the zip code QUOTED_STRING_0 and tell me its description .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4331	tell me the price range for restaurant that has city equal to LOCATION_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
4332	i want to see restaurants close to me that sell QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4333	what restaurant with QUOTED_STRING_0 in its description and a low review count is near here .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4334	tell me the cuisine and description of restaurants with QUOTED_STRING_0 food that 's nearest to the job .	now => [ param:description:String , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4335	get me the price range of restaurants having location equal to here	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4336	how far is restaurant with number of evaluations equal to NUMBER_0 in distiction to here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
4337	what is the description for NUMBER_0 and lower-rated restaurants ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4338	grab for me the state of restaurants having QUOTED_STRING_0 in the zip code .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
4339	let me know the street address of those restaurants that have a location equivalent to work .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4340	get what is the description of restaurants near work	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4341	how far is it from home to those restaurants with a location equaling work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
4342	find restaurants close to my work that are in the QUOTED_STRING_0 zip code and have the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
4343	get restaurant having state equal to GENERIC_ENTITY_tt:us_state_0 which offer QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4344	get me what is the food type of the restaurants with greater rating than NUMBER_0 closest to here .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4345	get me the phone number of places to eat with the best reviews	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4346	where is the restaurants having phone number equivalent to PHONE_NUMBER_0 with the most reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] ) => notify
4347	get the rating of restaurants with location equal to work .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4348	tell me which restaurants have under NUMBER_0 reviews and an address that is equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:current_location => notify
4349	need the range of prices for restaurants with the lowest number of reviews .	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4350	look for restaurants in the QUOTED_STRING_0 zip code that provide QUOTED_STRING_1 food and have the max rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
4351	look at restaurants with location work and see which one is the closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
4352	what is the current price range of the restaurant with cuisine being QUOTED_STRING_0 that is farthest from home ?	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4353	give me all reviews with a summary that includes QUOTED_STRING_0 and a review rating of more than NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
4354	find restaurants close to me in GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
4355	where is the restaurants with country equivalent to GENERIC_ENTITY_tt:country_0 that is farthest from home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) => notify
4356	which restaurants have less than NUMBER_0 reviews and a minimum of NUMBER_1 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_1 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4357	find a review published before DATE_0 that was written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
4358	find the QUOTED_STRING_0 restaurant with QUOTED_STRING_1 in description that has the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4359	say what 's the restaurant name with the largest number of reviews in this region	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
4360	what 's the distance to restaurants in the GENERIC_ENTITY_tt:country_0 closest to home from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
4361	which dining locations have country equal to GENERIC_ENTITY_tt:country_0 and zip code being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
4362	please set forth the NUMBER_0 star reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
4363	what is the review count of the QUOTED_STRING_0 restaurants that is nearest to work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4364	i am looking for the farthest restaurant that has at least NUMBER_0 reviews	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
4365	display for me what is the telephone of restaurants having review count equal to NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4366	tell me which country the restaurant is in that has work as the location .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4367	fetch the restaurants rated NUMBER_0 stars nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
4368	what are the names of the restaurants around here that sell QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4369	name the zip code of restaurants with at least 1 review	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
4370	tell me the rating that reviews have if their rating equals NUMBER_0 .	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
4371	what is the location of the restaurants with smaller rating than NUMBER_0 that is closest to here .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4372	how close is the restaurant around here with the smallest reviews to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
4373	i like to know the number of reviews from restaurants that have the phone number PHONE_NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4374	show me what is the country of restaurant around here .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4375	i want to see reviews authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0 of restaurants near home .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4376	display for me the city of restaurant with at least NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4377	what restaurant have served cuisine equivalent to QUOTED_STRING_0 and postal code containing QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4378	which restaurants have QUOTED_STRING_0 cuisine and under NUMBER_0 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4379	bring up reviews for restaurants around home that GENERIC_ENTITY_org.schema.Restaurant:Person_0 wrote .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4380	get me the reviews of restaurant having location equal to work	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4381	i 'd like to know the phone number of a restaurant closest to here with a zip code of QUOTED_STRING_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4382	what is the zip code of restaurant with a larger than NUMBER_0 rating .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
4383	find restaurant rated NUMBER_0 star having postal code equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
4384	get the reviews of restaurants having NUMBER_0 reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4385	show me which city restaurants close to me are in	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4386	get me what is the street of the restaurants with the maximum rating	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4387	tell me a restaurant located at work that is farthest from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
4388	get restaurants that has review having QUOTED_STRING_0 as description and NUMBER_0 or smaller rating	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:description:String =~ QUOTED_STRING_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) and param:reviewRating.ratingValue:Number <= NUMBER_0 } => notify
4389	i 'd like the name of a restaurant that has no less than 1 review .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
4390	find restaurants located in GENERIC_ENTITY_tt:us_state_0 that are in the vicinity of work .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) => notify
4391	what is the review count for the restaurant with the zip QUOTED_STRING_0 that is located the furthest from my house .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4392	look for restaurants that have a rating of at leat NUMBER_0 with QUOTED_STRING_0 in the summary and the greatest amount of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4393	where is the dining locales having phone number equal to PHONE_NUMBER_0 with the most evaluations	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] ) => notify
4394	where is the dining locations near here that serves QUOTED_STRING_0 cuisine	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4395	for restaurants that have received no reviews , what review count do they have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
4396	tell me the name of restaurant with at most NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4397	fetch review having author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
4398	i want to see restaurants with the fewest reviews with QUOTED_STRING_0 in the description .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4399	what 's the food type and city of the restaurant with lower rating than NUMBER_0 most distant in distiction to work	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4400	get the name of review with rating at most NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
4401	search the restaurant having description being QUOTED_STRING_0 and location equal to work which has the largest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
4402	which review is written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and get date published after DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
4403	i desire restaurants having postal code being QUOTED_STRING_0 which serves QUOTED_STRING_1 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
4404	grab the reviews of the furthest restaurant with a rating higher than NUMBER_0 from my work .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4405	can i see some reviews from a restaurant that has lees than NUMBER_0 reviews ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
4406	which are the restaurants that have got NUMBER_0 reviews and are in the closest proximity to work ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
4407	how far are those restaurants with a QUOTED_STRING_0 id ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) => notify
4408	how near is the nearest dining places rated NUMBER_0 star to work from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4409	what is the phone number for a restaurant with more than NUMBER_0 reviews	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4410	find out what country is the restaurant with the phone number PHONE_NUMBER_0 in	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4411	the restaurant with an id matching QUOTED_STRING_0 has what number as a zip code ?	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
4412	which restaurants have phone number equivalent to PHONE_NUMBER_0 and description equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4413	give me the rating of the closest restaurant to here .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4414	find all restaurants with QUOTED_STRING_0 in their summary and have a rating of at least NUMBER_0 with the max review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4415	for NUMBER_0 star restaurants , list the reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
4416	what rating has been given to those restaurants matching this location ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4417	tell me the restaurants with a rating of under NUMBER_0 that is nearest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
4418	fetch the telephone of restaurant having no reviews	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
4419	fetch the restaurant having rating lower than 1 which is closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] => notify
4420	i would like to know the rating of the restaurants that are the farthest away and that have a lower count of reviews than NUMBER_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4421	tell me the cuisine and city of a restaurant with a lower rating than NUMBER_0 furthest from work .	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4422	what are reviews in restaurant having review count larger than NUMBER_0 and location equal to work	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4423	find me restaurant having NUMBER_0 or more review count and address equal to work	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work => notify
4424	tell me the location of restaurants that have QUOTED_STRING_0 in the description and is near me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4425	fetch the reviews of the most far away restaurant with rating more than NUMBER_0 from work	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4426	get the restaurant rated 1 stars which is farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
4427	what are the restaurants in the QUOTED_STRING_0 zip code with a summary matching QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 => notify
4428	please list restaurants which are QUOTED_STRING_0 and having lower rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4429	present restaurant with food type equal to QUOTED_STRING_0 and review count equivalent to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4430	show me the picture of the closest restaurant to home with a rating over NUMBER_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4431	i would like to know how far restaurants with a phone number of PHONE_NUMBER_0 are from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
4432	which restaurants with a PHONE_NUMBER_0 phone number serve QUOTED_STRING_0 dishes ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4433	find the location of all restaurants that are in GENERIC_ENTITY_tt:us_state_0 and have QUOTED_STRING_0 as their summaries .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:description:String =~ QUOTED_STRING_0 ) => notify
4434	show me the restaurant the greatest distance from home with a location that 's the same as work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
4435	what is the rating of restaurant having postal code equivalent to QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
4436	tell me what the restaurant is that 's closest to work and has the phone number equal to PHONE_NUMBER_0 .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
4437	what is the food type of the farthest away restaurant with food type being QUOTED_STRING_0 ?	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4438	tell me how far away NUMBER_0 star rated restaurants are from my work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
4439	find restaurants reviews with rating below NUMBER_0 written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4440	which restaurants with QUOTED_STRING_0 in the food type and QUOTED_STRING_1 as description gets the largest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4441	pull up reviews having later date of publication than DATE_0 and creator equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
4442	what is the review with the latest date of publication ?	now => ( sort param:datePublished:Date asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
4443	where is the restaurants near here that cooks QUOTED_STRING_0 cuisine	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4444	show me the city of restaurant with review count less than 1 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
4445	show me the restaurant that provides QUOTED_STRING_0 food and is located in zip code QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4446	for the restaurant that has a rating of no higher than NUMBER_0 give me the address .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4447	what are the QUOTED_STRING_0 restaurants with a phone number of PHONE_NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4448	find a review with the lowest rating , out of those reviews that have GENERIC_ENTITY_org.schema.Restaurant:Person_0 as an author and QUOTED_STRING_0 as a description .	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4449	i need a review that was rated over NUMBER_0 and was published after DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
4450	what image and location applies to the restaurants with a QUOTED_STRING_0 menu that are furthest away ?	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4451	enumerate dining locations around home with QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
4452	what 's the rating of the dining locales with number of evaluations less than 1 with the most reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) => notify
4453	which country are restaurants close to home with the tiniest amount of reviews	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
4454	find reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 of restaurants around home	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4455	enumerate restaurants which cooks QUOTED_STRING_0 and having country equal to GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4456	what zip code are restaurants near work	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4457	how many reviews has the farthest restaurants with a greater rating than 1 received ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
4458	show me the evaluations of the restaurant with number of reviews less than 1 closest to work	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
4459	fetch me the descriptions of restaurants with id equal to QUOTED_STRING_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
4460	what is the review count of the restaurants in QUOTED_STRING_0 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
4461	how many reviews do restaurants that have descriptions with QUOTED_STRING_0 in them have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4462	which is the restaurant here having food type being QUOTED_STRING_0 which has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4463	how close are the restaurant having smaller than 1 reviews with the most reviews from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) ) => notify
4464	show me restaurants with less than 1 review .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
4465	tell me how close the restaurants with less than a NUMBER_0 rating with the fewest reviews are from the job .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) ) => notify
4466	i 'd like to know which restaurants are the farthest from here with at minimum NUMBER_0 reviews	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
4467	message me the restaurants rated NUMBER_0 stars nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
4468	which restaurant has less than NUMBER_0 reviews and the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
4469	show me what the restaurant 's telephone number is no more than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4470	get the current name of restaurants with review count less than 1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 => notify
4471	in what city are the restaurants near me located ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4472	for restaurants with a lower rating than NUMBER_0 and that are closest to home display for me their food type .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4473	which dining locations with number of evaluations not more than NUMBER_0 and location equal to here gets the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4474	fetch list restaurants having location equal to here and smaller rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
4475	tell me about the worst rated restaurants .	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4476	what 's the price range of restaurant in GENERIC_ENTITY_tt:country_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
4477	i 'd like to know the telephone number to the restaurant has the same location as home .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
4478	what is the name of the restaurants with QUOTED_STRING_0 as the postal code nearest to here ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4479	which restaurant having served cuisine being QUOTED_STRING_0 and NUMBER_0 or greater rating has the highest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4480	show me review authors that have the greatest rating	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
4481	how near is the closest restaurants in GENERIC_ENTITY_tt:us_state_0 to work from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
4482	show me restaurants rated NUMBER_0 with a QUOTED_STRING_0 description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4483	which restaurant that serves QUOTED_STRING_0 cuisine has the highest rating and a review count lower than NUMBER_0 ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4484	could you run down which restaurants have zero reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
4485	find restaurants for QUOTED_STRING_0 with more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4486	show me how far away the restaurants rated NUMBER_0 stars are from my work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
4487	what is the restaurants with served food type being QUOTED_STRING_0 and description being QUOTED_STRING_1 which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4488	what is the restaurants with rating fewer than NUMBER_0 closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
4489	get restaurant having no less than NUMBER_0 reviews and NUMBER_1 or lower rating .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number <= NUMBER_1 => notify
4490	bring up restaurant having served cuisine being QUOTED_STRING_0 and postal code equal to QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4491	gather me what is the city of the farthest restaurant having QUOTED_STRING_0 in the description from here	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4492	i 'd like to know the name of the review with NUMBER_0 as the biggest rating	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
4493	i 'd like to know which country restaurants with a rating of less than NUMBER_0 are located in	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4494	which restaurant is described as QUOTED_STRING_0 and has the following phone number : PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4495	find restaurant reviews near my job that have reviews published after DATE_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4496	how many reviews in the closest restaurant with review count smaller than NUMBER_0 to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4497	reveal what 's the city of the dining locales having QUOTED_STRING_0 as food type most far away in distiction to work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4498	show me restaurants with at least 1 review	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
4499	i want reviews from a place with less than NUMBER_0 reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
4500	seek reviews with author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 and description equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
4501	i want restaurants containing postal code being QUOTED_STRING_0 which serves QUOTED_STRING_1 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
4502	tell me the restaurant that got the minimum rating and offers QUOTED_STRING_0 cuisine in this area .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4503	give me the name of a town that has a restaurant that serves QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4504	look for reviews GENERIC_ENTITY_org.schema.Restaurant:Person_0 that were published prior to DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
4505	from my home , find how close the restaurant with the telephone number of PHONE_NUMBER_0 is	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4506	i want to know the address for the restaurants with the smallest review count .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4507	show me the restaurants whose address equals home and a rating of lower than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home => notify
4508	what QUOTED_STRING_0 restaurants have a higher rating that NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4509	please list restaurants having phone number equal to PHONE_NUMBER_0 and review count larger than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4510	show me the farthest restaurants from home with a rating under NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
4511	which is the restaurant with the largest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
4512	search the country of restaurants with higher review count than 1	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
4513	which are critiques written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 rated NUMBER_0 star ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
4514	list restaurants with location equal to work which is most far away from work ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
4515	i 'm looking for a QUOTED_STRING_0 restaurant that has a review count of NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4516	please show restaurant with food type equal to QUOTED_STRING_0 and NUMBER_0 or greater rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4517	name restaurants that serve QUOTED_STRING_0 and are rated exactly NUMBER_0 stars .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4518	please get the restaurants with no reviews	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
4519	tell me about the restaurant with a postal code equal to QUOTED_STRING_0 with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4520	show a restaurant with maximum review count with rating less than NUMBER_0 and a phone number of PHONE_NUMBER_0	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
4521	please list restaurant with cuisine equal to QUOTED_STRING_0 and NUMBER_0 or greater rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4522	where is the nearest restaurants having phone number equivalent to PHONE_NUMBER_0 to home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
4523	what 's the distance to the nearest restaurant from work to home with NUMBER_0 reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4524	what restaurant in this location has the fewest reviews and a description of QUOTED_STRING_0 ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4525	advise where restaurants are located that have NUMBER_0 reviews or more	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4526	how close to me is the closest restaurants rated NUMBER_0 star to work from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4527	what 's the rating and number of the closest restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:aggregateRating.ratingValue:Number , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
4528	get me the review by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that has a summary of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
4529	tell me which restaurant in this area has the phone number equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4530	what 's the location of restaurants in this neighborhood ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4531	how many of reviews do QUOTED_STRING_0 restaurants have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4532	which dining locations have smaller rating than NUMBER_0 and are in GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
4533	say what is the image of the most far away restaurant with higher review count than NUMBER_0 from home	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4534	what restaurant has the fewest reviews and the phone number PHONE_NUMBER_0	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
4535	i would like to see the phone number for a restaurant that has a rating equal to NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
4536	what distance is the closest dining locales rated NUMBER_0 star to work in distiction to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4537	tell me the telephone number of the restaurant that is close to work and has the least reviews .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
4538	i would like to know the distance from work of a restaurant that is rated below NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) => notify
4539	where is the restaurant with QUOTED_STRING_0 cuisine and a rating of no less than NUMBER_0 located ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4540	show me restaurants with the most reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
4541	search QUOTED_STRING_0 restaurants by work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4542	tell me review names that have author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
4543	get dining locations with bigger rating than NUMBER_0 and QUOTED_STRING_0 as served type of food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4544	can you get the rating of the restaurant closest to me with over NUMBER_0 reviews ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4545	what restaurant are close and have rating equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
4546	how close is the QUOTED_STRING_0 restaurant to work that is the least distance to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
4547	get me the image of the restaurants with the highest review count	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4548	i want to know how far from work the restaurant that has a description equal to QUOTED_STRING_0 is .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4549	tell me the reviews of the restaurants that serve QUOTED_STRING_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4550	show me restaurants that have a lower rating than NUMBER_0 an a food type being QUOTED_STRING_0 that have the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4551	get the restaurant with city containing LOCATION_0 with the least reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) [ 1 ] => notify
4552	grab for me what is the postal code of the most far away restaurant from home .	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4553	what restaurant get postal code being QUOTED_STRING_0 and offers QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
4554	gather review rated NUMBER_0 star of restaurants with food type being QUOTED_STRING_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4555	i would like to know the description for reviews that have a higher number of ratings than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) => notify
4556	show me the names of QUOTED_STRING_0 restaurants closest to my job .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4557	what restaurants with a maximum rating of NUMBER_0 serve QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4558	find restaurants that have QUOTED_STRING_0 in the description and the phone number PHONE_NUMBER_0 that has the smallest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
4559	tell me the distance of the closest restaurant with more than NUMBER_0 reviews that 's farthest from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4560	find more than NUMBER_0 review restaurants that are furthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
4561	i want to see the image of restaurants closest to work with the smallest number of reviews	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
4562	find restaurants that are located near here and have QUOTED_STRING_0 in the description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
4563	tell me the distance to the restaurant that is furthest away from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
4564	search restaurants having lower rating than NUMBER_0 and QUOTED_STRING_0 as description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4565	which are the restaurants near here that sells QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4566	find the restaurant with the phone number PHONE_NUMBER_0 and more than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4567	find GENERIC_ENTITY_org.schema.Restaurant:Person_0 review submitted while being published an earlier date than DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
4568	tell me the name of the restaurant with a higher than NUMBER_0 rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
4569	find all GENERIC_ENTITY_org.schema.Restaurant:Person_0 reviews that have the word QUOTED_STRING_0 in them .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
4570	find a restaurant with a rating of NUMBER_0 or under that serves QUOTED_STRING_0 cuisine and has a minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4571	give me zip codes of restaurants with 1 or more reviews	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
4572	what 's the amount of reviews a restaurant has nearby with a rating greater than 1 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
4573	which are the restaurant around home having NUMBER_0 or larger review count ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
4574	what 's needed are reviews of restaurants that feature QUOTED_STRING_0 in their description .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4575	i want to see the restaurants with at least NUMBER_0 reviews that have the lowest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
4576	tell me the rating of the farthest restaurant with less than NUMBER_0 reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4577	show me the restaurants that have a phone number of PHONE_NUMBER_0 and sell QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4578	show me the restaurant that has a lower rating than NUMBER_0 with the least reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
4579	i want to know the distance to restaurants from work that have exactly NUMBER_0 reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
4580	what are review having rating not more than 1 of restaurant having more than NUMBER_0 evaluations	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4581	for the restaurant with NUMBER_0 reviews , what is the street address ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4582	which restaurants ' names get description equal to QUOTED_STRING_0 and QUOTED_STRING_1 as cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
4583	name a restaurant that has QUOTED_STRING_0 cuisine and less than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4584	what is the reviews of the restaurant with the biggest rating ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4585	which restaurant get address equal to here and QUOTED_STRING_0 in the food type	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4586	what country is the restaurant from with QUOTED_STRING_0 in the description and least amounts of reviews .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4587	which is the restaurants with served cuisine being QUOTED_STRING_0 and tinier rating than NUMBER_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4588	what is the distance from home of the restaurant having smaller review count than NUMBER_0 farthest from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4589	how near is the restaurant near here with the least evaluations to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
4590	what are reviews which was created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and having date published before DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
4591	retrieve the restaurant having more number of evaluations than NUMBER_0 and state equal to GENERIC_ENTITY_tt:us_state_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
4592	present restaurant with food type equal to QUOTED_STRING_0 and number of evaluations equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4593	give me restaurants that have at least NUMBER_0 reviews located farthest away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
4594	what is the price range of the restaurants with the tiniest review count	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4595	i would like to find out how many QUOTED_STRING_0 restaurants there are .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4596	show the nearest restaurant in the GENERIC_ENTITY_tt:country_0 to my home with the highest number of reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) ) => notify
4597	get me the reviews of the farthest restaurants with lower review count than NUMBER_0 from home .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4598	please give me restaurants in here with review count higher than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
4599	search the location of restaurant with NUMBER_0 reviews ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4600	what are the comments that have been published earlier than DATE_0 with the highest rating ?	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) ) [ 1 ] => notify
4601	what is the postal code for the QUOTED_STRING_0 restaurant closest to work ?	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4602	can you get me the city of the restaurants that are listed here ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4603	what are the reviews that are rated the lowest , have a QUOTED_STRING_0 summary , and a publication date past DATE_0 ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4604	what is the current distance of restaurant rated NUMBER_0 star from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
4605	i want to know where restaurants are located that have QUOTED_STRING_0 in the descriptions	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4606	how many reviews does the restaurant that is closest to me have that has over NUMBER_0 reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4607	i need reviews that was created by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
4608	get restaurant having higher review count than NUMBER_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4609	how close are the nearest restaurants with more then NUMBER_0 reviews between home and work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4610	give me a restaurant near me that serves QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4611	say what is the street of restaurants with fewer rating than NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4612	what are the restaurants around me with ratings of at least NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
4613	how many total restaurants with location equal to work are there	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4614	please specify the QUOTED_STRING_0 restaurants that are in close proximity to home ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4615	what is the name of a restaurant with a location work that is the biggest distance from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
4616	say which restaurant definition is higher than NUMBER_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
4617	name a review that has QUOTED_STRING_0 as it 's summary and that was published sometimes after DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
4618	gather me the telephone of the closest restaurant having postal code containing QUOTED_STRING_0 to here .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4619	fetch me the city of the restaurant having review count more than 1 that is most far away from here .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
4620	what are the comments summarized as QUOTED_STRING_0 with the highest rating ?	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4621	show me restaurants with less than a 1 rating with the lowest number of reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] ) => notify
4622	fetch me the zip code of restaurant with NUMBER_0 reviews	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4623	which restaurant get bigger rating than NUMBER_0 and offer QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4624	can you inform me the location of the farthest restaurants from work ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4625	what is the restaurant with QUOTED_STRING_0 cuisine and more than NUMBER_0 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4626	find me the reviews from the author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 that have a description that equals QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
4627	fetch review having later date published than DATE_0 and summary being QUOTED_STRING_0 of restaurants around work .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4628	what street address would apply to a restaurant with a total of NUMBER_0 reviews received ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4629	show me pictures of reviews with the lowest rating .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
4630	get the review count of restaurants having no reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
4631	how far from home is it to a restaurant in the LOCATION_0 city area ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
4632	tell me the type of food restaurants serve that have a rating under NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4633	what are restaurant which cooks QUOTED_STRING_0 food and with QUOTED_STRING_1 in the postal code ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4634	do you know the farthest restaurants from my home with no reviews ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
4635	please get restaurants which are QUOTED_STRING_0 and having smaller rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4636	what is the image of the reviews with the smallest rating	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
4637	list restaurants with higher review count than NUMBER_0 and food type equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4638	find restaurants that have QUOTED_STRING_0 in their summary with the lowest ratings .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4639	how many review with rating at largest NUMBER_0 are there	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
4640	what is the rating of the restaurant that contains QUOTED_STRING_0 in description	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4641	i need to know which country the restaurant with the id QUOTED_STRING_0 is located in .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
4642	what is the restaurants having QUOTED_STRING_0 as served cuisine and QUOTED_STRING_1 as summary with the biggest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4643	search for reviews of a restaurant in a location that is equivalent to work .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4644	show me restaurant having NUMBER_0 or greater review count and address equal to work	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work => notify
4645	show near my job the closest NUMBER_0 star restaurant and its distance .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4646	tell me the name of a city that has a place that serves QUOTED_STRING_0 cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4647	which are review for restaurant rated with NUMBER_0 star	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4648	show me what is the current rating of restaurants having description being QUOTED_STRING_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4649	tell me the phone number and state of the restaurant with more than a NUMBER_0 rating that 's nearest to here .	now => [ param:address.addressRegion:Entity(tt:us_state) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4650	name the restaurants located in GENERIC_ENTITY_tt:country_0 with the smallest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4651	what is the distance to the farthest restaurant witha smaller than NUMBER_0 rating from home from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4652	which are reviews having later date published than DATE_0 for restaurant having bigger than NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4653	which is the restaurant having NUMBER_0 or higher review count which serves QUOTED_STRING_0 food with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4654	i 'm looking for the date that a review was published with less than NUMBER_0 ratings	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
4655	name GENERIC_ENTITY_tt:country_0 's QUOTED_STRING_0 restaurants .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4656	the restaurant with a QUOTED_STRING_0 description that 's the greatest distance away from work can be found where ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4657	list restaurant locations that have no less than NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4658	tell me reviews of restaurants with NUMBER_0 reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4659	get the rating of restaurant with number of evaluations less than 1	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
4660	get me the restaurant with the summary that is QUOTED_STRING_0 and that has exactly NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4661	restaurant quest in this region with a score of less than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
4662	show me a QUOTED_STRING_0 restaurant with a smaller review count than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4663	give me the description of a QUOTED_STRING_0 restaurant .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4664	what is the restaurant 's cooking and postal code with a NUMBER_0 or lower score and location equal to the workplace ?	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work ) => notify
4665	search for reviews of restaurants with an GENERIC_ENTITY_tt:us_state_0 location .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4666	i 'd like to know the farthest restaurant from work that doesn't have reviews .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
4667	search restaurant has more number of evaluations than NUMBER_0 and address equal to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
4668	gather me the image of the nearest restaurants with postal code containing QUOTED_STRING_0 to work	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4669	the restaurant with the highest rating of any is in what price range ?	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4670	show me restaurants near GENERIC_ENTITY_tt:country_0 with the most reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) => notify
4671	get me what is the description of the nearest restaurant having greater rating than NUMBER_0 to here .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4672	get the street of restaurants by here .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4673	show me locations of restaurants with only one review .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) [ 1 ] ) => notify
4674	how near is the nearest restaurants with telephone equal to PHONE_NUMBER_0 to home from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4675	tell me the number of reviews for a restaurant that is from a city called LOCATION_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
4676	give the restaurant with no more than NUMBER_0 reviews and the phone number of PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4677	show me reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with QUOTED_STRING_0 in the summary .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
4678	show me which restaurant has the most NUMBER_0 star reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4679	tell me the restaurants ' rating with postal code containing QUOTED_STRING_0 that is closest to here .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4680	i 'm looking for restaurants near home that have QUOTED_STRING_0 in the description	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
4681	pull up restaurants which are QUOTED_STRING_0 and having NUMBER_0 or smaller rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4682	show me the street of restaurant with QUOTED_STRING_0 in the cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4683	seek the number of reviews in restaurant having rating lower than 1	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
4684	tell me restaurants with a description mentioning QUOTED_STRING_0 and a phone number that is exactly PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4685	what ranking is noted for the restaurant with zip code QUOTED_STRING_0 ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
4686	what are some restaurants nearby that offer cuisine that is QUOTED_STRING_0 with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4687	grab the distance of restaurants with at most NUMBER_0 reviews from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
4688	which restaurant with no less than NUMBER_0 reviews is nearest to home ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
4689	what are the work area QUOTED_STRING_0 restaurants ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4690	which review get author equivalent to GENERIC_ENTITY_org.schema.Restaurant:Person_0 and later date published than DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
4691	show me the restaurants whose addresses are equal to work and that have a rating of NUMBER_0 or under .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
4692	how close is restaurants near work to here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
4693	list the restaurants with a description of QUOTED_STRING_0 that are in this location .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
4694	i 'd like to know restaurant ratings with location exactly work .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4695	what restaurants get larger rating than NUMBER_0 and phone number equal to + PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4696	in what city is the restaurant that 's the longest distance away from here and has QUOTED_STRING_0 in its description located ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4697	what distance from here are restaurants with more reviews than NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
4698	i want reviews that are published after DATE_0 of restaurant near the job .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4699	what are the restaurants with a home equivalent location , the lowest ratings , and NUMBER_0 reviews at most ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4700	how far away is the restaurant having QUOTED_STRING_0 in the description that is closest to here to here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
4701	tell me which restaurants have no reviews and are found near home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
4702	what restaurant , with the phone number PHONE_NUMBER_0 , is located in the GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4703	among restaurants with QUOTED_STRING_0 included in the summary , which have more than NUMBER_0 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4704	get me the city of restaurant around me	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
4705	tell me restaurants closest to work that have a location equal to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
4706	give me restaurants that have a rating of at least NUMBER_0 that have QUOTED_STRING_0 which have the most review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4707	find me a place to eat with an address near here that has exactly NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
4708	find reviews that were published after DATE_0 and were authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
4709	give me the picture of GENERIC_ENTITY_tt:country_0 's restaurant	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) => notify
4710	can you find the telephone number of the restaurant with over NUMBER_0 reviews ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4711	give me the type of cuisine offered by the restaurant that has a rating of NUMBER_0 or more .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
4712	what QUOTED_STRING_0 restaurants can be found in GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4713	what is the distance to home of the restaurant that has a review count under NUMBER_0 and has the lowest number of reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) ) => notify
4714	show me the name of the restaurant that is most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
4715	get location of restaurant having food type containing QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4716	gather the zip code of restaurants with review count larger than NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4717	display the description for the restaurant closest to work that has postal code QUOTED_STRING_0 .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4718	give me the distance from work to restaurants that have NUMBER_0 reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
4719	fetch review having rating more than NUMBER_0 and summary equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
4720	what is the country of the restaurant with rating smaller than NUMBER_0 with the smallest number of reviews	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
4721	show me the farthest restaurants from here with only 1 review and tell me their city .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
4722	show me reviews that have descriptions with QUOTED_STRING_0 in them	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
4723	find restaurants exactly where i work .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4724	present restaurant having fewer review count than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4725	tell me the number of reviews of restaurant with a location home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
4726	what QUOTED_STRING_0 restaurants are near me ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4727	what restaurants get larger rating than NUMBER_0 and phone number equivalent to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4728	find locations of restaurants that include QUOTED_STRING_0 in the description	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4729	show me the description of the restaurant having postal code containing QUOTED_STRING_0 nearest to home	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4730	present restaurants with review count not greater than NUMBER_0 and postal code being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4731	get me the restaurant here with description being QUOTED_STRING_0 which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4732	i 'd like you to look for the restaurant with the largest distance from here with a rating of 1	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
4733	look for restaurants that have descriptions with QUOTED_STRING_0 and are closest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4734	how many reviews does the QUOTED_STRING_0 restaurant closest to work have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4735	tell me the cuisine of the nearest restaurants to my home	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4736	give me a picture of the restaurant that is near home with the least reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
4737	i 'd like to know the closest restaurants that are rated NUMBER_0 stars nearby where i live .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4738	i want the name and street address of the closest restaurant to her with the fewest reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
4739	show me restaurant having a phone number of PHONE_NUMBER_0 a smaller rating than NUMBER_0 with a maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
4740	what is the type and zip code of a restaurant near work that has a rating NUMBER_0 or below .	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work ) => notify
4741	look for the restaurant whose telephone number is PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4742	show me the lowest rated restaurants farthest from my job .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
4743	give me reviews with a rating of NUMBER_0 or more .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
4744	i want QUOTED_STRING_0 cuisine restaurants close by	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4745	what QUOTED_STRING_0 restaurants have a NUMBER_0 star ranking ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4746	which is the restaurant with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
4747	name the street that has a restaurant with a number of PHONE_NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4748	how many reviews in the restaurant having state equal to GENERIC_ENTITY_tt:us_state_0 nearest to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
4749	display the restaurant with at minimum NUMBER_0 areas that is the farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
4750	give me reviews with a rating over NUMBER_0 that include QUOTED_STRING_0 in the description .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
4751	i 'd like to know how pricey the QUOTED_STRING_0 restaurant furthest away from my home is .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4752	pull up name and picture of the furthest QUOTED_STRING_0 restaurant .	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4753	what is the distance from work of the restaurant closest to home with only one review	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
4754	out of the restaurants with only NUMBER_0 reviews , show me the reviews .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4755	which is the evaluations having description being QUOTED_STRING_0 with the maximum rating	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4756	what 's the restaurant that serves QUOTED_STRING_0 cuisine with the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4757	what state has a restaurant with QUOTED_STRING_0 as its descriptiosn ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4758	speak the postal code of restaurants rated 1 star	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) => notify
4759	tell me the review name with at most NUMBER_0 rating	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
4760	where is GENERIC_ENTITY_tt:us_state_0 restaurant with the largest number of reviews ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) => notify
4761	retrieve the restaurant has more number of evaluations than NUMBER_0 that serves QUOTED_STRING_0 with the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4762	what is the rating of the closest restaurants containing QUOTED_STRING_0 in the description ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4763	i want descriptions of restaurants with NUMBER_0 or less reviews	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
4764	what 's the state of the restaurant with QUOTED_STRING_0 as postal code with the most evaluations	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4765	how many current reviews does the restaurants with more review count than NUMBER_0 which is closest to here have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4766	i would like to know the restaurants that are in GENERIC_ENTITY_tt:us_state_0 near here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
4767	which QUOTED_STRING_0 restaurants have fewer than NUMBER_0 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4768	show me the reviews of restaurants with the highest rating .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4769	which restaurant has NUMBER_0 or less for a rating and NUMBER_1 or more reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_1 and param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
4770	what is the price range of the restaurant which has the largest rating .	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4771	gather reviews with rating equal to NUMBER_0 are there	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
4772	where can you find the restaurant with the most reviews and this number PHONE_NUMBER_0 .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] ) => notify
4773	how near is the restaurants rated NUMBER_0 star which is closest to work from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4774	what is the restaurant called that has more than 1 review and is the longest distance from here .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
4775	which restaurant get served cuisine being QUOTED_STRING_0 and review count equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4776	get the city of the restaurant with review count less than NUMBER_0 closest to here	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4777	gather me the restaurants having at least NUMBER_0 reviews most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
4778	i would like to see the restaurants that are closest to work that have NUMBER_0 reviews .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
4779	give me the location of a restaurant with a rating not above NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4780	which are restaurant with rating at minimum NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
4781	i want to see the restaurant with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
4782	what is the street name of the QUOTED_STRING_0 restaurant which has the maximum rating	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4783	what cuisine type is served at the restaurant with a PHONE_NUMBER_0 phone number ?	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4784	which QUOTED_STRING_0 restaurants have a description which equals QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4785	what country is the restaurant that is the farthest from work in ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4786	what is the restaurant type of food with the lowest rating of NUMBER_0 ?	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
4787	find restaurants with postal code equivalent to QUOTED_STRING_0 that offer QUOTED_STRING_1 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
4788	how many reviews exist for a restaurant whose rating is less than 1 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
4789	fetch me the restaurant which has the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
4790	how close are restaurants that have a rating higher than NUMBER_0 that are furthest from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4791	tell me restaurants with description of QUOTED_STRING_0 and location being here	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
4792	tell me the review of the restaurant that 's furthest from here with a review count under NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4793	get restaurants serving QUOTED_STRING_0 cuisine and QUOTED_STRING_1 overview .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4794	i demand restaurant having description being QUOTED_STRING_0 which offer QUOTED_STRING_1 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
4795	where are the nearby restaurants selling QUOTED_STRING_0 cuisine ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4796	how many total restaurant having QUOTED_STRING_0 in the cuisine are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4797	get review created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having rating at most NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
4798	which are total restaurant in this area that are QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4799	get the nearest restaurant having id equal to QUOTED_STRING_0 to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4800	search restaurant in this area with lower rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
4801	show me restaurant having QUOTED_STRING_0 as description and rating at minimum NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4802	list the QUOTED_STRING_0 restaurants with a QUOTED_STRING_1 description .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4803	fetch the QUOTED_STRING_0 restaurants with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4804	how far are restaurants with NUMBER_0 or less reviews that have the closest distance to my job .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4805	i want the rating of restaurants that have exactly NUMBER_0 reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4806	which restaurants have phone number the same as PHONE_NUMBER_0 and description equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4807	how many reviews are there in the restaurant in GENERIC_ENTITY_tt:us_state_0 which is farthest away from work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
4808	fetch the city of the restaurant which has the lowest review count	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4809	what is the name of the restaurant with QUOTED_STRING_0 as food type that has the most reviews .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4810	tell me the phone number of the restaurant near my job with the fewest reviews .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
4811	what is the price range of restaurants with cuisine being QUOTED_STRING_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4812	show me the farthest restaurants from my location with a review count of less than NUMBER_0 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4813	reveal what 's the rating of dining locations having description being QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4814	what is the distance to the restaurant that is furthest away from here from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
4815	find a QUOTED_STRING_0 restaurant that not rated more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4816	what restaurant is the fewest miles from work with a QUOTED_STRING_0 id ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4817	fetch reviews in restaurant having review count higher than NUMBER_0 and location equal to work	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4818	please enumerate restaurant with QUOTED_STRING_0 as served food type and address equal to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4819	what reviews have a summary of QUOTED_STRING_0 and were authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
4820	tell me the restaurant here that has NUMBER_0 or under ratings and the maximum count of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4821	of restaurants with the maximum review count , find those that serve QUOTED_STRING_0 cuisine and have QUOTED_STRING_1 within the description .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4822	what restaurants near me have the least overall rating and match cuisine type QUOTED_STRING_0 ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4823	what is the restaurant 's name that has less than a NUMBER_0 review count ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4824	get restaurant with larger rating than NUMBER_0 that serves QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4825	find the QUOTED_STRING_0 restaurants that are lowest rated .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4826	get restaurant have at most NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4827	i would like to know which restaurant is in the country equal to GENERIC_ENTITY_tt:country_0 and that offers QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4828	where is the restaurant having description equal to QUOTED_STRING_0 farthest away from work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4829	get review rated NUMBER_0 star of dining locales with food type being QUOTED_STRING_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4830	how many total review with rating at most NUMBER_0 are there	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
4831	where is the restaurant with phone number PHONE_NUMBER_0 located ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4832	which is the restaurant close to here rated NUMBER_0 star with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4833	get the restaurants with postal code containing QUOTED_STRING_0	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
4834	how many reviews does the closest restaurants to work have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4835	ask what 's the restaurant town with QUOTED_STRING_0 as the closest postal code to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4836	find me the restaurant that has a location equal to here that is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
4837	what are the restaurants with a zip of QUOTED_STRING_0 and a description of QUOTED_STRING_1 with the least amount of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
4838	get me the distance to restaurant having greater rating than NUMBER_0 from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) => notify
4839	find me a restaurant with NUMBER_0 or more stars that offers QUOTED_STRING_0 food , please .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4840	which are dining locations in GENERIC_ENTITY_tt:us_state_0 around home	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:home => notify
4841	find the location of the restaurants that is closest to home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4842	find reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
4843	what is the total number of reviews of the restaurants that have ratings lower than NUMBER_0 with the smallest review count .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
4844	the QUOTED_STRING_0 restaurants nearest to here serve what kind of cuisine and have a review count equal to what ?	now => [ param:aggregateRating.reviewCount:Number , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4845	what are the street addresses for LOCATION_0 restaurants ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
4846	i 'm looking for restaurants rated above NUMBER_0 with NUMBER_1 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
4847	in the QUOTED_STRING_0 postal code and closest to here , what is the rating of the restaurants ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4848	i want restaurants near me with a rating of at least NUMBER_0 stars .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
4849	which reviews get NUMBER_0 or more rating and is created by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
4850	how many reviews are there in the restaurants having smaller than NUMBER_0 reviews with the highest number of reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
4851	what date was a review published that has less than NUMBER_0 on ratings	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
4852	fetch the name of review having descriptions equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
4853	how near are the restaurant having zero reviews with the highest number of reviews to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) [ 1 ] ) ) => notify
4854	find restaurants with a review count of under NUMBER_0 and type of food QUOTED_STRING_0 that has the biggest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4855	how many reviews in the closest restaurant with review count fewer than NUMBER_0 to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4856	out of restaurants with QUOTED_STRING_0 as their summary and more than NUMBER_0 reviews , which has the worst rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4857	which reviews having later date of publication than DATE_0 which was written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 has the lowest rating ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 ) ) [ 1 ] => notify
4858	where is the restaurant containing description equal to QUOTED_STRING_0 most far away from work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4859	i need to know the type of cuisine served at restaurants with food type QUOTED_STRING_0 that are farthest from home	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4860	find reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with rating NUMBER_0 or below	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
4861	gather what is the rating of review having date published sooner than DATE_0	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
4862	what restaurant get country equal to GENERIC_ENTITY_tt:country_0 and review count greater than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
4863	grab reviews of QUOTED_STRING_0 restaurants rated NUMBER_0 stars .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4864	search for the restaurant that is the furthest distance from work and has QUOTED_STRING_0 as its zip code .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
4865	tell me the price ranges for the restaurants near my house with less than NUMBER_0 .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4866	name the restaurant with under NUMBER_0 reviews that is the greatest distance away from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
4867	fetch the reviews of restaurants with QUOTED_STRING_0 in the cuisine	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4868	what are the descriptions of the restaurants close to work .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4869	find the QUOTED_STRING_0 restaurant that has the following phone number PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4870	show me the rating of the nearest restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4871	get the reviews with date published after DATE_0 and summary being QUOTED_STRING_0 with the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4872	where is the restaurant around home having QUOTED_STRING_0 that is in cuisine	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4873	what is the distance from home of the restaurants with rating greater than NUMBER_0 with the smallest number of reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
4874	what is the postal code of the restaurant here with the lowest amount of reviews	now => [ param:address.postalCode:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
4875	find restaurants offering QUOTED_STRING_0 cuisine that have a NUMBER_0 or lower rating and show locations .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4876	please enumerate restaurants having address equal to work and NUMBER_0 or larger rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
4877	can you find me a place to eat which has NUMBER_0 or less reviews and that has QUOTED_STRING_0 in it 's description ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4878	what is the distance to the closest restaurant between here and work that has a NUMBER_0 star rating ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4879	which restaurant with rating at minimum NUMBER_0 and summary equal to QUOTED_STRING_0 gets the maximum review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4880	what are the review with larger rating than NUMBER_0 and description equal to QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
4881	text me the postal code of restaurants rated 1 star	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) => notify
4882	fetch reviews authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having summary being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
4883	i need restaurants with more review count than NUMBER_0 and rating not greater than NUMBER_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
4884	how far are the nearest restaurant with telephone equal to PHONE_NUMBER_0 from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4885	tell me what the reviews are for the restaurant that has the highest rating .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
4886	how far away is the nearest restaurants with food type being QUOTED_STRING_0 to work from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
4887	bring up review uploaded by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having NUMBER_0 or lower rating	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
4888	search the restaurant having NUMBER_0 or greater rating and QUOTED_STRING_0 as description with the maximum number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4889	how far is the restaurant by my work that has less than NUMBER_0 reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
4890	show me the restaurants with a review count higher then NUMBER_0 in the country of GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
4891	find all restaurants in GENERIC_ENTITY_tt:us_state_0 with the most reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
4892	tell me which restaurant is the farthest from home that has a lesser review count than NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
4893	i want to know which restaurant closest to here has zero reviews .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
4894	seek the zip code of restaurant having rating lower than NUMBER_0 .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4895	get reviews created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having earlier date published than DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
4896	find restaurants in here with postal code being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
4897	how near is the restaurant having postal code containing QUOTED_STRING_0 farthest from here from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
4898	could you tell me which restaurants is rated NUMBER_0 star and in here ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
4899	i 'd like to know the city of a restaurant with zip code QUOTED_STRING_0 closest to home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4900	what 's the country of a restaurant with QUOTED_STRING_0 in the descriptions ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4901	which are restaurants having location equal to here that sells QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4902	where is the restaurant with NUMBER_0 or smaller rating that offer QUOTED_STRING_0 cuisine	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4903	tell me restaurants that have NUMBER_0 reviews that are the most distance from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
4904	which are the restaurant having review count not more than NUMBER_0 which has QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4905	gather me the reviews of the restaurant with review count fewer than 1 closest to work	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
4906	give me a numbered list of restaurants with a rating higher than NUMBER_0 and a summary of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4907	list for me the restaurants near home whose ratings are equal NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:home => notify
4908	find the rating of restaurant having descriptions containing QUOTED_STRING_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4909	grab the review count of restaurants having QUOTED_STRING_0 in the descriptions	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
4910	find all the restaurants with more than NUMBER_0 reviews that have the phone number PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
4911	show me restaurants that have at least 1 review	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
4912	display restaurant reviews that are located at work	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
4913	please grab restaurant having LOCATION_0 as city	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
4914	get me the restaurant with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
4915	tell me how close the nearest NUMBER_0 star restaurant is near work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
4916	what 's the restaurant with a home location in the QUOTED_STRING_0 postal code that has the fewest reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
4917	find me the restaurant with more than NUMBER_0 reviews .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
4918	give me all the restaurants with QUOTED_STRING_0 in the description that have a rating of at least NUMBER_0 and a max review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4919	i 'd like to know what sort of food restaurants serve that have a lower rating than NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4920	which restaurants farthest from work have a location that 's the same as work ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
4921	what are restaurant which sells QUOTED_STRING_0 food and with QUOTED_STRING_1 in the postal code ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4922	where is the most far away restaurants with rating bigger than NUMBER_0 from home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
4923	i would like to know the restaurant whose postal code is equal to QUOTED_STRING_0 and that has fewer than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
4924	which restaurants in the QUOTED_STRING_0 zip code have the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4925	show me restaurants with exactly NUMBER_0 reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
4926	what dining locations are around home and serves QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4927	what are the restaurants with less than NUMBER_0 reviews and the QUOTED_STRING_0 type of food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4928	what QUOTED_STRING_0 restaurants are nearby ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4929	tell me the price range for restaurants with zero reviews .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
4930	pull up feedback posted later than DATE_0 and GENERIC_ENTITY_org.schema.Restaurant:Person_0 as the maker .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
4931	what restaurant get summary being QUOTED_STRING_0 and review count larger than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
4932	shoe me restaurants near my work at QUOTED_STRING_0 postal code .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4933	what is the location of QUOTED_STRING_0 restaurants in the nearest description near home ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4934	near my house , find restaurants that have a number of reviews equal to NUMBER_0 or more .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
4935	what is the country of the restaurant with a review under NUMBER_0 and is the furthest from here .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4936	find restaurants with a home address and a QUOTED_STRING_0 description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
4937	i want to see the picture of restaurants with a rating under NUMBER_0 that are the farthest from home	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4938	what QUOTED_STRING_0 food restaurants are located in the immedidate vicinity of home ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4939	how many restaurants are there that have a postal code containing QUOTED_STRING_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
4940	show me the restaurant with a postal code of QUOTED_STRING_0 and food type matching QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
4941	what are restaurants close to home that serve QUOTED_STRING_0 cuisine with a minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4942	list restaurants equivalent to NUMBER_0 in review counts	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
4943	where is the restaurants with NUMBER_0 or greater review count and address equal to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) => notify
4944	show me the restaurant here with description being QUOTED_STRING_0 which has the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4945	what is the location and cuisine type of the nearest QUOTED_STRING_0 restaurant ?	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4946	get evaluations having date published later than DATE_0 in dining locales near work	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
4947	show me restaurants close by that have QUOTED_STRING_0 in the summary and it have the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
4948	i would like to see the food type of restaurant with a rating below NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4949	in what country are restaurants with a rating above NUMBER_0 ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
4950	give all the QUOTED_STRING_0 restaurants located in zip code QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4951	get me the rating of restaurant having LOCATION_0 as city .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
4952	seek the restaurants with summary being QUOTED_STRING_0 and cuisine equal to QUOTED_STRING_1 which has the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
4953	show me restaurants with at least NUMBER_0 reviews and a lesser review count than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.reviewCount:Number <= NUMBER_1 => notify
4954	tell me reviews that have less than a rating of NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
4955	what is the location of a restaurant that has more than NUMBER_0 reviews , and it 's telephone number is PHONE_NUMBER_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
4956	text me the review count of restaurants having no reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
4957	what QUOTED_STRING_0 restaurants feature QUOTED_STRING_1 in their overview ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4958	give me the name of a city with a QUOTED_STRING_0 restaurant .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
4959	fetch the reviews of restaurant rated NUMBER_0 stars .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
4960	what restaurants get food type equal to QUOTED_STRING_0 and is close .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
4961	let me see the lowest rated restaurants with a QUOTED_STRING_0 summary and an address the same as home .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
4962	what is the image of restaurant with review count fewer than NUMBER_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
4963	what is the city of the restaurant located in GENERIC_ENTITY_tt:us_state_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
4964	how far is the restaurant without any reviews and is farthest away from work and home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
4965	send me the reviews created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with the publishing date post DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
4966	what 's the distance from home to a restaurant with over NUMBER_0 stars ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) => notify
4967	find phone numbers for restaurants with a maximum rating of NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
4968	message me the location of the restaurants which is nearest to work .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
4969	find the restaurant that has at most NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
4970	how many reviews does the restaurant with NUMBER_0 stars that is farthest from work have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
4971	find me restaurants having QUOTED_STRING_0 as description that offer QUOTED_STRING_1 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
4972	show me a restaurant near here that has QUOTED_STRING_0 as the food and who has the best rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4973	i 'm looking for reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that were published prior to DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
4974	i want to find the restaurant that is closest to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
4975	tell me what the restaurant with the highest rating is .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
4976	tell me restaurants in zip codes that have review counts of NUMBER_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4977	how many miles from my location is the restaurant with business number PHONE_NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
4978	fetch me what is the distance from home of restaurants having 1 reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) => notify
4979	what 's the restaurant type and city with a lower rating than NUMBER_0 away from the workplace ?	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
4980	find me the country of the restaurant having QUOTED_STRING_0 in the description with the fewest count of reviews	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4981	display reviews authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0 which have a NUMBER_0 star rating .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
4982	how many restaurants are near home	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home => notify
4983	where is the dining locations having QUOTED_STRING_0 as description and rating equal to NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) => notify
4984	please tell me how far from home restaurants with a work location are .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
4985	what restaurants in this location have a QUOTED_STRING_0 description ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
4986	i want to know restaurants that have exactly NUMBER_0 as a review count that have the most reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] => notify
4987	tell me phone numbers for restaurants that have a review count of NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
4988	give me the zip code of 1 star rated restaurants	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) => notify
4989	what is the restaurants containing QUOTED_STRING_0 in the postal code and location equal to work with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
4990	how many reviews are the restaurants with the most reviews with QUOTED_STRING_0 in the description ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
4991	gather for me the city of restaurant with review count less than 1 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
4992	i would like to see the price range for the restaurants that are closest to home and have QUOTED_STRING_0 in the description .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4993	i would like to know the distance from home for restaurants with 1 review .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) => notify
4994	i need a restaurant rated NUMBER_0 or higher than is near home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:home => notify
4995	what restaurants have the most reviews , serve QUOTED_STRING_0 cuisine , and are located near my office ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
4996	the QUOTED_STRING_0 restaurant that 's closest has what location and what kind of food on its menu ?	now => [ param:geo:Location , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
4997	can you list me some NUMBER_0 star restaurants with many reviews near me ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) [ 1 ] ) => notify
4998	which restaurants get rating at minimum NUMBER_0 and are around me	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
4999	where is the restaurants containing QUOTED_STRING_0 as description and rating equal to NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) => notify
5000	i want you to tell me the postal code for the restaurant that serves QUOTED_STRING_0 cuisine .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5001	show me a picture of restaurants with more than NUMBER_0 reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5002	of QUOTED_STRING_0 restaurants , find those with the most reviews and a rating equaling NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5003	which restaurants get lower review count than NUMBER_0 and serves QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5004	tell me the restaurant whose address is equal to work and that has NUMBER_0 or more reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work => notify
5005	i 'd like to know what city has a restaurant with NUMBER_0 reviews minimum .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5006	seek the restaurant with review count less than NUMBER_0 which is most far away from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
5007	what are the restaurants with less than NUMBER_0 reviews and cuisine being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5008	obtain reviews that have rating NUMBER_0 at most and rating greater than NUMBER_1 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
5009	what 's the number to QUOTED_STRING_0 restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5010	which restaurants with an address equal to home also have QUOTED_STRING_0 in their descriptions ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
5011	tell me the review count of restaurants containing QUOTED_STRING_0 as summary	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5012	get the farthest restaurants having telephone equal to PHONE_NUMBER_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
5013	get me the review that was published after DATE_0 and that is rated higher than NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
5014	present restaurant with bigger rating than NUMBER_0 that serves QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5015	i want to know of restaurants that are located here that has the least reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
5016	get the restaurant having more review count than NUMBER_0 that serves QUOTED_STRING_0 with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5017	find phone numbers of restaurants with the location work	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
5018	i want to know the zip code of the restaurant that is the biggest distance from here	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
5019	tell me what are the restaurant reviews with the QUOTED_STRING_0 postal code the farthest from here .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5020	show restaurants that are furthest away from home and have a review count of one and tell me the phone number .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
5021	find all restaurants with QUOTED_STRING_0 in the description that are located nearby .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
5022	what is the restaurant closest to work that has a telephone number PHONE_NUMBER_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] => notify
5023	look for GENERIC_ENTITY_org.schema.Restaurant:Person_0 's reviews with a NUMBER_0 rating or higher .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
5024	grab review rated NUMBER_0 star for restaurant in GENERIC_ENTITY_tt:us_state_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5025	reveal the rating of the dining locales with rating more than 1 with the smallest number of evaluations	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] ) => notify
5026	give me the highest rated QUOTED_STRING_0 restaurant in this area .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5027	what is the restaurant description and type of food serving QUOTED_STRING_0 cuisine ?	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5028	which restaurant having number of evaluations not more than NUMBER_0 and QUOTED_STRING_0 as description gets the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5029	get me what is the country of restaurants having at least NUMBER_0 reviews	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5030	get the country of restaurants having location equal to here	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5031	show me how far restaurants are from work that have a review count of under NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
5032	what is the country of the closest restaurants with QUOTED_STRING_0 as postal code to work ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5033	what 's the description and food type of dining locations that serves QUOTED_STRING_0 food	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5034	grab restaurants with postal code equal to QUOTED_STRING_0 that offer QUOTED_STRING_1 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
5035	show me reviews submitted by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that were published previous to DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
5036	tell me the nearest restaurant with only NUMBER_0 reviews from work to home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5037	show me reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that have rating of NUMBER_0 or less	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5038	retrieve reviews with the author GENERIC_ENTITY_org.schema.Restaurant:Person_0 with a NUMBER_0 rating	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
5039	i am looking for a place to eat in zip code QUOTED_STRING_0 that also has QUOTED_STRING_1 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
5040	i desire restaurants having QUOTED_STRING_0 as served cuisine and phone number equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5041	tell me the restaurant road with the QUOTED_STRING_0 postal code closest to work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5042	amount of evaluations that is in restaurant rated NUMBER_0 star with the largest number of reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) [ 1 ] ) => notify
5043	give me restaurants having description being QUOTED_STRING_0 and QUOTED_STRING_1 as served food type	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
5044	pull up analysis published later than DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 => notify
5045	find reviews of restaurants near my job with review counts less than 1 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
5046	what are the restaurant with less than NUMBER_0 reviews and postal code equal to QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
5047	what are some restaurants around home with QUOTED_STRING_0 as a summary that have the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
5048	get dining locations around me with QUOTED_STRING_0 that is in cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5049	cite the QUOTED_STRING_0 restaurants that have reviews exceeding NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5050	find restaurants with over NUMBER_0 reviews that serve QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5051	show me restaurants that are described having QUOTED_STRING_0 with the phone number being PHONE_NUMBER_0 and that has the least reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
5052	give me reviews having QUOTED_STRING_0 as description and NUMBER_0 or smaller rating	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5053	how close are any GENERIC_ENTITY_tt:us_state_0 restaurants with largest reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) [ 1 ] ) ) => notify
5054	what is the QUOTED_STRING_0 restaurant road as served cuisine ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5055	what 's the highest rated restaurant with a summary that equals QUOTED_STRING_0 and a maximum of NUMBER_0 reviews ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5056	say what is the descriptions of restaurants with rating smaller than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
5057	show me what restaurant that is located at work with the highest rating and serves QUOTED_STRING_0 cuisine .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5058	fetch reviews of restaurants with QUOTED_STRING_0 as summary	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5059	how near is the closest restaurant with telephone equal to PHONE_NUMBER_0 to home from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5060	which restaurants having zero reviews are the furthest distance away ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
5061	name restaurants with NUMBER_0 reviews and a review score higher than NUMBER_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
5062	list a restaurant that has PHONE_NUMBER_0 as its phone number and QUOTED_STRING_0 as a summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5063	what places to eat are in GENERIC_ENTITY_tt:country_0 and have an address that is listed as home ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:home => notify
5064	display for me the rating of restaurant with NUMBER_0 reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5065	show me a restaurant around me with the post code QUOTED_STRING_0 and the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5066	if a restaurant is in the QUOTED_STRING_0 zip code then what state is it in .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
5067	what is a city with a restaurant that serves QUOTED_STRING_0 as the served cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5068	text me what is the city of restaurant having state equal to GENERIC_ENTITY_tt:us_state_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
5069	grab for me the telephone of the restaurant with QUOTED_STRING_0 as postal code closest to work .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5070	show me the QUOTED_STRING_0 restaurants with over NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5071	give me the name of the street with restaurants that are close to here .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5072	get restaurant having description being QUOTED_STRING_0 and QUOTED_STRING_1 in the food type	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
5073	the date of published reviews having a score above NUMBER_0 is what i want , please .	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) => notify
5074	gather for me restaurant around me having NUMBER_0 or more review count	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
5075	tell me the names of the restaurants that serve QUOTED_STRING_0 cuisine , have the word QUOTED_STRING_1 in the summary , and have the maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5076	bring up reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that have a NUMBER_0 star rating	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
5077	i want an image of the restaurant closest to work that is in postal code QUOTED_STRING_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5078	what is the review by GENERIC_ENTITY_org.schema.Restaurant:Person_0 that expresses QUOTED_STRING_0 to specify .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5079	in what country would restaurants with a location the same as work be ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
5080	tell which restaurant telephones are described as QUOTED_STRING_0 with the highest number of reviews	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5081	gather the street address of restaurants having at least 1 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
5082	tell me the restaurant 's name near work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work => notify
5083	get the restaurant in QUOTED_STRING_0 that is nearest to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5084	present the reviews with date of publication after DATE_0 and summary being QUOTED_STRING_0 with the minimum rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5085	what state is the restaurant with the telephone number PHONE_NUMBER_0 located in ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5086	show me reviews which contain QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 => notify
5087	reveal what 's the explanation of the QUOTED_STRING_0 dining locations which has the lowest rating	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5088	what is the state name of restaurant having no reviews .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
5089	what restaurant is close to here that offers QUOTED_STRING_0 with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5090	show me the address of the farthest restaurant with review count less than NUMBER_0 from here .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5091	get the most far away restaurants with at most NUMBER_0 reviews from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
5092	reveal the image and locale of the QUOTED_STRING_0 dining locations closest to work	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5093	what is the rating of review that has QUOTED_STRING_0 in the description	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5094	what restaurants have QUOTED_STRING_0 for a description and a rating under NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
5095	what are the QUOTED_STRING_0 restaurants and ratings above NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5096	what 's the name of the city of restaurants with NUMBER_0 reviews ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5097	find the street of restaurants near here .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5098	what is the postal code of the farthest restaurant with food type that of QUOTED_STRING_0 from work ?	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5099	message me what is the country of restaurant having id equal to QUOTED_STRING_0 .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
5100	name the restaurants with a work address that are rated NUMBER_0 or below .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
5101	show me the QUOTED_STRING_0 food restaurants that have QUOTED_STRING_1 in their description and the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5102	i need dining locations having NUMBER_0 or greater rating which offer QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5103	what ethnicity are the restaurants at my current location	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5104	where are the restaurants that have 1 review that have the most of reviews ?	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) [ 1 ] ) => notify
5105	which restaurant get bigger rating than NUMBER_0 and offer QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5106	i 'd like to know of the farthest restaurants that have a rating of more than NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
5107	what is a restaurant with more that NUMBER_0 reviews and a NUMBER_1 or more rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
5108	gather for me what is the telephone of restaurant with location equal to home .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
5109	display for me the restaurants with NUMBER_0 reviews that are closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
5110	i want the rating of the restaurant at the telephone number PHONE_NUMBER_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5111	say what is the country and telephone of the restaurants around here with the smallest review count .	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
5112	please show me nearby restaurants serving QUOTED_STRING_0 cuisine with at least a NUMBER_0 rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5113	give me all the restaurants with more than NUMBER_0 reviews and have QUOTED_STRING_0 in the description .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
5114	what is the number of reviews for the restaurant with less than 1 review ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
5115	find a restaurant with a rating over NUMBER_0 that has QUOTED_STRING_0 in it 's description and the maximum number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5116	what is the distance to the restaurant that has a rating under 1 to here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) => notify
5117	i want to read review with QUOTED_STRING_0 in the summary posted by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5118	what is the distance of the restaurant with the number PHONE_NUMBER_0 from here to home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5119	i would you to enumerate the restaurants with LOCATION_0 as a city .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 => notify
5120	what 's food type and price of the dining locales with location equal to home with the tiniest number of reviews ?	now => [ param:priceRange:String , param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
5121	message me what is the zip code of restaurant with at least 1 reviews .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
5122	what 's the rating of restaurant having zip code being QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
5123	show pictures of restaurants with less than NUMBER_0 reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
5124	which restaurants around home with QUOTED_STRING_0 in the food type has the tiniest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5125	show me a zip code that has more than NUMBER_0 reviews	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5126	get the state of restaurant with telephone equal to PHONE_NUMBER_0 .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5127	get the city of restaurants having NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5128	restaurants with a review count numbering below NUMBER_0 are in what state ?	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
5129	i 'd like to know the price range of restaurant with a city equal to LOCATION_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
5130	which restaurant around here that serves QUOTED_STRING_0 cuisine having the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5131	find restaurants in this area with a smaller rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
5132	show me the restaurants having at minimum NUMBER_0 reviews most far away from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
5133	say the rating of restaurants near here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5134	i 'd like to know the distance from here to restaurants that have the phone number PHONE_NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) => notify
5135	what is the QUOTED_STRING_0 restaurant that is nearest to home ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5136	state for me what is the reviews of restaurant having city equal to LOCATION_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
5137	fetch the city of restaurant that serve QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5138	look for a review that has QUOTED_STRING_0 as it 's description that was posted by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5139	which restaurant here having QUOTED_STRING_0 in the food type has the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5140	get restaurant around home having NUMBER_0 or lower review count .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:home => notify
5141	what amount of restaurants with no more than 1 review exist ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
5142	tell me the rating of restaurant that has no reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
5143	i need to see the picture of restaurants that have a rating of above NUMBER_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
5144	tell me the average number of QUOTED_STRING_0 restaurants in the summary with the least feedback	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5145	gather the descriptions of review with rating at most NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
5146	find a QUOTED_STRING_0 restaurant with a NUMBER_0 rating .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5147	find the restaurant at phone number PHONE_NUMBER_0 and the most reviews that serve QUOTED_STRING_0 food .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
5148	display for me the cuisine for the restaurant that has a review count above NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5149	how many total reviews does restaurants in QUOTED_STRING_0 have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
5150	which restaurants with an address equal to work have a better than NUMBER_0 rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
5151	show me restaurants near my house that have less than NUMBER_0 reviews .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5152	show the reviews for restaurants in LOCATION_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
5153	show me the descriptions of restaurant having location equivalent to work	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
5154	get me the price range of the nearest restaurants with food type being QUOTED_STRING_0 to work .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5155	what is both the telephone and state of the restaurant having larger rating than NUMBER_0 that is closest to here	now => [ param:address.addressRegion:Entity(tt:us_state) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5156	what are restaurants by my house that have less than NUMBER_0 reviews ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5157	what distance is the restaurant around here with the least evaluations to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
5158	for restaurants with a rating no higher than 1 and nearest to work , what is the telephone number ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) => notify
5159	i need reviews published before DATE_0 for restaurants that have more than NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5160	provide a review that was published after DATE_0 that involves QUOTED_STRING_0 restaurants around work .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5161	what is the restaurants with rating larger than 1 which is most far away from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] => notify
5162	which QUOTED_STRING_0 restaurant has a review count not more than NUMBER_0 and has the lowest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5163	what is the distance from work of the QUOTED_STRING_0 restaurant that is closest to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
5164	grab reviews with a rating of more than 1 , but with a maximum of NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5165	gather review rated NUMBER_0 star for restaurant in GENERIC_ENTITY_tt:us_state_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5166	what reviews with a QUOTED_STRING_0 description did GENERIC_ENTITY_org.schema.Restaurant:Person_0 write ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5167	grab the restaurant which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
5168	how many total reviews in the restaurants with telephone equal to PHONE_NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5169	i 'd like to know where to find the highest rated QUOTED_STRING_0 restaurant .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5170	which restaurant has NUMBER_0 reviews that is the biggest distance from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
5171	gather the QUOTED_STRING_0 restaurant with the tiniest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5172	what are the restaurants with the QUOTED_STRING_0 score of NUMBER_0 in the kitchen that have the highest rating ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5173	find review that has QUOTED_STRING_0 in the description and tell me the rating	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5174	on what street can i find the restaurant with less than NUMBER_0 reviews that is farthest from work ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5175	show the restaurants with the largest distance from work that have descriptions that say QUOTED_STRING_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5176	show me evaluations having QUOTED_STRING_0 as summary and NUMBER_0 or less rating	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5177	find the location of restaurant with NUMBER_0 reviews ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5178	i 'd like to know the closest restaurant with a location that is work to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
5179	what restaurants having QUOTED_STRING_0 that is in cuisine and telephone equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5180	find the restaurants with a QUOTED_STRING_0 menu and less than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5181	which QUOTED_STRING_0 restaurant has the highest review number and the telephone number PHONE_NUMBER_0 ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
5182	show the location and picture of the furthest QUOTED_STRING_0 restaurant .	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5183	list restaurants having served food type equal to QUOTED_STRING_0 and rating equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5184	get reviews in restaurant having review count larger than NUMBER_0 and location equal to work	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5185	what is the name and price range of the restaurant in GENERIC_ENTITY_tt:us_state_0 ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
5186	show me the distance from work of a restaurant with a rating of under NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) => notify
5187	how far away is restaurants near work to here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
5188	which reviews have a NUMBER_0 or under rating and a description equaling QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5189	present me with restaurants near work with least reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] => notify
5190	find the restaurants having QUOTED_STRING_0 in the postal code which offers QUOTED_STRING_1 with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
5191	i want restaurant in GENERIC_ENTITY_tt:country_0 with rating equivalent to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
5192	amount of evaluations are there that is in restaurant in GENERIC_ENTITY_tt:us_state_0 which is most far away in distiction to work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
5193	get restaurants around home having QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
5194	i want t see the description of the restaurants closest to the QUOTED_STRING_0 postal code .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5195	please come up with QUOTED_STRING_0 restaurants that include details about QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5196	how close is the restaurants with bigger review count than NUMBER_0 with the tiniest number of reviews from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
5197	i want to find the zip code of the restaurant with an id of exactly QUOTED_STRING_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
5198	find the distance to restaurants from work with a review count that is exactly NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
5199	how near is restaurant having zero reviews to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
5200	where is the restaurant with review count equivalent to NUMBER_0 with the largest count of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) => notify
5201	show me a picture of the restaurant closest to me with a lower rating than NUMBER_0 , and what is the food type it offers ?	now => [ param:image:Entity(tt:picture) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5202	retrieve the restaurants having QUOTED_STRING_0 as summary and country equal to GENERIC_ENTITY_tt:country_0 with the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5203	what is the address of the restaurants with larger review count than NUMBER_0 farthest from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5204	bring forth restaurant having served cuisine being QUOTED_STRING_0 and zip code equal to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5205	i want reviews of restaurants with reviews fewer than 1 that are close to the job .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
5206	for restaurants with a NUMBER_0 count of reviews , what is the applicable zip code ?	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5207	find a picture of a restaurant near here	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5208	what is the description of the restaurants with rating fewer than NUMBER_0 most far away from home ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5209	i want to know the rating of QUOTED_STRING_0 restaurants with the lowest rating .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5210	show QUOTED_STRING_0 restaurants and their food type and their number .	now => [ param:servesCuisine:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5211	search the QUOTED_STRING_0 restaurant closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5212	where is the restaurants by here that serves QUOTED_STRING_0 cuisine	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5213	find me the furthest away restaurant from home that has a higher review count than NUMBER_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
5214	for restaurants with NUMBER_0 reviews which state are they located in	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5215	please list restaurants with review count equivalent to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
5216	what are restaurants around home that cooks QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5217	tell me the city of a restaurant that 's got no less than NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5218	what restaurant has the most reviews in this area ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
5219	i want to know the review count of restaurants close to my home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
5220	let me know what 's the country of restaurant around here	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5221	which restaurants around home with QUOTED_STRING_0 as summary gets the biggest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
5222	where is the furthest restaurant having postal code equal to QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5223	what review was submitted by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and has QUOTED_STRING_0 for a description ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5224	show me a restaurant that has QUOTED_STRING_0 cuisine with a rating of NUMBER_0 or more	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5225	which reviews get NUMBER_0 or larger rating and is authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
5226	what 's the address of the furthest restaurant from here with less than NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5227	how close to home is a restaurant with zero reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
5228	please tell me the street address of restaurants which have received 1 review at least .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
5229	give me the review that is rated NUMBER_0 stars for restaurants that are rated NUMBER_1 stars .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_1 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5230	let me know the dining locations having QUOTED_STRING_0 that is in zip code that serves QUOTED_STRING_1 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
5231	what review is summarized as GENERIC_ENTITY_org.schema.Restaurant:Person_0 's QUOTED_STRING_0 along with having the minimum rating available ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5232	show me restaurants that serve QUOTED_STRING_0 food in GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5233	i want to see photos of restaurants that have the greatest review count	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
5234	what 's the explanation of review having later date published than DATE_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) => notify
5235	name the restaurant that 's farthest away from here with a location that equals work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
5236	reveal what 's the street of restaurants with less then a NUMBER_0 rating	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
5237	for the restaurants that have the description of QUOTED_STRING_0 display for me the summary .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5238	name the city containing restaurants with a higher than NUMBER_0 rating .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
5239	where is the restaurants having review count higher than NUMBER_0 and phone number equivalent to PHONE_NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5240	show me the reviews of NUMBER_0 star restaurants	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
5241	tell me what is the telephone of restaurants having review count equal to NUMBER_0 .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5242	what is the rating of the restaurant that is nearest to home	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
5243	i 'm looking for restaurants close to work that provide QUOTED_STRING_0 food and have the most reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5244	i 'd like to see the review of a restaurant created after DATE_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 ) => notify
5245	which restaurants are near here and offer QUOTED_STRING_0 food ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5246	what are the total restaurants having address equal to here and cuisine being QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5247	show me restaurants located at work with a rating equal to or greater than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
5248	which restaurants that serve QUOTED_STRING_0 food have more than NUMBER_0 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5249	what restaurants have QUOTED_STRING_0 for their summary and offer QUOTED_STRING_1 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
5250	how close to me are restaurants that have no reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
5251	get me the rating of the closest restaurant with more review count than NUMBER_0 to here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5252	show me review having earlier date published than DATE_0 and lower rating than NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5253	what are GENERIC_ENTITY_tt:country_0 's QUOTED_STRING_0 restaurants	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5254	bring up the lowest rated restaurant in the QUOTED_STRING_0 postal code ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5255	fetch the restaurant in this area having postal code equal to QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5256	which are restaurant having NUMBER_0 reviews and NUMBER_1 or bigger rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_1 and param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
5257	show me restaurant reviews with the highest number of reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
5258	let me see restaurant reviews for a place matching the work location .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
5259	search for the worst rated restaurants with a maximum of NUMBER_0 reviews and a location which equals home .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5260	how many restaurant having at highest 1 reviews are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
5261	get the QUOTED_STRING_0 and QUOTED_STRING_1 restaurant as a rundown .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5262	get restaurants here with the QUOTED_STRING_0 postal code .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
5263	how close are restaurants with a lower rating than 1 that 's closest to the job .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) ) => notify
5264	are NUMBER_0 star restaurants far away from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
5265	i 'd like to know the location of a QUOTED_STRING_0 restaurant that has the greatest rating .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5266	what distance are the most far away dining locales having description being QUOTED_STRING_0 in distiction to here from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
5267	show me the descriptions for the restaurants that have an id equal to QUOTED_STRING_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
5268	find reviews equal to NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
5269	which are restaurants with location equivalent to work and review count higher than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work => notify
5270	please advise me of a QUOTED_STRING_0 restaurant in my locality .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5271	what are restaurants around home that sells QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5272	fetch the restaurant with location equal to here closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
5273	seek for me the restaurant around me with QUOTED_STRING_0 in the postal code with the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5274	how many reviews does the furthest away restaurants in GENERIC_ENTITY_tt:us_state_0 from here have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
5275	show me the restaurants that offer QUOTED_STRING_0 food near here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5276	i need QUOTED_STRING_0 restaurant with rating at minimum NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5277	tell me the city of a restaurant that 's near my home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
5278	tell me the location of the restaurant with a higher review count than NUMBER_0 that is the most far away .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5279	what 's the restaurant road nearby ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5280	amount of evaluations does dining locations having less than than 1 reviews have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
5281	show me the furthest restaurant from home with the more than reviews than 1 .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
5282	what restaurants have a rating of NUMBER_0 that are closest to home ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
5283	find the restaurant with location equal to home	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
5284	tell me the restaurant photo that has more than NUMBER_0 comments	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5285	tell me the rating of the restaurant that is farthest away and serves QUOTED_STRING_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5286	grab the distance from home of restaurants with rating equal to NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
5287	i want to know the zip code of restaurants that have a bigger rating than NUMBER_0 that are farthest	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5288	how far away is restaurant having no reviews to home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
5289	give me all restaurants in GENERIC_ENTITY_tt:us_state_0 that are rated at least NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
5290	which restaurants are located in GENERIC_ENTITY_tt:country_0 and get telephone equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5291	what is the distance to restaurants with less than NUMBER_0 reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) => notify
5292	i want to know the review count of the restaurant that has the zip code QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5293	what street contains the restaurant with a PHONE_NUMBER_0 phone number ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5294	show me what is the distance to restaurants with id equal to QUOTED_STRING_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) => notify
5295	for restaurants that don't have any reviews i want to know the price range .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
5296	seek review having author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
5297	search for restaurants in and around my locale with the best possible rating and NUMBER_0 reviews .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5298	what 's the location of the restaurant furthest from home with a complete absence of reviews ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) => notify
5299	which restaurants with an address equivalent to home are located in GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:home => notify
5300	please give me the restaurant name with a minimum of 1 review .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 => notify
5301	show the rating of review having author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
5302	i 'd like to see QUOTED_STRING_0 restaurants with the biggest number of reviews .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5303	get me what is the food type of restaurants with LOCATION_0 as city	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
5304	how far is the restaurants with 1 reviews closest to home from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
5305	what QUOTED_STRING_0 restaurants are in this vicinity ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5306	display for me the location of a restaurant that has at least NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5307	with restaurants of places with a review count of more than NUMBER_0 , tell me the cuisine .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5308	can you identify a QUOTED_STRING_0 restaurant that has the highest ranking with no less than NUMBER_0 reviews ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5309	find me a restaurant with a zip code that starts with QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
5310	name the places to eat that have exactly NUMBER_0 reviews and a rating of NUMBER_1 or more .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_1 and param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
5311	find a restaurant with QUOTED_STRING_0 as a summary and review with a total of NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
5312	how well is the restaurant with QUOTED_STRING_0 in the description rated ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5313	what are the restaurant with fewer than NUMBER_0 reviews and postal code equivalent to QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
5314	what is the reviews of the restaurant with the greatest rating ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
5315	show all NUMBER_0 star reviews made by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
5316	let me know dining locations with telephone equal to PHONE_NUMBER_0 and number of evaluations not more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5317	find the closest restaurant that has a city equal to LOCATION_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) ) [ 1 ] => notify
5318	what is the name of restaurant by work	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work => notify
5319	i need all reviews created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with rating equal to NUMBER_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
5320	text me the street of the restaurant with cuisine being QUOTED_STRING_0 with the biggest number of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5321	which restaurant having served cuisine being QUOTED_STRING_0 and NUMBER_0 or larger rating has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5322	what restaurants get rating at minimum NUMBER_0 and state equal to GENERIC_ENTITY_tt:us_state_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
5323	find restaurants with NUMBER_0 or fewer reviews and location being work	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:work => notify
5324	tell me which QUOTED_STRING_0 restaurants have the lowest rating and show the description .	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5325	find out who wrote reviews with the biggest rating	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
5326	text me the restaurant having postal code being QUOTED_STRING_0 and summary being QUOTED_STRING_1 which has the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
5327	i want to know the reviews of restaurants with the highest rating .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
5328	gather for me the restaurants having NUMBER_0 reviews that is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
5329	how close are restaurants with a rating under 1 that are closest to work from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) ) => notify
5330	reveal what 's the city of the most distant restaurant having QUOTED_STRING_0 that is in explanation in distiction to here	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5331	of the restaurants with QUOTED_STRING_0 in the description , which have the telephone number of PHONE_NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5332	find a restaurant near here that has this phone number PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5333	i want the reviews that have a rating of NUMBER_0 or higher .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
5334	of restaurants with more than 1 rating , show me the ratings of the furthest restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
5335	can you tell me the image of the restaurant that has a review count of more than NUMBER_0 that is closest to work ?	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5336	i want to know the fewest reviewed restaurants and the country that 's close to my home .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
5337	find restaurants in GENERIC_ENTITY_tt:country_0 that include QUOTED_STRING_0 in their overview .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:description:String =~ QUOTED_STRING_0 => notify
5338	what city has restaurants equal to this location ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5339	which are the restaurants with location equivalent to work and rating at least NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
5340	what 's the nearest city with restaurants with review counts below NUMBER_0 ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5341	grab the restaurants having review count equal to NUMBER_0 with the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] => notify
5342	tell me the amount of reviews in the restaurant with the largest rating	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
5343	show me the distance of nearby restaurants with more than NUMBER_0 reviews either from home or work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5344	inform me the town of the dining business with more review number than NUMBER_0 with the least evaluations	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
5345	show me what the restaurant street does not surpass NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
5346	fetch the restaurant with at least NUMBER_0 reviews with the largest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
5347	which is the restaurant having NUMBER_0 or greater review count which serves QUOTED_STRING_0 food with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5348	enumerate reviews which was created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
5349	seek for me what is the food type of restaurant with telephone equal to PHONE_NUMBER_0	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5350	gather the name of restaurant having higher review count than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
5351	i want to know the name of a restaurant with maximum NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
5352	what country is the restaurant that has id equal to QUOTED_STRING_0 located in	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
5353	for restaurants with a rating higher than NUMBER_0 and having the most reviews , please provide those reviews to me .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
5354	find the closest restaurants with the zip code QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) => notify
5355	search restaurants having phone number equivalent to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5356	i need to find a restaurant near my work at QUOTED_STRING_0 postal code .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5357	what is the summary and cuisine type of restaurants that serves QUOTED_STRING_0 food .	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5358	which is the restaurants having QUOTED_STRING_0 in the postal code and QUOTED_STRING_1 as description which has the smallest review count ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:description:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
5359	show me reviews pertaining to restaurants with a summary of QUOTED_STRING_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5360	how near is the restaurants with review count equal to NUMBER_0 with the fewest count of reviews from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) ) => notify
5361	i 'm looking for restaurants with work is the address with a rating of NUMBER_0 and over	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
5362	can you tell me how far from here the nearest restaurant is that has a phone number equal to PHONE_NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5363	which is the restaurants having QUOTED_STRING_0 as description and QUOTED_STRING_1 in the cuisine which has the minimum review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
5364	what are the closest QUOTED_STRING_0 restaurants near me ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5365	find the closest restaurant to work that has an id called QUOTED_STRING_0	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5366	tell me the distance from my house to the restaurant that has fewer than NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5367	what is the restaurant in this area whose cuisine is QUOTED_STRING_0 and that has the minimum rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5368	which are restaurants having location equivalent to here that offer QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5369	seek me the rating of the restaurants with rating more than 1 with the smallest number of reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] ) => notify
5370	tell me the number of a reviews a restaurant in GENERIC_ENTITY_tt:us_state_0 has .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
5371	find all reviews with a rating less than NUMBER_0 and more that NUMBER_1 reviews .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
5372	find reviews created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having summary being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5373	what is the address of the restaurants with bigger review count than NUMBER_0 farthest from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5374	list restaurants with QUOTED_STRING_0 postal code	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
5375	give me all reviews of restaurants with QUOTED_STRING_0 in their description that have more than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5376	name the places to eat that have the lowest rating out of restaurants that are right near me with NUMBER_0 or less reviews .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5377	bring up the image of an area restaurant .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5378	give me all the GENERIC_ENTITY_org.schema.Restaurant:Person_0 reviews that have QUOTED_STRING_0 in the description .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5379	show me an image of the closest restaurant to work that is in the postal code QUOTED_STRING_0	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5380	pull up review uploaded by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having NUMBER_0 or smaller rating	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5381	say what is the name of the restaurant in this area with the biggest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
5382	tell me the street of the furthest QUOTED_STRING_0 joint from my job .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5383	which restaurant with a location of home and a postal code of QUOTED_STRING_0 has gotten the smallest amount of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
5384	get me the postal code of the farthest restaurants with greater rating than NUMBER_0	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5385	what are the closest restaurants to my home and work that have more than NUMBER_0 reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5386	what is the restaurant farthest from here that has QUOTED_STRING_0 in the description ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5387	i am interested in the restaurant with the zip code that begins with QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 => notify
5388	show me QUOTED_STRING_0 restaurants with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5389	which are reviews by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with summary equivalent to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5390	tell me a restaurant that is described as QUOTED_STRING_0 and has phone number PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5391	find reviews with a NUMBER_0 star rating written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
5392	which review having summary being QUOTED_STRING_0 and creator equivalent to GENERIC_ENTITY_org.schema.Restaurant:Person_0 gets the minimum rating ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5393	what restaurants have the same country as GENERIC_ENTITY_tt:country_0 and the QUOTED_STRING_0 postal code	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
5394	i want to see restaurants with a 1 rating that has the fewest reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] ) => notify
5395	i want NUMBER_0 star restaurants that serve QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5396	nearby my job , how close are the restaurants rated lower than 1 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) ) => notify
5397	tell me telephone restaurants equivalent to + PHONE_NUMBER_0 and no more than NUMBER_0 ratings	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5398	fetch QUOTED_STRING_0 restaurants with address equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5399	what restaurant is close by and has a score of NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
5400	fetch reviews made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 with description being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5401	name the places that have less than NUMBER_0 reviews and that serve QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5402	give me the restaurant that has over NUMBER_0 reviews and is furthest from home .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5403	tell me the type of food served at the restaurants closest to here , with rating greater than NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5404	what are the food types of the restaurants near where i live .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
5405	find restaurants that serve QUOTED_STRING_0 food and are located in GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5406	what are the restaurants with QUOTED_STRING_0 cuisine and a QUOTED_STRING_1 description ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5407	where is the dining locations around work in GENERIC_ENTITY_tt:us_state_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) => notify
5408	what QUOTED_STRING_0 restaurants are located in GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5409	which restaurant near work has NUMBER_0 or more reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) => notify
5410	fetch the name of restaurant having higher review count than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
5411	tell me which reviews are for the restaurant that has a NUMBER_0 star rating .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5412	show me restaurants which cooks QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5413	what is the country of the restaurant that has a phone number equal to PHONE_NUMBER_0 ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5414	which review is made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and get date published after DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
5415	how about QUOTED_STRING_0 restaurants in GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5416	find for me for restaurants with at least NUMBER_0 reviews the ones have the most reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
5417	find a restaurant with a rating of NUMBER_0 and that has QUOTED_STRING_0 in the review .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
5418	tell me the rating of the nearest restaurant .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
5419	find out restaurant with telephone equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5420	which review is published on the most recent date ?	now => ( sort param:datePublished:Date asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
5421	what 's a restaurant that has QUOTED_STRING_0 food and is located in my area .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5422	i desire restaurants having NUMBER_0 or greater rating which offer QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5423	find reviews that were published before DATE_0 and were rated lower than NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5424	how close away is the restaurants rated NUMBER_0 star which is closest to work from here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5425	what is the number of restaurants with the type of food called QUOTED_STRING_0 nearest to here ?	now => [ param:aggregateRating.reviewCount:Number , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5426	tell me restaurants that has the location of here with the smallest amount of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
5427	which restaurants in GENERIC_ENTITY_tt:country_0 serve QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5428	where is the dining locales having QUOTED_STRING_0 that is in postal code and location equal to here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) => notify
5429	seek the restaurant with lower rating than NUMBER_0 with the smallest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
5430	name the eateries with a rating under NUMBER_0 and a QUOTED_STRING_0 menu .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5431	tell me what restaurant offers QUOTED_STRING_0 cuisine and are in the state of GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5432	where can i find a restaurant with phone number PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5433	what is the total number of reviews for the restaurant with over NUMBER_0 reviews have that is closest to me .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5434	which restaurants have phone number equal to PHONE_NUMBER_0 and description equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5435	what 's the name of the restaurant that has exactly NUMBER_0 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
5436	please get restaurant having zero reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 => notify
5437	what reviews are there for restaurants with a QUOTED_STRING_0 summary ?	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5438	show me the restaurants that are fartherest from home have a rating lower than NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
5439	tell me reviews of less than NUMBER_0 rating that are in GENERIC_ENTITY_tt:country_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5440	please help me determine the restaurants that mention QUOTED_STRING_0 in their introduction and have the greatest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
5441	tell me where the restaurant with NUMBER_0 reviews is located .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5442	for restaurants with QUOTED_STRING_0 as the zip code , tell me the phone number of the one farthest from work	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5443	which restaurant get cuisine being QUOTED_STRING_0 and country equal to GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5444	what is the price range of a restaurant that has less than NUMBER_0 reviews ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
5445	please fetch restaurants having summary equal to QUOTED_STRING_0 and more review count than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
5446	show me the name of restaurants having location equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location => notify
5447	show me the summary of restaurants containing description being QUOTED_STRING_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5448	i demand restaurants having QUOTED_STRING_0 in the cuisine and rating not more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5449	what are QUOTED_STRING_0 restaurant in this area with zip code equal to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5450	name all restaurants who 's description is QUOTED_STRING_0 and that have ratings of less than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
5451	which restaurant having served food type being QUOTED_STRING_0 and NUMBER_0 or greater rating has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5452	find the most reviewed restaurant with a rating of under 1 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) [ 1 ] ) ) => notify
5453	i 'd like to find out the distance between here and restaurants in LOCATION_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
5454	show me restaurants nearby that offer QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5455	show restaurants with a rating of NUMBER_0 minimum and a summary called QUOTED_STRING_0 with the most review	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5456	grab restaurants with larger rating than NUMBER_0 and QUOTED_STRING_0 as served cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5457	grab the date published of reviews having rating equivalent to NUMBER_0	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
5458	i want QUOTED_STRING_0 restaurants in the kitchen and i don't need more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5459	give me all the restaurants with a review written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) } => notify
5460	show me the closest restaurants having location equal to here to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
5461	seek me the name of the restaurant which is nearest to here .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] => notify
5462	which QUOTED_STRING_0 restaurants have a rating of NUMBER_0 or more ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5463	how many reviews do restaurant with review count equivalent to NUMBER_0 have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5464	tell me where the location of a restaurant with a rating of NUMBER_0 stars is .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
5465	i need the closest restaurant with only NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) ) => notify
5466	get QUOTED_STRING_0 in the restaurants around me .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5467	what is the restaurant that serves QUOTED_STRING_0 food with the fewest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5468	what 's the range from home to QUOTED_STRING_0 restaurants in the kitchen ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
5469	which are restaurants with telephone equivalent to PHONE_NUMBER_0 which offer QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5470	i want to see restaurants that have less than a NUMBER_0 review count that are the largest distance from this location	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
5471	where is the restaurants with NUMBER_0 or more review count and address equivalent to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) => notify
5472	i would like to know the distance from work of the restaurant that has a rating of under NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) ) => notify
5473	where is the restaurant located that has more than NUMBER_0 reviews with the smallest total review count .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
5474	show me restaurants near home that serve QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5475	tell me the distance of restaurants with QUOTED_STRING_0 as food from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
5476	how do the descriptions of restaurants with a rating of less than NUMBER_0 sound ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
5477	give me all the restaurants near here in GENERIC_ENTITY_tt:us_state_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
5478	what 's the country of restaurant having more than 1 evaluations	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
5479	search for GENERIC_ENTITY_tt:us_state_0 restaurants with NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
5480	which is the review having description being QUOTED_STRING_0 and author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 which has the smallest rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5481	show me the reviews of the restaurants that have less then NUMBER_0 reviews .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
5482	show me the street of the restaurant with cuisine being QUOTED_STRING_0 with the highest number of evaluations	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5483	please bring up restaurants with cuisine equal to QUOTED_STRING_0 and rating not more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5484	list restaurant having state equal to GENERIC_ENTITY_tt:us_state_0 which offer QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5485	tell me the city of restaurant with QUOTED_STRING_0 as served food type .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5486	find the highest rated restaurant	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
5487	what is the nearest distance for restaurants in GENERIC_ENTITY_tt:us_state_0 from home to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
5488	amount of evaluations that is in dining locales with telephone equal to PHONE_NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5489	how many reviews are there in the restaurant having larger rating than 1 nearest to here ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
5490	i 'd like to see pictures of restaurants that contain more than NUMBER_0 reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5491	i want the address of restaurants that are close to me .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5492	what restaurant serves QUOTED_STRING_0 food and has no more than NUMBER_0 stars with the lowest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5493	find me a restaurant in GENERIC_ENTITY_tt:us_state_0 that serve cuisine that is QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5494	alert me the city of the restaurant with more number of evaluations than NUMBER_0 with the least reviews	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
5495	how near are the restaurants with smaller rating than 1 which is closest to work from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] ) ) => notify
5496	fetch location of restaurant having food type containing QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5497	locate reviews that are more than NUMBER_0 for a restaurant in the immediate vicinity of work .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5498	find restaurants nearest to home that have greater than a NUMBER_0 rating .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5499	what restaurant is the longest distance from here and has a review count of NUMBER_0 ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] => notify
5500	find me restaurants that have QUOTED_STRING_0 in their description and serve QUOTED_STRING_1 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
5501	find the restaurant having QUOTED_STRING_0 in the food type and location equal to work which has the biggest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5502	which restaurant having rating not higher than NUMBER_0 and address equal to home gets the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
5503	give the street name of the most reviewed QUOTED_STRING_0 restaurant .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5504	tell me the names of the restaurants around me with the highest ratings .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
5505	what are QUOTED_STRING_0 restaurant having smaller review count than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5506	find the image of restaurant having more review count than NUMBER_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5507	farthest away from home and work , how far is it to restaurants with no more than NUMBER_0 reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5508	show me the furthest restaurants with only NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5509	show me the number of reviews restaurants with ratings lower than NUMBER_0 with the fewest ratings .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
5510	i desire restaurants that serves QUOTED_STRING_0 food , with rating at least NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5511	i want to read reviews rated higher than NUMBER_0 .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) => notify
5512	get me the number of reviews of restaurants around me .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5513	display the city in which restaurants near me are located .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5514	what 's the price range of restaurants with bigger than NUMBER_0 ratings that 's nearest home .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5515	find reviews NUMBER_0 star QUOTED_STRING_0 restaurants .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5516	retrieve restaurant around home having NUMBER_0 or less review count .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:home => notify
5517	provide the amount of reviews for restaurants located at home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
5518	list the restaurant with more than 1 star	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) => notify
5519	find images of restaurants higher rated than NUMBER_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
5520	get me the image and location of the QUOTED_STRING_0 restaurants closest to work	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5521	how far are the restaurant having country equal to GENERIC_ENTITY_tt:country_0 that is closest to work in distiction to here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
5522	where are the closest restaurants with a telephone number of + PHONE_NUMBER_0 ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
5523	which are restaurant having state equal to GENERIC_ENTITY_tt:us_state_0 and review count equivalent to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
5524	how close are the restaurant having no reviews with the highest number of reviews to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) [ 1 ] ) ) => notify
5525	i 'd like to see restaurants that have maximum rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
5526	i want to know the closest restaurants with zip codes QUOTED_STRING_0 furthest from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
5527	how many reviews do the restaurants with review count equivalent to NUMBER_0 that is farthest from work have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
5528	name me the restaurants with more review count than NUMBER_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
5529	what number of restaurants have the same location as home ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
5530	get me what is the image of the nearest restaurants with QUOTED_STRING_0 in the description to work	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5531	how many total reviews do the restaurants with review count fewer than NUMBER_0 that is closest to here have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5532	what 's the total review count for nearby restaurants with a rating of more than 1 ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] ) => notify
5533	get restaurants in this area with telephone number equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5534	describe the restaurants that have a rating under NUMBER_0 stars and are the farthest from home .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5535	find a review with a description QUOTED_STRING_0 an author being GENERIC_ENTITY_org.schema.Restaurant:Person_0 that has the smallest rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5536	what is the rating of the nearest restaurant from here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
5537	retrieve reviews for me that have ratings higher than NUMBER_0 in restaurants that have NUMBER_1 reviews or under .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_1 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5538	fetch the price range of restaurant having city equal to LOCATION_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
5539	tell me restaurants near me that sell QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5540	gather the nearest restaurant having city equal to LOCATION_0 to home .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) ) [ 1 ] => notify
5541	what is the name of the restaurant called with over 1 review that is furthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) ) [ 1 ] => notify
5542	search QUOTED_STRING_0 restaurant having telephone number equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5543	what is the creator of the reviews which has the highest rating	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
5544	tell me the food type of the restaurants with a bigger rating of NUMBER_0 and the fewest reviews .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
5545	pull up restaurants with state equal to GENERIC_ENTITY_tt:us_state_0 and rating at least NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
5546	what is the rating for restaurants with NUMBER_0 reviews	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5547	i 'm looking for a restaurant that serves QUOTED_STRING_0 food that has the largest distance from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5548	display the image of a restaurant that 's in the vicinity .	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5549	i want to see the reviews for the restaurants that have a minimum number of reviews .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
5550	looking for the summary and type of food for restaurants that have QUOTED_STRING_0 cuisine	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5551	where is the restaurants in GENERIC_ENTITY_tt:country_0 with the biggest amount of reviews	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) => notify
5552	with the QUOTED_STRING_0 description show restaurant reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5553	search for me the distance of restaurants having cuisine equal to QUOTED_STRING_0 from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) => notify
5554	what restaurant is closest to my home location	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) ) [ 1 ] => notify
5555	tell me restaurants by here with a review count greater than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
5556	seek restaurant having summary equal to QUOTED_STRING_0 and review count higher than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
5557	tell me the street address of a restaurant whose location is equal to this location .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5558	tell me the name of those reviews with a greater than NUMBER_0 rating .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
5559	find the restaurants with reviews numbering more than NUMBER_0 and a description equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
5560	seek the distance from work to restaurant with at least NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
5561	i would like to know which restaurants have an address equal to here and lower than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:current_location => notify
5562	which restaurants have lower rating than NUMBER_0 and are in GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number <= NUMBER_0 => notify
5563	where is the restaurant rated NUMBER_0 star which is furthest away from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) => notify
5564	what is the cuisine type of the restaurants with food type being QUOTED_STRING_0 most far away from home ?	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5565	what QUOTED_STRING_0 restaurants that are rated at least NUMBER_0 have the most reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5566	find a restaurant rated NUMBER_0 which is located in GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
5567	find the reviews with QUOTED_STRING_0 in the description and have the maximum rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5568	show me the restaurant with a review count lower than NUMBER_0 serving QUOTED_STRING_0 cuisine that has the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5569	what is the location of the restaurants having QUOTED_STRING_0 in the description closest to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5570	find a restaurant with 1 star that is farthest from work .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
5571	how many total reviews do restaurant with review count equal to NUMBER_0 have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5572	show me the NUMBER_0 star restaurant reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5573	which restaurant here in GENERIC_ENTITY_tt:country_0 having the maximum rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5574	get restaurants having address equal to work and NUMBER_0 or lower rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
5575	what restaurants have more than NUMBER_0 reviews and are not rated higher than NUMBER_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
5576	gather the number of reviews of restaurant with location equal to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
5577	where is the restaurant around home containing QUOTED_STRING_0 in the cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5578	which is the restaurants with no reviews closest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
5579	please advise me of restaurants in post code QUOTED_STRING_0 that feature QUOTED_STRING_1 dishes .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
5580	name the city that 's got a restaurant with less than 1 as its review count .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
5581	tell me how many reviews are in the restaurant with NUMBER_0 reviews or more .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5582	show me the most reviewed restaurant with a rating lower than NUMBER_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
5583	for restaurants that have NUMBER_0 reviews , please give me the address of them .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5584	how far is the restaurant having QUOTED_STRING_0 in the description that is nearest to here to here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
5585	seek the restaurant rated 1 stars which is farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
5586	is there a restaurant that servies QUOTED_STRING_0 food close to me ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5587	for the restaurant with no reviews , what is the zip code ?	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
5588	show me a restaurant that has QUOTED_STRING_0 as a cuisine and a description of QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5589	what are the QUOTED_STRING_0 restaurants serving cooking and QUOTED_STRING_1 as a description with the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5590	show me the restaurant having location equal to work which is farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
5591	what restaurants in GENERIC_ENTITY_tt:country_0 with the most reviews are rated NUMBER_0 or above ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
5592	i 'd like to know of country of restaurants with rating equal to NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
5593	get the city of restaurants having location equal to here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5594	i want to find a restaurant that serves QUOTED_STRING_0 with no more than NUMBER_0 reviews but is the highest rated .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5595	show restaurants near my place of work and tell me their descriptions .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
5596	where is the restaurant with this number PHONE_NUMBER_0 that has the most reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] ) => notify
5597	what restaurants get cuisine equal to QUOTED_STRING_0 and is nearby .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5598	where is the restaurants with served food type being QUOTED_STRING_0 and rating at least NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5599	which reviews were written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and have QUOTED_STRING_0 in the summary ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5600	show the restaurant with at least NUMBER_0 reviews that is farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
5601	show me how close the furthest restaurant is to my job , that has less than NUMBER_0 reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5602	get the restaurant score with a check count of less than 1	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
5603	how far away is the closest restaurants rated NUMBER_0 star to work from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5604	tell me how many reviews QUOTED_STRING_0 restaurants have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5605	what is the current review count of the restaurants with QUOTED_STRING_0 in the description with the largest count of reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5606	tell me the review for restaurants that have a description being QUOTED_STRING_0 and that have more than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5607	get me the street of the restaurants with postal code containing QUOTED_STRING_0 which is nearest to work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5608	i want reviews written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
5609	how far are NUMBER_0 star restaurants from here	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
5610	get the restaurant having rating lower than 1 which is closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) ) [ 1 ] => notify
5611	enumerate reviews with author the same as GENERIC_ENTITY_org.schema.Restaurant:Person_0 and QUOTED_STRING_0 as summary .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5612	search for the closest restaurant having no reviews to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
5613	get all the restaurants with a zip code of QUOTED_STRING_0 and are near home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
5614	show me GENERIC_ENTITY_org.schema.Restaurant:Person_0 reviewed restaurants that have more than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5615	tell me about the restaurant with at least NUMBER_0 reviews that is the farthest from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
5616	bring up the restaurant that 's furthest from work and has not gotten any reviews .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
5617	what is the location of dining locations greater than NUMBER_0 evaluations	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5618	get the rating of reviews having rating equal to NUMBER_0	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
5619	i 'd like to know which restaurant has a review count of over NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
5620	what is the state of this restaurant here	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5621	show me restaurants near my work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work => notify
5622	get me what is the review count of the restaurants with lower rating than NUMBER_0 with the smallest count of reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
5623	which are the restaurant which cooks QUOTED_STRING_0 and with description equal to QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5624	fetch me what is the description of the QUOTED_STRING_0 restaurants which has the lowest rating .	now => [ param:description:String ] of ( ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5625	show me the restaurants that sell QUOTED_STRING_0 cuisine in the postal code QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5626	for restaurants that have a location equal to home what is their country	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
5627	grab me the image of the restaurants with rating lower than NUMBER_0 most far away from home	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5628	what are restaurant having state equivalent to GENERIC_ENTITY_tt:us_state_0 and postal code being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
5629	tell me the countries of restaurants with a QUOTED_STRING_0 zip code and if they 're nearest to my work .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5630	grab street address of restaurants with review count less than NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
5631	how many total review having author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0 are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
5632	i demand restaurant around home with NUMBER_0 or greater rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:home => notify
5633	retrieve the restaurants around home having QUOTED_STRING_0 as description with the largest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
5634	inform me the dining business with the highest review number	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
5635	show me the location of GENERIC_ENTITY_tt:country_0 restaurants that 's furthest from me .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) => notify
5636	find the highest rated restaurants with QUOTED_STRING_0 food and a QUOTED_STRING_1 summary .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5637	say what is the review count of restaurant close to home .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
5638	find me a restaurant around me with QUOTED_STRING_0 in the zip code with the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5639	tell me the cuisine of the restaurant near my house .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
5640	a restaurant lacking any reviews has what as its phone number ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
5641	fetch me what is the reviews of the restaurant having postal code containing QUOTED_STRING_0 farthest from here .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5642	for restaurants with NUMBER_0 or less reviews , how far are the ones that are farthest away from home and work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5643	show me the restaurant with this phone number PHONE_NUMBER_0 and have the max review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
5644	show me the restaurant with the description QUOTED_STRING_0 with a rating of minimum NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
5645	show me the food type of restaurants with the fewest number of reviews , lower than NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
5646	which country has restaurants with less than 1 as their rating ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) => notify
5647	show the rating of dining places near here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5648	show me restaurant having phone number equivalent to PHONE_NUMBER_0 and location equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5649	which are restaurant around here that offer QUOTED_STRING_0 food type	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5650	which restaurants in GENERIC_ENTITY_tt:us_state_0 are around here ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
5651	please locate a QUOTED_STRING_0 restaurant that has NUMBER_0 or fewer stars .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5652	grab what is the city of the restaurant with QUOTED_STRING_0 as postal code which is closest to home .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5653	from work , what is the location of restaurants that are the greatest distance ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
5654	from my house i want to know the closest restaurant to my work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) ) => notify
5655	what is the description of restaurants having description having QUOTED_STRING_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5656	what 's in this QUOTED_STRING_0 restaurant ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5657	show me restaurants rated higher than 1 .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) => notify
5658	what country is restaurants with QUOTED_STRING_0 descriptions	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5659	show me nearby restaurants with QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5660	i need a restaurant QUOTED_STRING_0 with a minimum of NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5661	display restaurants that are closest to home that have the location exactly home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) ) [ 1 ] => notify
5662	fetch restaurants having phone number equal to PHONE_NUMBER_0 and review count equal to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5663	list restaurants around me which offers QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5664	find QUOTED_STRING_0 restaurants with ratings at least NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5665	how far from home are restaurants rated NUMBER_0 stars	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
5666	what is the restaurants having NUMBER_0 or less review count that offer QUOTED_STRING_0 cuisine with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5667	how far from here is the restaurant with a review number equal to NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) => notify
5668	show me restaurants with telephone equal to PHONE_NUMBER_0 and review count not more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5669	get restaurants having address equal to home and description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
5670	what is the location of restaurant with phone number equivalent to PHONE_NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5671	what is the price range of the restaurant containing QUOTED_STRING_0 in the description nearest to here .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5672	what is both the food type and image of the restaurants with smaller rating than NUMBER_0 that is closest to here .	now => [ param:image:Entity(tt:picture) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5673	which reviews have QUOTED_STRING_0 in the description and a rating greater than NUMBER_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
5674	say what 's the city of the restaurant with QUOTED_STRING_0 as postal code which is closest to home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5675	how many restaurants having descriptions with QUOTED_STRING_0 are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5676	what restaurants have a NUMBER_0 rating at the lowest and a location equal to work ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work => notify
5677	give me contact numbers of QUOTED_STRING_0 restaurants	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
5678	find restaurants with a NUMBER_0 rating that are nearby .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
5679	grab zip code of restaurants with location equal to work .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
5680	what 's the GENERIC_ENTITY_org.schema.Restaurant:Person_0 review ? has a description of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5681	show me the location of restaurant with telephone equal to PHONE_NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5682	tell me the food type and price range of restaurants nearby my home with the lowest number of reviews .	now => [ param:priceRange:String , param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
5683	for the restaurant here with the least reviews , show me the postal code	now => [ param:address.postalCode:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
5684	what are the streets of the restaurants with less than NUMBER_0 rating .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
5685	for the QUOTED_STRING_0 restaurant that has the least amount of reviews how close is the restaurant from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) ) => notify
5686	i want to see restaurants from the country GENERIC_ENTITY_tt:country_0 and the zip code being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
5687	show what date reviews with over a NUMBER_0 rating were published	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) => notify
5688	i want dining locations having QUOTED_STRING_0 as served cuisine and phone number equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5689	tell me how many reviews of restaurants with QUOTED_STRING_0 zip codes have with the most reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5690	get restaurants around home containing QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
5691	present to me what is the rating of the farthest restaurants with smaller review count than 1 from home	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
5692	what are the restaurants with tinier review count than NUMBER_0 and cuisine being QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5693	tell me what restaurant has the maximum review count and a rating that is below NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] => notify
5694	grab the distance from home to restaurants with location equal to work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) => notify
5695	what is a restaurant that offers QUOTED_STRING_0 food and has a rating equal to NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5696	get me the restaurant around here having served cuisine equal to QUOTED_STRING_0 which has the minimum rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5697	retrieve the restaurant having higher review count than NUMBER_0 that serves QUOTED_STRING_0 with the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5698	what is the price range of the restaurant that has a smaller review count than NUMBER_0	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
5699	for the restaurants nearest to work , what is the phone number for the restaurants in the QUOTED_STRING_0 postal code ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5700	show me a QUOTED_STRING_0 restaurant near here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5701	which restaurants having QUOTED_STRING_0 have the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5702	please locate the restaurant furthest away from work with a zip code of QUOTED_STRING_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5703	to work , how far away of the closest restaurant in GENERIC_ENTITY_tt:us_state_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
5704	how far is the restaurant having larger than NUMBER_0 reviews which is closest to here from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5705	what 's the street address for restaurants that are located here	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5706	present the restaurant in here having phone number equal to PHONE_NUMBER_0 with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
5707	which restaurants around here serve QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5708	find the furthest from work restaurants with more than NUMBER_0 reviews .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
5709	fetch me what is the country of restaurant having location equal to work	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
5710	how many reviews rated NUMBER_0 exist ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
5711	what is the country of the restaurant furthest from here with a rating under NUMBER_0 .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5712	show me the explanation of the nearest dining places with QUOTED_STRING_0 as zip code	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5713	find restaurants with NUMBER_0 stars closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] => notify
5714	how far away are the restaurant with NUMBER_0 reviews farthest from here from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5715	show me the address of a restaurant with NUMBER_0 reviews	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5716	get review having author equivalent to GENERIC_ENTITY_org.schema.Restaurant:Person_0 for restaurants with NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5717	get review having rating greater than NUMBER_0 and summary equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
5718	get me the restaurants having smaller rating than NUMBER_0 and phone number equal to PHONE_NUMBER_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
5719	what are the review with date of publication after DATE_0 and description equal to QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
5720	which are dining locations having location equal to here that offer QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5721	show me the city of the restaurant with more review count than NUMBER_0 with the least reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
5722	tell me what the description is for restaurants that have QUOTED_STRING_0 included in the description .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5723	show me a local restaurant rated NUMBER_0 stars that contains the highest count of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5724	what 's both the telephone and state of the restaurant having greater rating than NUMBER_0 that is closest to here	now => [ param:address.addressRegion:Entity(tt:us_state) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5725	i 'd like the restaurant with at least NUMBER_0 reviews that is farthest from home to be shown	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
5726	show me a restaurant serving QUOTED_STRING_0 and a review count of exactly NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5727	which is the restaurants with served food type being QUOTED_STRING_0 and smaller rating than NUMBER_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5728	get restaurant rated NUMBER_0 star with food type equal to QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5729	i 'm looking for restaurants in this area that have a higher review count than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
5730	say what is the country and telephone of the restaurants around here with the fewest review count .	now => [ param:address.addressCountry:Entity(tt:country) , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) => notify
5731	can i get the street address for restaurants that have no reviews ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
5732	what restaurants in this area have over NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
5733	search for all QUOTED_STRING_0 restaurants that are rated the max and are located near here .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5734	fetch the name of restaurant with rating more than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
5735	find restaurants near work that are not rated more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
5736	what are the restaurants near me rated less than NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
5737	what restaurant is closest to home with less than a NUMBER_0 rating	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
5738	what is the number of evaluations in the nearest dining business with review number less than NUMBER_0 to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5739	tell me the country names of restaurants rated NUMBER_0 stars .	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
5740	fetch me reviews having QUOTED_STRING_0 as description and NUMBER_0 or lower rating	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5741	how many total restaurants having descriptions containing QUOTED_STRING_0 are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5742	find me reviews with up to NUMBER_0 rankings and a score higher than NUMBER_1 .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
5743	i need the phone number for the place that has more than NUMBER_0 reviews .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5744	what is the restaurants having QUOTED_STRING_0 as served food type and QUOTED_STRING_1 as summary with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5745	what do you find for a QUOTED_STRING_0 restaurant in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5746	list the job restaurant serving QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5747	what are QUOTED_STRING_0 restaurants here having review count equivalent to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5748	how many restaurants exist with a rating under NUMBER_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
5749	retrieve review that GENERIC_ENTITY_org.schema.Restaurant:Person_0 wrote that has the description of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5750	get dining locations around home having QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
5751	get restaurants having phone number equal to PHONE_NUMBER_0 which serves QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5752	find the restaurant that has QUOTED_STRING_0 food that is farthest from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5753	the restaurant with PHONE_NUMBER_0 as its contact number offers what kind of dishes on its menu ?	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5754	what is the image of the furthest away restaurants with rating more than NUMBER_0 from home	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5755	what is the restaurant 's QUOTED_STRING_0 postal code rating ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
5756	fetch me the image of the restaurants with the biggest review count	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
5757	find the highest rated QUOTED_STRING_0 restaurants that are located near my job .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5758	which city contains the restaurant that 's furthest from here with a description containing QUOTED_STRING_0 ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5759	tell me the price range of restaurants with the lowest number of reviews .	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
5760	show me a picture of the restaurant that is close to home with the lest reviews .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
5761	where is the restaurant with no comments at all ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] ) => notify
5762	show me restaurants with the highest number of reviews with QUOTED_STRING_0 in the description and tell me their number .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5763	show me the reviews of the furthest restaurant from my location with the postal code QUOTED_STRING_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5764	what reviews with the bottommost score by GENERIC_ENTITY_org.schema.Restaurant:Person_0 were posted after DATE_0 ?	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 ) ) [ 1 ] => notify
5765	how far away is the restaurant with less than NUMBER_0 reviews to my house ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5766	what is the number of restaurants that are located at work ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
5767	tell me the distance of restaurants here from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) => notify
5768	show me reviews of the restaurant furthest from here with a zip code QUOTED_STRING_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5769	what is the distance to restaurant in LOCATION_0 from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) => notify
5770	what is the summary and food type of restaurants that has QUOTED_STRING_0 food .	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5771	on what street is the restaurant with a rating under NUMBER_0 that 's farthest from here located ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5772	get restaurant in this area having telephone number equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5773	what are restaurants with state equal to GENERIC_ENTITY_tt:us_state_0 and NUMBER_0 or greater review count	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
5774	show me the nearby restaurants serving QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5775	find restaurants containing QUOTED_STRING_0 in the description that have less than NUMBER_0 reviews .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5776	count the dining locales with postal code containing QUOTED_STRING_0	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
5777	where close are the most remote restaurants with NUMBER_0 checkpoints from home to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5778	which are the restaurant which sells QUOTED_STRING_0 and with description equal to QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5779	get restaurant having telephone equal to PHONE_NUMBER_0 and QUOTED_STRING_0 as summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5780	how many total reviews does restaurant having fewer than 1 reviews have	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
5781	tell me which restaurants are in GENERIC_ENTITY_tt:us_state_0 and have the postal code of QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
5782	how close are the restaurants with more than NUMBER_0 rating have , with the least reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
5783	provide a review that GENERIC_ENTITY_org.schema.Restaurant:Person_0 composed and posted after DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
5784	what restaurants that serve QUOTED_STRING_0 rated at least NUMBER_0 have the most reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5785	find me the price range of restaurants that are located here	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5786	tell me the reviews of restaurants with NUMBER_0 reviews total .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5787	what are the restaurants serving QUOTED_STRING_0 cuisine and the definition of QUOTED_STRING_1 getting the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5788	text me restaurants here with NUMBER_0 or lower review count .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
5789	how is an QUOTED_STRING_0 restaurant rated ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5790	ask me the nearest restaurant 's state and cuisine to work	now => [ param:address.addressRegion:Entity(tt:us_state) , param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
5791	search for reviews with a description equal to QUOTED_STRING_0 that are authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5792	fetch the restaurant having food type containing QUOTED_STRING_0 farthest from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5793	show me the restaurants here that have a postal code of QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
5794	i want restaurants with QUOTED_STRING_0 as kitchen and telephone number + PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5795	which image represents those reviews with ratings that are the lowest ?	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:reviewRating.ratingValue:Number asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
5796	what is the price range of the restaurants with the tiniest number of reviews	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
5797	tell me the city of restaurants that have QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5798	which restaurant here with NUMBER_0 or smaller rating gets the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5799	fetch me the restaurants having QUOTED_STRING_0 in the postal code that serves QUOTED_STRING_1 with the highest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
5800	i would like to know what restaurant has the smallest review count and a higher rating than NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5801	please give me the city that has restaurants with no greater than NUMBER_0 reviews total .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
5802	show me the closest restaurant with the telephone number being PHONE_NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5803	which are the restaurants with rating not more than NUMBER_0 and larger review count than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
5804	what description applies to restaurants located in QUOTED_STRING_0 ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
5805	retrieve restaurant name that has more than NUMBER_0 review count	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
5806	what is the description of the restaurants with rating smaller than NUMBER_0 most far away from home ?	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5807	show me what is the name of reviews with author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
5808	seek restaurant having rating not more than NUMBER_0 and food type equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5809	how close are restaurants at PHONE_NUMBER_0 to my home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5810	what restaurants are around home and cooks QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5811	how far are the closest restaurant with NUMBER_0 reviews from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5812	grab for me the cuisine of the restaurant having QUOTED_STRING_0 in the description that is farthest from home	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5813	show me restaurants that are close with a cuisine that is QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5814	show me a review that 's about QUOTED_STRING_0 restaurants near work and was published after DATE_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) join ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5815	what is the postal code of the furthest restaurant with food type being QUOTED_STRING_0 from work ?	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5816	what 's the served cuisine and zip code of restaurant with NUMBER_0 or less rating and location equal to work	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work ) => notify
5817	which is the restaurants with QUOTED_STRING_0 as summary and food type containing QUOTED_STRING_1 with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
5818	how many reviews does the restaurants having smaller than NUMBER_0 reviews that is most far away from home have ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5819	what is the current location of the farthest restaurants from work	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) => notify
5820	what restaurant is closest to me that has only NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) ) => notify
5821	tell me the distance of restaurants with a lower rating than NUMBER_0 that 's furthest from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5822	how close are the QUOTED_STRING_0 restaurant that is nearest to work from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
5823	what reviews containing the highest rating of NUMBER_0 did GENERIC_ENTITY_org.schema.Restaurant:Person_0 write ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5824	give me restaurants with no less than NUMBER_0 reviews and the location is equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:current_location => notify
5825	get the restaurants near here having cuisine being QUOTED_STRING_0 with the maximum review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5826	tell me how close the restaurants with a rating under 1 and the most reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) [ 1 ] ) ) => notify
5827	which are the restaurant with cooked cuisine equal to QUOTED_STRING_0 and rating equal to NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5828	tell me where is the restaurants with QUOTED_STRING_0 as summary and state equal to GENERIC_ENTITY_tt:us_state_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:description:String =~ QUOTED_STRING_0 ) => notify
5829	i want restaurants with country equivalent to GENERIC_ENTITY_tt:country_0 and food type equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5830	what 's the restaurant with bigger rating than NUMBER_0 with the highest number of evaluations	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
5831	in what country is a restaurant that has descriptions with QUOTED_STRING_0 in them ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5832	grab the restaurants having at least NUMBER_0 reviews with the smallest number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
5833	where is the dining locales with NUMBER_0 or more number of evaluations and address equal to work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) => notify
5834	show the distance with a less than NUMBER_0 star restaurant is from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5835	i 'd like to know what city of LOCATION_0 restaurants serve in terms of cuisine .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
5836	inform me the number of evaluations of dining places near me	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5837	i need to see the restaurants with a greater review count than 1 with the smallest number of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) [ 1 ] ) => notify
5838	what are the total restaurants in GENERIC_ENTITY_tt:us_state_0 around here	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:current_location => notify
5839	what is the location of restaurants having NUMBER_0 or higher review count	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
5840	what restaurant has the least number of reviews and a menu of QUOTED_STRING_0 dishes ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5841	what price range would one find at a NUMBER_0 star rated restaurant ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
5842	which restaurant having more review count than NUMBER_0 and QUOTED_STRING_0 as summary gets the smallest rating ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5843	get me what is the street of restaurant with phone number equal to PHONE_NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5844	show me the number of reviews of restaurants around me .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
5845	which restaurants in postal code QUOTED_STRING_0 serve QUOTED_STRING_1 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
5846	what restaurants are in postal code QUOTED_STRING_0 in GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:address.postalCode:String =~ QUOTED_STRING_0 => notify
5847	get the date published of reviews having rating equal to NUMBER_0	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
5848	how close is the country restaurant to GENERIC_ENTITY_tt:country_0 with the largest number of domestic reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) ) => notify
5849	say what 's the explanation of restaurant having greater rating than NUMBER_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
5850	i 'd like the price range of a restaurant that has a review count of 1 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) => notify
5851	tell me the restaurant around me with postal code equivalent to QUOTED_STRING_0 which has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5852	which restaurants here with country equivalent to GENERIC_ENTITY_tt:country_0 gets the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5853	i need to see reviews of the restaurants that are farthest from home that have a less review count than NUMBER_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5854	get the nearest restaurant having location equal to work to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
5855	what is the food type of the restaurants with higher rating than NUMBER_0 with the least reviews	now => [ param:servesCuisine:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
5856	show me what is the telephone number of restaurant having rating not more than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
5857	grab the country of restaurants with rating equal to NUMBER_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
5858	what restaurants are located near work	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
5859	what review has a publication date that was earlier than DATE_0 and also has a rating that is under NUMBER_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5860	where is the farthest away restaurants with rating more than NUMBER_0 from home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5861	i 'd like to know reviews that have less than a NUMBER_0 rating .	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5862	display for me the restaurant that is the largest distance from home and whose review count is over NUMBER_0 .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
5863	what reviews is created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and have NUMBER_0 or more rating .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
5864	tell me the review count of restaurants with only NUMBER_0 reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5865	get the distance from home of restaurants with rating equal to NUMBER_0	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
5866	find restaurants with the address here with QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5867	tell me the distance to the closest restaurant from work to home that has NUMBER_0 reviews .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5868	find a QUOTED_STRING_0 restaurant located closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5869	tell how close the restaurants with more than NUMBER_0 reviews and the smallest number of review are from my work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
5870	how many total reviews are there in the restaurant in GENERIC_ENTITY_tt:us_state_0 which is most far away from work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
5871	what number of reviews have been received by the restaurants nearest to this location with under NUMBER_0 reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
5872	tell the town of the nearest postal restaurants with QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5873	tell me the description of the farthest restaurant that contains QUOTED_STRING_0 in their description .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5874	i want to see the restaurants that have no more than NUMBER_0 reviews that are closest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
5875	what restaurant has received NUMBER_0 reviews and is rated NUMBER_1 or more question mark	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_1 and param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
5876	find reviews for NUMBER_0 star rated restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5877	show me what the restaurant rating has been described as QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
5878	what is the review number of QUOTED_STRING_0 restaurants in the description with the largest number of reviews ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
5879	which restaurant with state matching GENERIC_ENTITY_tt:us_state_0 has a NUMBER_0 star overall rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number == NUMBER_0 => notify
5880	where is the restaurant with the telephone number PHONE_NUMBER_0 located ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
5881	what is the telephone of restaurants with bigger rating than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
5882	find me street address of restaurant in LOCATION_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
5883	give me the restaurant that is rated NUMBER_0 or higher and has a phone number of PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5884	what can you come up with for a QUOTED_STRING_0 restaurant that includes QUOTED_STRING_1 in its summary ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5885	what is the amount of reviews with at maximum a rating of NUMBER_0 ?	now => aggregate count of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
5886	give all of the QUOTED_STRING_0 restaurants in the zip code QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5887	writer quest analysis equivalent to GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
5888	let me see those restaurants rated higher than 1 with the fewest reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= 1 ) ) [ 1 ] => notify
5889	i 'd like to see review descriptions with a rating of at most NUMBER_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
5890	get the restaurant with review count less than NUMBER_0 that is most far away from here	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
5891	find restaurants near work that sell QUOTED_STRING_0 food and have the highest review account	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5892	say the review count of NUMBER_0 review restaurants .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) => notify
5893	find reviews that have a rating of over 1 for restaurants with NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5894	get me what is the street of restaurant having rating not more than NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
5895	speak the image and location of the most far away QUOTED_STRING_0 restaurants .	now => [ param:geo:Location , param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5896	which restaurant having rating not more than NUMBER_0 and address equivalent to home gets the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:home ) ) [ 1 ] => notify
5897	what country are restaurants with more than 1 review in	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) => notify
5898	show me reviews rated NUMBER_0 or less with a QUOTED_STRING_0 description .	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
5899	please find the restaurant that has the contact number PHONE_NUMBER_0 and QUOTED_STRING_0 in its overview .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5900	i need restaurant having NUMBER_0 or having less number of evaluations and smaller rating than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_1 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
5901	show me the QUOTED_STRING_0 restaurants with NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5902	find restaurants rated lower than NUMBER_0 and have QUOTED_STRING_0 in the description .	now => ( @org.schema.Restaurant.Restaurant ) filter @org.schema.Restaurant.Review { param:description:String =~ QUOTED_STRING_0 and param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) and param:reviewRating.ratingValue:Number <= NUMBER_0 } => notify
5903	bring up restaurant having summary being QUOTED_STRING_0 and address equal to work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
5904	what 's your take on coming up with a list of QUOTED_STRING_0 restaurants that indicate an overview of their QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5905	can you tell me the street address of restaurants that have the id QUOTED_STRING_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
5906	fetch for me what is the name of reviews with author equal to GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
5907	find restaurants closest to me with QUOTED_STRING_0 in the description and tell me the price range .	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5908	i need to see restaurants that serve QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5909	restaurants in the QUOTED_STRING_0 zip code are located in what state .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
5910	how near are the restaurant having country equal to GENERIC_ENTITY_tt:country_0 with the highest number of reviews from home ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) [ 1 ] ) ) => notify
5911	what are the restaurant that cook QUOTED_STRING_0 food and with rating equal to NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5912	which review has the earliest date published	now => ( sort param:datePublished:Date asc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
5913	get evaluations of restaurant having less than than NUMBER_0 reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5914	show me the rating of restaurant having LOCATION_0 as city .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
5915	tell me the cuisine of restaurant with a review count of more than NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5916	which restaurant with QUOTED_STRING_0 as served cuisine and review count equal to NUMBER_0 has the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5917	tell me the city of restaurant serving QUOTED_STRING_0 in the cuisine .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5918	what price range is found at restaurants serving QUOTED_STRING_0 food ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5919	how many restaurants with no reviews are there ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
5920	what are the restaurants that are rated lowest out of all the places that meet these criteria : NUMBER_0 or fewer total reviews and location close to me right now .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5921	what are the prices at restaurants with less than NUMBER_0 reviews ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
5922	find restaurants serving QUOTED_STRING_0 food and a description of QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5923	can you get reviews that GENERIC_ENTITY_org.schema.Restaurant:Person_0 posted and that have a publication date that is later than DATE_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
5924	where is a location for a restaurant that has NUMBER_0 or fewer review count total	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
5925	what 's the location of the restaurant that 's the farthest distance from work with a description of QUOTED_STRING_0 ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5926	i want to know how far away a restaurant is that has NUMBER_0 reviews from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
5927	get me what is the name of restaurant with phone number equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5928	i 'd like to know of restaurants with ratings under NUMBER_0 that are closest to home	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
5929	find the restaurants having review count equal to NUMBER_0 with the highest number of reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] => notify
5930	get the evaluations of the restaurant near home with the highest number of reviews	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
5931	how close to me are restaurant having no reviews	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
5932	locate restaurants with zip QUOTED_STRING_0 that serve QUOTED_STRING_1 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
5933	how far away are the closest restaurant with telephone equal to PHONE_NUMBER_0 from here .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
5934	how far away is the restaurants with 1 reviews nearest to home from work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
5935	show me the summary and food type for restaurants that have QUOTED_STRING_0 food	now => [ param:description:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
5936	find the lowest rated restaurant near here that serves QUOTED_STRING_0 cuisine .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5937	pull up dining locales in GENERIC_ENTITY_tt:country_0 with address equal to here	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
5938	find the review count for restaurants with a review count of maximum NUMBER_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) => notify
5939	show me some restaurants that have 1 reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 => notify
5940	get me the telephone of the nearest restaurant having postal code containing QUOTED_STRING_0 to here .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5941	present to me what is the country of the most far away restaurant having postal code containing QUOTED_STRING_0	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5942	what 's the number of reviews above NUMBER_0 for the restaurants ?	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5943	which reviews with a QUOTED_STRING_0 summary were written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
5944	give me the image of the restaurant that is closes to home and has a rating over NUMBER_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5945	when were the NUMBER_0 star rated reviews published ?	now => [ param:datePublished:Date ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) => notify
5946	retrieve reviews that have a higher than 1 rating in restaurants with the zip code QUOTED_STRING_0	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
5947	find the QUOTED_STRING_0 restaurant rated higher than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5948	find the restaurants with review count not higher than NUMBER_0 and location equal to here which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5949	tell me the price range of NUMBER_0 star rated restaurant	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
5950	write me a list of reviews that have exactly NUMBER_0 as the rating	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 => notify
5951	find the review with a summary of QUOTED_STRING_0 and a later than DATE_0 publishing date .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
5952	what 's the rating given to those restaurants with no less than NUMBER_0 reviews ?	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5953	how close is the restaurant with the lowest amounts of reviews to this area .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] ) ) => notify
5954	what are reviews which was made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and having date published before DATE_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
5955	what is the lowest rated QUOTED_STRING_0 restaurant .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5956	what is the typical price of all restaurants with the lowest review counts .	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
5957	what restaurant has a rating over NUMBER_0 and the least amount of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5958	what are the restaurants with a rating not exceeding NUMBER_0 that have a review count higher than NUMBER_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
5959	grab for me the distance from here of restaurant with review count larger than NUMBER_0 .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) => notify
5960	how far away are the restaurants with 1 reviews most far away from work to work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
5961	how near home is a restaurant that has n't gotten any reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
5962	show me the restaurant that is furthest from home with a review count over NUMBER_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5963	list dining locations having phone number equal to PHONE_NUMBER_0 and number of evaluations higher than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5964	i 'd like the telephone number of a restaurant that has fewer reviews than 1 and is furthest from home .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
5965	what is the location of the restaurants with larger review count than NUMBER_0 farthest from here	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5966	what restaurants have the fewest reviews and a location equivalent to this location ?	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
5967	show me the reviews rated NUMBER_0 that were written by GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
5968	seek for me what is the review count of the restaurants with smaller rating than NUMBER_0 with the smallest count of reviews .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
5969	i want the reviews of restaurants with the largest number of reviews .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
5970	i want to know the postal code of 1 star rated restaurants .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) => notify
5971	grab me what is the reviews of restaurant having city equal to LOCATION_0	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
5972	i want to know the name of the QUOTED_STRING_0 food restaurant with a rating higher than NUMBER_0 and the highest review count ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5973	i 'd like to see you restaurants that are the most far away from work that have descriptions that say QUOTED_STRING_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
5974	what are the restaurant having QUOTED_STRING_0 in the postal code and greater rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
5975	what is the worst rated restaurant out of those that have over NUMBER_0 reviews and QUOTED_STRING_0 is their summary ?	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5976	which QUOTED_STRING_0 restaurant has a phone number equal to PHONE_NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5977	find the distance for the restaurant with 1 review closest to home from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
5978	find QUOTED_STRING_0 restaurant here	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5979	what restaurants , with a number that 's higher than NUMBER_0 for reviews , serves QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
5980	which restaurant here in GENERIC_ENTITY_tt:country_0 has the biggest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
5981	which is the restaurant nearby that cooks QUOTED_STRING_0 food which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5982	what are the restaurant 's name around home with QUOTED_STRING_0 as summary ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
5983	where is the most far away restaurants with larger review count than NUMBER_0 from home	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
5984	restaurant quest with more than NUMBER_0 stars and the same email as home	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:home => notify
5985	which restaurants contain QUOTED_STRING_0 in the cuisine and description equal to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5986	tell me the restaurants with cuisine being QUOTED_STRING_0 and description equivalent to QUOTED_STRING_1 which has the minimum review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5987	what is the street address of a restaurant that has the zip code QUOTED_STRING_0 ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
5988	what are restaurant having NUMBER_0 reviews and larger review count than NUMBER_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
5989	tell me the rating of restaurants with no reviews .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) [ 1 ] ) => notify
5990	which restaurant around here that cooks QUOTED_STRING_0 cuisine has the minimum rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
5991	tell me the rating of the furthest restaurant that has QUOTED_STRING_0 and tell me the name .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
5992	what restaurants get higher rating than NUMBER_0 and phone number equal to PHONE_NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
5993	alert me the image of restaurant having more than NUMBER_0 evaluations	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5994	what are the QUOTED_STRING_0 restaurants an address equaling here ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
5995	tell me the country of restaurants with at least NUMBER_0 reviews	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
5996	how far is the distance to the restaurant that is the furthest from my current location ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( @org.schema.Restaurant.Restaurant ) ) ) [ 1 ] ) ) => notify
5997	how many restaurant reviews scored NUMBER_0 stars with the most reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) [ 1 ] ) => notify
5998	tell me when reviews with the highest rating were published	now => [ param:datePublished:Date ] of ( ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] ) => notify
5999	what is the amount of reviews that the restaurant with over NUMBER_0 reviews and closest to home have .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
6000	present reviews created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having date published before DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
6001	i 'd like to know the zip code of restaurant from the city LOCATION_0	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
6002	tell me the state that the restaurants with descriptions that contain the word QUOTED_STRING_0 are located in .	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
6003	retrieve the restaurant having greater review count than NUMBER_0 and state equal to GENERIC_ENTITY_tt:us_state_0 which has the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] => notify
6004	show the places with cuisine being QUOTED_STRING_0 and number of evaluations higher than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6005	i would like to know the reviews for the restaurants with the highest rating .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
6006	i 'm looking for restaurants that have a NUMBER_0 or larger rating that are at work location and have the most reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
6007	what is the telephone of the most far away restaurant with rating smaller than NUMBER_0 from here .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
6008	where is the restaurant with QUOTED_STRING_0 as served cuisine and rating at minimum NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
6009	show me the restaurants with the largest distance from work that have QUOTED_STRING_0 in the descriptions	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
6010	grab the reviews of the most far away restaurant with rating higher than NUMBER_0 from work	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
6011	what dining locations get bigger rating than NUMBER_0 and phone number equal to PHONE_NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
6012	how close are the dining places which is QUOTED_STRING_0 farthest from work to home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
6013	can you name the restaurants that have a rating of NUMBER_0 or higher and that have received over NUMBER_1 reviews ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:aggregateRating.reviewCount:Number >= NUMBER_1 => notify
6014	tell me the number of reviews in GENERIC_ENTITY_tt:us_state_0 furthest from my job .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
6015	what is the applicable price range for a restaurant with a rating that numbers NUMBER_0 stars ?	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
6016	find restaurants having address equal to work and NUMBER_0 or lower rating	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:work => notify
6017	what LOCATION_0 restaurant is the greatest distance from home ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) ) [ 1 ] => notify
6018	find restaurant having no fewer than NUMBER_0 reviews and NUMBER_1 or lower rating .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number <= NUMBER_1 => notify
6019	seek the description of the nearest restaurants with review count less than NUMBER_0 to home .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
6020	what is the reviews of the restaurants with review count fewer than NUMBER_0 with the smallest number of reviews ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] ) => notify
6021	give me restaurant around me having NUMBER_0 or greater review count	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location => notify
6022	get dining locations in here with zip code being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location => notify
6023	which restaurant having review count not more than NUMBER_0 and QUOTED_STRING_0 as summary gets the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6024	what restaurants in this area feature QUOTED_STRING_0 in their overview and have the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
6025	show me a LOCATION_0 restaurant that has the smallest number reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) [ 1 ] => notify
6026	which restaurant having review count bigger than NUMBER_0 and QUOTED_STRING_0 as description has the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6027	tell me the rating for the restaurants that are the greatest distance away with review counts under NUMBER_0 .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
6028	show me the reviews of the 1 star rated restaurants nearest to my home .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] ) => notify
6029	show me the restaurants with QUOTED_STRING_0 in their description that serve QUOTED_STRING_1 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
6030	what is the image of restaurants with rating bigger than NUMBER_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
6031	give all QUOTED_STRING_0 restaurants that dont have a rating over NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6032	what restaurants get rating at fewest NUMBER_0 and state equal to GENERIC_ENTITY_tt:us_state_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
6033	which are NUMBER_0 star restaurants with food style QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6034	show me the reviews published after DATE_0 and that have a summary being QUOTED_STRING_0 and that have the minimum rating .	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6035	which are dining locations with rating at minimum NUMBER_0 which serves QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6036	grab reviews having rating more than 1 in restaurants with QUOTED_STRING_0 as postal code	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
6037	show me where is the restaurants around work in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:work ) => notify
6038	which restaurant around here sells QUOTED_STRING_0 cuisine and has the biggest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6039	get the telephone of restaurants that is QUOTED_STRING_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
6040	where is the restaurants with 1 reviews with the greatest amount of reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) [ 1 ] ) => notify
6041	i 'm interested in the address of restaurants with the smallest review count	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
6042	what is the restaurant with bigger rating than NUMBER_0 with the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
6043	how many reviews are there with a review count of less than NUMBER_0 that is farthest from work .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
6044	i would like to know what review GENERIC_ENTITY_org.schema.Restaurant:Person_0 wrote and got published after DATE_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date >= DATE_0 => notify
6045	tell me the description of restaurants with QUOTED_STRING_0 in their description .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
6046	tell me restaurants with no less than NUMBER_0 reviews and location equal to here .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:current_location => notify
6047	how far from my job is the restaurant with only 1 review	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) ) [ 1 ] ) ) => notify
6048	i want to find the restaurant with the most NUMBER_0 star reviews	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
6049	i want restaurants enumerated for me that have a location equal to home .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home => notify
6050	show reviews having NUMBER_0 or more rating and less rating than NUMBER_1	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_1 and param:reviewRating.ratingValue:Number >= NUMBER_0 => notify
6051	find the restaurant description that has more reviews than NUMBER_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
6052	around where i live , how far is the closest NUMBER_0 star restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) ) [ 1 ] ) ) => notify
6053	tell me what the rating is of review that has the author GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) => notify
6054	message me the most far away restaurant having higher review count than NUMBER_0 from home	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
6055	tell me the QUOTED_STRING_0 cuisine restaurants	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6056	what is the closest restaurant with the fewest reviews and a description of QUOTED_STRING_0	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
6057	what is the farthest restaurants from my home that have no reviews ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) ) [ 1 ] => notify
6058	of the NUMBER_0 or higher rated restaurants furthest from work , how nearby are they	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
6059	tell me the restaurant name that has a review count of NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 => notify
6060	text me the food type of restaurants having lower rating than NUMBER_0	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
6061	what restaurants have more than NUMBER_0 reviews and are near work .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
6062	can you get me a restaurant who 's summary is QUOTED_STRING_0 and that is near my home ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
6063	search restaurant with review count higher then NUMBER_0 and that is equal to GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
6064	get me the restaurants close to here that serve QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6065	pull up the restaurant serving QUOTED_STRING_0 and QUOTED_STRING_1 postal code .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6066	let me know dining locations nearby that offer QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6067	which of the restaurants in the area have the most reviews ?	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) ) [ 1 ] => notify
6068	which are the restaurants with rating equal to NUMBER_0 and address equal to work	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work => notify
6069	which restaurant get served cuisine being QUOTED_STRING_0 and review count equivalent to NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6070	what 's the restaurant telephone with the highest rating ?	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
6071	find me the restaurant with cuisine that is QUOTED_STRING_0 and the location is set to home with the least review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6072	tell me the rating of a review that was made before DATE_0 .	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) => notify
6073	i want a restaurant with a rating under NUMBER_0 that serves QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6074	show me restaurants with a minimum of a NUMBER_0 rating that serve QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6075	what do you have for restaurants that feature QUOTED_STRING_0 cuisine in my area ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6076	can you tell me the street address for the restaurant that has the zip code QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
6077	i 'd like to know how close restaurants with no reviews are .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) ) => notify
6078	get reviews created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 having rating at most NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
6079	tell me how close the furthest restaurants are with the description having QUOTED_STRING_0 in them from here to my house .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) ) => notify
6080	tell me what is the definition of NUMBER_0 or lower-rated restaurants	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
6081	how far away from home are the restaurants with ratings of NUMBER_0 ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
6082	what 's the name of the city with restaurants equaling the location i 'm in ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
6083	find the city of restaurant with telephone equal to PHONE_NUMBER_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
6084	what is the country for restaurants with QUOTED_STRING_0 in their descriptions	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
6085	send me restaurant reviews of less than 1 nearest to work	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) ) ) [ 1 ] ) => notify
6086	find all the restaurants that have QUOTED_STRING_0 as a description and serve QUOTED_STRING_1 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
6087	find a review with QUOTED_STRING_0 in the description which is written by GENERIC_ENTITY_org.schema.Restaurant:Person_0 and has the lowest rating	now => ( sort param:reviewRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6088	what is the description of restaurants having description containing QUOTED_STRING_0	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
6089	what restaurant is farthest from my home and also has a rating of 1 stars ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 ) ) ) [ 1 ] => notify
6090	which restaurants nearest to here have a higher than NUMBER_0 review count ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
6091	what are the restaurant reviews with a count of less than NUMBER_0 which are the closest ?	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
6092	seek restaurant having QUOTED_STRING_0 as description and review count not more than NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
6093	what NUMBER_0 star restaurants are in this immediate vicinity ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
6094	seek restaurant with fewer than NUMBER_0 reviews and location equal to work .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:geo:Location == location:work => notify
6095	find me some restaurants that have a larger rating than NUMBER_0 and postal code of QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
6096	seek the restaurant having NUMBER_0 or greater rating and QUOTED_STRING_0 as description with the maximum review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6097	how close is restaurant having rating smaller than 1 to here ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) => notify
6098	which restaurants here have a NUMBER_0 star rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
6099	present the restaurant with food type being QUOTED_STRING_0 and location equal to home with the lowest review count .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6100	how close are the restaurant with lower rating than NUMBER_0 with the least reviews from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) [ 1 ] ) ) => notify
6101	what restaurants that are fartherest from home have a rating lower than NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
6102	which are the restaurant having no less than NUMBER_0 reviews and location equal to work .	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:geo:Location == location:work => notify
6103	how close are the restaurant with rating lower than 1 with the largest number of reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= 1 ) ) [ 1 ] ) ) => notify
6104	find a restaurant that has more than NUMBER_0 reviews , and QUOTED_STRING_0 is it 's summary .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
6105	i 'd like to know what city to find the restaurant with a rating of NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
6106	what 's the number of evaluations of the dining locales with QUOTED_STRING_0 that is in explanation with the largest count of reviews	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
6107	bring up for me the restaurants that have a phone number equal to PHONE_NUMBER_0 and exactly NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
6108	what restaurant does not list more than NUMBER_0 and served QUOTED_STRING_0 cuisine with the lowest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6109	show me the restaurants with the maximum review count , a phone number of PHONE_NUMBER_0 , and a rating smaller than NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
6110	which are review having QUOTED_STRING_0 as description which was created by GENERIC_ENTITY_org.schema.Restaurant:Person_0 .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
6111	search dining places nearby in GENERIC_ENTITY_tt:country_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location => notify
6112	tell me the street of the largest rated QUOTED_STRING_0 restaurant .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
6113	what reviews number NUMBER_0 tops with a grade above NUMBER_1 ?	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 and param:reviewRating.ratingValue:Number >= NUMBER_1 => notify
6114	i 'm looking for the zip code and cuisine for restaurants that have a rating of NUMBER_0 or less that sell QUOTED_STRING_0 food	now => [ param:address.postalCode:String , param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
6115	how many comments in the most remote restaurants offering QUOTED_STRING_0 food from the workplace	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
6116	where is the restaurants containing QUOTED_STRING_0 in the postal code and location equal to here .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location ) => notify
6117	where is the restaurants having NUMBER_0 or bigger rating that serves QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
6118	what rating do reviews with a rating of NUMBER_0 have ?	now => [ param:reviewRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) => notify
6119	which restaurants around me having NUMBER_0 or more review count has the largest rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
6120	what restaurants have QUOTED_STRING_0 in summary and have country equal to GENERIC_ENTITY_tt:country_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:description:String =~ QUOTED_STRING_0 => notify
6121	name the places to eat that are by my office and that have NUMBER_0 or more reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work => notify
6122	what are review with QUOTED_STRING_0 in the description in restaurants with larger review count than NUMBER_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
6123	who 's the author of the review rated NUMBER_0 or less ?	now => [ param:author:Entity(org.schema.Restaurant:Person) ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 ) => notify
6124	what are the review with date published after DATE_0 and description equivalent to QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
6125	tell me the telephone number of restaurants that have location equal to home .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) => notify
6126	tell me the nearest restaurant with more than one review is from home .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) ) => notify
6127	i 'd like to know the distance from home of restaurants with 1 review	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 1 ) ) => notify
6128	which QUOTED_STRING_0 restaurants have lower rating than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6129	which is the restaurant around here that serves QUOTED_STRING_0 cuisine with the highest rating .	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6130	what are the restaurants with higher review count than NUMBER_0 and QUOTED_STRING_0 as description	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
6131	can you get me all reviews that have a publication date that is earlier than DATE_0 and were submitted by GENERIC_ENTITY_org.schema.Restaurant:Person_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
6132	search for all GENERIC_ENTITY_org.schema.Restaurant:Person_0 reviews for the restaurants near home .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) join ( ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
6133	give me restaurants in postal code QUOTED_STRING_0 that have less than NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.reviewCount:Number <= NUMBER_0 => notify
6134	find the number of reviews in restaurants having description being QUOTED_STRING_0	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
6135	what 's the image of the most far away dining locales with rating more than NUMBER_0 in distiction to home	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
6136	get restaurants around me with QUOTED_STRING_0 in the food type .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6137	which restaurants sell QUOTED_STRING_0 food and have a phone number of PHONE_NUMBER_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
6138	say what is the telephone of the restaurants having description being QUOTED_STRING_0 with the largest number of reviews .	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] ) => notify
6139	fetch review with date published after DATE_0 and QUOTED_STRING_0 as summary .	now => ( @org.schema.Restaurant.Review ) filter param:datePublished:Date >= DATE_0 and param:description:String =~ QUOTED_STRING_0 => notify
6140	i want to know the nearest restaurant to home that has the PHONE_NUMBER_0 phone number .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
6141	recover the restaurants with a postal code of QUOTED_STRING_0 and the food category of QUOTED_STRING_1 with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
6142	fetch me the restaurants with at most NUMBER_0 reviews which is nearest to work .	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
6143	get the restaurant which has the highest review count	now => ( sort param:aggregateRating.reviewCount:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] => notify
6144	what are the restaurants with less than NUMBER_0 stars and QUOTED_STRING_0 cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6145	tell me how many restaurants there are with QUOTED_STRING_0 in their descriptions .	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
6146	grab both the description and phone number of the closest restaurants with more review count than 1 to here .	now => [ param:description:String , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= 1 ) ) ) [ 1 ] ) => notify
6147	what 's the restaurant located in QUOTED_STRING_0 that 's the least amount of miles from home ?	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
6148	i 'd like to know NUMBER_0 or less rated restaurants and their location that 's furthest away from work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
6149	the restaurants here are in what city ?	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
6150	please find a QUOTED_STRING_0 restaurant in your search ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6151	taking restaurants with a telephone number of + PHONE_NUMBER_0 and a rating number of NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
6152	i like to know of a LOCATION_0 restaurant street address	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) => notify
6153	find me all the reviews that GENERIC_ENTITY_org.schema.Restaurant:Person_0 wrote .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
6154	what reviews were posted before DATE_0 that were authored by GENERIC_ENTITY_org.schema.Restaurant:Person_0 ?	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:datePublished:Date <= DATE_0 => notify
6155	tell me restaurants in GENERIC_ENTITY_tt:us_state_0 around home	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:geo:Location == location:home => notify
6156	what 's the evaluations having earlier date published than DATE_0 which has the maximum rating ?	now => ( sort param:reviewRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Review ) filter param:datePublished:Date <= DATE_0 ) ) [ 1 ] => notify
6157	show me reviews for NUMBER_0 star restaurants in GENERIC_ENTITY_tt:us_state_0 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
6158	how far away are the restaurant in GENERIC_ENTITY_tt:us_state_0 farthest from home to work ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) ) => notify
6159	show me the restaurants that have a number of reviews under NUMBER_0 and offer QUOTED_STRING_0 cuisine .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6160	what are the restaurants with fewer than NUMBER_0 reviews and food type being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6161	get the street address of restaurant having zip code being QUOTED_STRING_0 .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) => notify
6162	how many reviews does the furthest restaurant with less than NUMBER_0 reviews have .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
6163	i need reviews with a rating of NUMBER_0 for restaurants that have QUOTED_STRING_0 in the description .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number == NUMBER_0 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
6164	i 'm looking for restaurants located here that serve QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6165	what is the cuisine type of the most far away restaurant with food type being QUOTED_STRING_0 ?	now => [ param:servesCuisine:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
6166	what restaurant that serves QUOTED_STRING_0 is closest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
6167	which ratings do not surpass 1 of a restaurant with more than NUMBER_0 reviews ?	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= 1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
6168	what are dining locations with description being QUOTED_STRING_0 and food type equal to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
6169	what are review made by GENERIC_ENTITY_org.schema.Restaurant:Person_0 rated NUMBER_0 star .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number == NUMBER_0 => notify
6170	what is the restaurants having QUOTED_STRING_0 in the postal code and location equal to work with the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
6171	name a place with PHONE_NUMBER_0 as the telephone number that is situated in the GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
6172	what is the image of restaurants with rating larger than NUMBER_0	now => [ param:image:Entity(tt:picture) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) => notify
6173	which country has restaurants that have ratings of NUMBER_0 ?	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) => notify
6174	what 's a restaurant that serves QUOTED_STRING_0 in GENERIC_ENTITY_tt:us_state_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6175	what price range would be found at the restaurant with a rating of less than NUMBER_0 that 's nearest to home ?	now => [ param:priceRange:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
6176	which restaurants have a QUOTED_STRING_0 menu and a less than NUMBER_0 rating ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6177	grab for me what is the country of restaurants having at least NUMBER_0 reviews	now => [ param:address.addressCountry:Entity(tt:country) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
6178	find QUOTED_STRING_0 restaurants in the GENERIC_ENTITY_tt:country_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6179	what are QUOTED_STRING_0 restaurants containing summary being QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6180	show restaurants with a rating of higher than NUMBER_0 that are furthest from home .	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] => notify
6181	get me what is the location of restaurants with zero reviews .	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == 0 ) => notify
6182	fetch the review count of restaurants having QUOTED_STRING_0 in the descriptions	now => [ param:aggregateRating.reviewCount:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 ) => notify
6183	fetch me the city of restaurant around me	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location ) => notify
6184	find the QUOTED_STRING_0 restaurant which has NUMBER_0 reviews or more .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6185	what is the rating and telephone of the restaurant in GENERIC_ENTITY_tt:us_state_0 closest to here	now => [ param:aggregateRating.ratingValue:Number , param:telephone:Entity(tt:phone_number) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
6186	grab the reviews of the restaurant near home with the highest number of reviews .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home ) ) [ 1 ] ) => notify
6187	what is the description of reviews having larger rating than NUMBER_0 ?	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_0 ) => notify
6188	what restaurants get no less than NUMBER_0 reviews and are rated NUMBER_1 star	now => ( @org.schema.Restaurant.Restaurant ) filter count ( param:review:Array(Entity(org.schema.Restaurant:Review)) ) >= NUMBER_0 and param:aggregateRating.ratingValue:Number == NUMBER_1 => notify
6189	i 'm looking for the farthest away restaurants that have a rating under NUMBER_0	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
6190	what is the dining places with rating fewer than NUMBER_0 nearest to work	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) ) ) [ 1 ] => notify
6191	i want the restaurants that have an address of home and a postal code that is equal to QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
6192	fetch me the restaurants with rating at least NUMBER_0 which offers QUOTED_STRING_0 which has the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6193	find a restaurant that is not rated over NUMBER_0 and serves QUOTED_STRING_0 food .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6194	show me the GENERIC_ENTITY_org.schema.Restaurant:Person_0 review with a rating of NUMBER_0 or below .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
6195	which is the restaurant nearby that serves QUOTED_STRING_0 food which has the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6196	which are restaurants with location equal to work and review count grander than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 and param:geo:Location == location:work => notify
6197	tell me the price range one would encounter in restaurants offering QUOTED_STRING_0 fare .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
6198	show me a restaurant that only has NUMBER_0 reviews .	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 ) ) [ 1 ] ) => notify
6199	enumerate restaurants around home with rating equivalent to NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:home => notify
6200	check the restaurant with NUMBER_0 or lower ratings and the term QUOTED_STRING_0 with the maximum number of reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6201	i want to know how close the restaurant that has over NUMBER_0 reviews is which is closest to here from work	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
6202	what is the location of the restaurant the greatest distance from home that has a rating above NUMBER_0 ?	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
6203	enumerate reviews with author equivalent to GENERIC_ENTITY_org.schema.Restaurant:Person_0 and QUOTED_STRING_0 as summary .	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 and param:description:String =~ QUOTED_STRING_0 => notify
6204	what 's the furthest restaurant with under NUMBER_0 reviews from my work .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:work ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) ) => notify
6205	tell me the name of the restaurant with the phone number PHONE_NUMBER_0 with the least number of reviews	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
6206	i need to see the zip code of the restaurants that are the largest distance from here that have a larger rating than NUMBER_0	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
6207	which are restaurants having address equivalent to work and description being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
6208	show me restaurants with less than NUMBER_0 reviews that is furthest from here .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) ) [ 1 ] ) => notify
6209	tell me which restaurants that have a location equal to here have exactly NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:geo:Location == location:current_location => notify
6210	what restaurant is close by that is rated NUMBER_0 stars with the most reviews	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
6211	find restaurants in GENERIC_ENTITY_tt:us_state_0 with at least NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.reviewCount:Number >= NUMBER_0 => notify
6212	which LOCATION_0 restaurant is farthest from home ?	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == LOCATION_0 ) ) ) [ 1 ] => notify
6213	show me a QUOTED_STRING_0 restaurant with a rating below NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6214	search the restaurants having QUOTED_STRING_0 in the postal code which cooks QUOTED_STRING_1 with the maximum rating	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
6215	search the restaurant with zip code equal to QUOTED_STRING_0 farthest from work	now => ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
6216	how near are the restaurant having country equal to GENERIC_ENTITY_tt:country_0 which is nearest to home from home	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 ) ) ) [ 1 ] ) ) => notify
6217	enumerate QUOTED_STRING_0 restaurants with address equivalent to here .	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6218	which are the restaurants with review count not higher than NUMBER_0 and QUOTED_STRING_0 in the food type .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6219	tell me the restaurant ratings that have the location work .	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
6220	which are the restaurants with served cuisine being QUOTED_STRING_0 and description equivalent to QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6221	i 'd like to know which state restaurants that have food type of QUOTED_STRING_0 are in	now => [ param:address.addressRegion:Entity(tt:us_state) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
6222	find restaurants with a max of NUMBER_0 reviews with a rating of more than NUMBER_1 .	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) join ( ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number >= NUMBER_1 ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
6223	which restaurants get food type equal to QUOTED_STRING_0 and location equal to home	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:home and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6224	please help me find QUOTED_STRING_0 food restaurants with zip QUOTED_STRING_1 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6225	give me the restaurant near here that has a max review count and serves QUOTED_STRING_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6226	what are the restaurants having address equivalent to here and cuisine being QUOTED_STRING_0 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6227	say what is the telephone number of the restaurant near work with the least reviews	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) [ 1 ] ) => notify
6228	find restaurants pretty close to my house , that have the summary that is QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:home => notify
6229	show me review with a rating of less than NUMBER_0	now => ( @org.schema.Restaurant.Review ) filter param:reviewRating.ratingValue:Number <= NUMBER_0 => notify
6230	what is the number of reviews that the QUOTED_STRING_0 restaurant has that is closest to work	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
6231	give me a list of restaurants serving QUOTED_STRING_0 cuisine with NUMBER_0 reviews .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6232	gather the rating of restaurants with id equal to QUOTED_STRING_0	now => [ param:aggregateRating.ratingValue:Number ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) =~ QUOTED_STRING_0 ) => notify
6233	which restaurants are serving QUOTED_STRING_0 food in the postal code QUOTED_STRING_1 ?	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6234	where is the restaurant having number of evaluations more than NUMBER_0 with the largest number of reviews	now => [ param:geo:Location ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
6235	tell me where the closest to home restaurant is that has a PHONE_NUMBER_0 phone number .	now => [ param:geo:Location ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) => notify
6236	get me restaurants having description being QUOTED_STRING_0 and QUOTED_STRING_1 as served cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
6237	i 'd like to see descriptions of restaurant that are located at work .	now => [ param:description:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) => notify
6238	find a restaurant that has precisely NUMBER_0 reviews and the summary of it is QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number == NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
6239	find restaurants in this area that have a rating of less than NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 and param:geo:Location == location:current_location => notify
6240	reveal what 's the telephone of restaurant having rating not more than NUMBER_0	now => [ param:telephone:Entity(tt:phone_number) ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number <= NUMBER_0 ) => notify
6241	reveal dining locations which offer QUOTED_STRING_0 cuisine	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6242	find me the cuisine of restaurant having review count larger than NUMBER_0 .	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
6243	show restaurants with a phone number of PHONE_NUMBER_0 that 's furthest from my home and tell me the distance .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) ) [ 1 ] ) ) => notify
6244	how many total reviews in the restaurant having state equal to GENERIC_ENTITY_tt:us_state_0 closest to home	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) ) ) [ 1 ] ) => notify
6245	which restaurants here with country equal to GENERIC_ENTITY_tt:country_0 gets the smallest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressCountry:Entity(tt:country) == GENERIC_ENTITY_tt:country_0 and param:geo:Location == location:current_location ) ) [ 1 ] => notify
6246	i 'd like to see review names with author called GENERIC_ENTITY_org.schema.Restaurant:Person_0	now => ( @org.schema.Restaurant.Review ) filter param:author:Entity(org.schema.Restaurant:Person) == GENERIC_ENTITY_org.schema.Restaurant:Person_0 => notify
6247	which restaurants around work having rating equal to NUMBER_0 gets the lowest review count	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 and param:geo:Location == location:work ) ) [ 1 ] => notify
6248	what is the nearness to here of restaurants rated above NUMBER_0 with the smallest number of reviews ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) ) => notify
6249	how many miles from my apartment is the NUMBER_0 star restaurant ?	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:home ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
6250	tell me what is the postal code of restaurant with QUOTED_STRING_0 as served food type .	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) => notify
6251	find a restaurant with QUOTED_STRING_0 in the summary that is near work .	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
6252	show me restaurants that are rated NUMBER_0 at least and have GENERIC_ENTITY_tt:us_state_0 as the state	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
6253	give me restaurant containing QUOTED_STRING_0 as description and rating at least NUMBER_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 and param:description:String =~ QUOTED_STRING_0 => notify
6254	get restaurants with greater rating than NUMBER_0 and postal code being QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
6255	reveal what 's the explanation of the nearest dining locales with QUOTED_STRING_0 as postal code	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.postalCode:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
6256	tell me restaurants with exactly NUMBER_0 reviews .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 ) ) [ 1 ] => notify
6257	what is the current location of restaurant with phone number equal to PHONE_NUMBER_0	now => [ param:geo:Location ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify
6258	find the restaurant in this area that cooks QUOTED_STRING_0 food which has the lowest rating .	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6259	get me a restaurant with a description of QUOTED_STRING_0 that has a cuisine of QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
6260	what restaurants have summary being QUOTED_STRING_0 and are around work	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:work => notify
6261	from my job , how far is the farthest zip code of a QUOTED_STRING_0 restaurant ?	now => [ param:address.postalCode:String ] of ( ( sort param:distance:Measure(m) desc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] ) => notify
6262	please report the restaurants that boast less than NUMBER_0 reviews and feature QUOTED_STRING_0 .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= NUMBER_0 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
6263	which are restaurants with telephone equal to PHONE_NUMBER_0 which sells QUOTED_STRING_0 food	now => ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 => notify
6264	show me restaurants close to me that have the phone number PHONE_NUMBER_0 and the smallest rating	now => ( sort param:aggregateRating.ratingValue:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:telephone:Entity(tt:phone_number) == PHONE_NUMBER_0 ) ) [ 1 ] => notify
6265	fetch me the rating of the closest restaurant with more review count than NUMBER_0 to here	now => [ param:aggregateRating.ratingValue:Number ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
6266	find the restaurant with the largest number of reviews and a rating of more than NUMBER_0 .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] => notify
6267	give me the reviews with the highest rating .	now => ( sort param:reviewRating.ratingValue:Number desc of ( @org.schema.Restaurant.Review ) ) [ 1 ] => notify
6268	what are the restaurants in this area that serve cuisine that is QUOTED_STRING_0 with the highest review count .	now => ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6269	tell me how far away the NUMBER_0 star rated restaurants are from me .	now => [ param:distance:Measure(m) ] of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == NUMBER_0 ) ) => notify
6270	gather nearest restaurants with location equal to work to here	now => ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:geo:Location == location:work ) ) ) [ 1 ] => notify
6271	grab what is the name and price range of restaurant in GENERIC_ENTITY_tt:us_state_0 .	now => [ param:priceRange:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 ) => notify
6272	what kind of cuisine is served at restaurants which have received no less than NUMBER_0 reviews ?	now => [ param:servesCuisine:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
6273	fetch me what is the description of the nearest restaurant having greater rating than NUMBER_0 to here .	now => [ param:description:String ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:current_location ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
6274	tell me the reviews of restaurants with the largest number of reviews greater than NUMBER_0 .	now => [ param:review:Array(Entity(org.schema.Restaurant:Review)) ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
6275	get the QUOTED_STRING_0 restaurant with the tiniest number of reviews .	now => ( sort param:aggregateRating.reviewCount:Number asc of ( ( @org.schema.Restaurant.Restaurant ) filter param:servesCuisine:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
6276	list restaurants with state equal to GENERIC_ENTITY_tt:us_state_0 and rating at lowest NUMBER_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:address.addressRegion:Entity(tt:us_state) == GENERIC_ENTITY_tt:us_state_0 and param:aggregateRating.ratingValue:Number >= NUMBER_0 => notify
6277	what kind of prices do restaurants with the most reviews and a rating above NUMBER_0 have ?	now => [ param:priceRange:String ] of ( ( sort param:aggregateRating.reviewCount:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number >= NUMBER_0 ) ) [ 1 ] ) => notify
6278	i would like to know the image of the restaurant the least distance from work that has a review count that is above NUMBER_0 .	now => [ param:image:Entity(tt:picture) ] of ( ( sort param:distance:Measure(m) asc of ( compute distance ( param:geo:Location , location:work ) of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) ) ) [ 1 ] ) => notify
6279	what is the number of restaurants that have at least NUMBER_0 reviews ?	now => aggregate count of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number >= NUMBER_0 ) => notify
6280	tell me how many restaurant reviews have the highest rating .	now => [ param:aggregateRating.reviewCount:Number ] of ( ( sort param:aggregateRating.ratingValue:Number desc of ( @org.schema.Restaurant.Restaurant ) ) [ 1 ] ) => notify
6281	search dining locations which offer QUOTED_STRING_0 cuisine , with description equal to QUOTED_STRING_1	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_0 => notify
