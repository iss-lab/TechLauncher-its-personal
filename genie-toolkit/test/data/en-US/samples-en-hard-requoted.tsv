RPS5000099412-3	tweet QUOTED_STRING_0 when USERNAME_0 pushes to QUOTED_STRING_1 on github	monitor ( ( @com.github.get_commit param:repo_name:Entity(tt:path_name) = QUOTED_STRING_1 ) filter param:user:Entity(tt:username) == USERNAME_0 ) => @com.twitter.post param:status:String = QUOTED_STRING_0
RPS5000099412-0	searching restaurant in LOCATION_0 having description contain QUOTED_STRING_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == LOCATION_0 => notify
RPS5000099412-1	what are restaurant with their summary containing QUOTED_STRING_0 but not QUOTED_STRING_1 and QUOTED_STRING_2 in the served cuisine ?	now => ( @org.schema.Restaurant.Restaurant ) filter not param:description:String =~ QUOTED_STRING_1 and param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_2 => notify
RS4000002476-0	what reviews get either QUOTED_STRING_0 or QUOTED_STRING_1 in its description	now => ( @org.schema.Restaurant.Review ) filter param:description:String =~ QUOTED_STRING_0 or param:description:String =~ QUOTED_STRING_1 => notify
RRS6000289222-0-0	QUOTED_STRING_0 QUOTED_STRING_1 QUOTED_STRING_2 have 0 or lower review count and summary equal to which	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 0 and param:description:String =~ QUOTED_STRING_0 and param:name:String =~ QUOTED_STRING_2 and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
RRS6000402002-0-0	GENERIC_ENTITY_org.schema.Restaurant:Restaurant_0	now => ( @org.schema.Restaurant.Restaurant ) filter param:id:Entity(org.schema.Restaurant:Restaurant) == GENERIC_ENTITY_org.schema.Restaurant:Restaurant_0 => notify
RRP199-0-0	NUMBER_0 restaurants with inspecting counting of under one i would like the zip code	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
RR199-0-0	NUMBER_0 restaurants with review count of under one i would like the zip code	now => [ param:address.postalCode:String ] of ( ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.reviewCount:Number <= 1 ) => notify
RR236-44-0	QUOTED_STRING_0 QUOTED_STRING_1 food restaurant with which in the description gets the highest rating ?	now => ( sort param:aggregateRating.ratingValue:Number desc of ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:servesCuisine:String =~ QUOTED_STRING_1 ) ) [ 1 ] => notify
RRS7000492792-0-0	QUOTED_STRING_0 QUOTED_STRING_1 having summary equal to get which serves the QUOTED_STRING_2 food 's reviews	now => ( ( ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:name:String =~ QUOTED_STRING_1 and param:servesCuisine:String =~ QUOTED_STRING_2 ) join ( @org.schema.Restaurant.Review ) ) filter param:id:Entity(org.schema.Restaurant:Review) in_array param:review:Array(Entity(org.schema.Restaurant:Review)) => notify
RRPS7000446847-0-0	QUOTED_STRING_0 QUOTED_STRING_1 restaurant near here with get in the descriptions	now => ( @org.schema.Restaurant.Restaurant ) filter param:description:String =~ QUOTED_STRING_0 and param:geo:Location == location:current_location and param:servesCuisine:String =~ QUOTED_STRING_1 => notify
RRS5000175344-0-0	QUOTED_STRING_0 are QUOTED_STRING_1 rated a 1 star with summary being what .	now => ( @org.schema.Restaurant.Restaurant ) filter param:aggregateRating.ratingValue:Number == 1 and param:description:String =~ QUOTED_STRING_0 and param:name:String =~ QUOTED_STRING_1 => notify
DLG1	no i don't want food places having price range equal to expensive and QUOTED_STRING_0 as type of cuisine .	$dialogue @org.thingpedia.dialogue.transaction.execute ; now => ( @uk.ac.cam.multiwoz.Restaurant.Restaurant ) filter not param:price_range == enum:expensive or not param:food =~ QUOTED_STRING_0 and param:food =~ QUOTED_STRING_0 and true param:area => notify ; now => @uk.ac.cam.multiwoz.Restaurant.make_reservation param:book_day = enum:thursday ;
FOO1	restaurants in LOCATION_0	now => @com.yelp.restaurant filter param:geo == LOCATION_0 => notify
FOO2	tweets by USERNAME_0	now => @com.twitter.search filter param:author == USERNAME_0 => notify
