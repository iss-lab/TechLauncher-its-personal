CS2006978774	now => ( @com.stanford.events.get_events_list ) filter param:pubDate:Date >= start_of unit:day => @com.spotify.play_playlist on param:toPlay:String = param:title:String	do it automatically when i create a new file on onedrive .	( monitor ( @com.live.onedrive.list_files ) on new param:file_id:Entity(com.live.onedrive:file_id) ) => ( ( @com.stanford.events.get_events_list ) filter param:pubDate:Date >= start_of unit:day ) => @com.spotify.play_playlist on param:toPlay:String = param:title:String
CS2000214587	now => aggregate count of ( ( @com.google.contacts.get_contacts ) filter param:phone_number:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => notify	show me USERNAME_0 instead	now => aggregate count of ( ( @com.google.contacts.get_contacts ) filter param:phone_number:Entity(tt:phone_number) == USERNAME_0 ) => notify
CS4002656985	policy param:source:Entity(tt:contact) == USERNAME_0 : @com.huffingtonpost.frontpage => notify	and only when the update time is not DURATION_0 after tomorrow	policy param:source:Entity(tt:contact) == USERNAME_0 : @com.huffingtonpost.frontpage filter not param:updated:Date == end_of unit:day + DURATION_0 => notify
CS2008520914	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => @org.thingpedia.friendhub.polls.add_choice param:poll_id:Number = 1	do this only if i am not at work	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter @org.thingpedia.builtin.thingengine.builtin.get_gps { not param:location:Location == location:work } ) => @org.thingpedia.friendhub.polls.add_choice param:poll_id:Number = 1
CS1008406611	now => ( ( @cake.NewYorkTimesStyle.get_style_page ) filter param:updated:Date >= start_of unit:day ) join ( @org.upcdatabase.get ) on param:query:String = param:title:String => notify	do it once an hour	( timer base = now , interval = 1 unit:h ) => ( ( ( @cake.NewYorkTimesStyle.get_style_page ) filter param:updated:Date >= start_of unit:day ) join ( @org.upcdatabase.get ) on param:query:String = param:title:String ) => notify
CS2001033737	now => ( @com.poemist.get ) join ( @com.spotify.get_loudness ) on param:song:String = param:poem:String => notify	do this when i move	( monitor ( @org.thingpedia.builtin.thingengine.builtin.get_gps ) ) => ( ( @com.poemist.get ) join ( @com.spotify.get_loudness ) on param:song:String = param:poem:String ) => notify
CS4004483068	now => ( ( @com.nytimes.get_front_page ) filter param:updated:Date >= start_of unit:day ) join ( @com.spotify.get_instrumentalness ) on param:song:String = param:description:String => notify	send this to me anytime latest ted talks with QUOTED_STRING_0 in the headline update .	( monitor ( ( @com.ted.talks ) filter param:title:String =~ QUOTED_STRING_0 ) ) => ( ( ( @com.nytimes.get_front_page ) filter param:updated:Date >= start_of unit:day ) join ( @com.spotify.get_instrumentalness ) on param:song:String = param:description:String ) => notify
CS2005585037	now => ( @com.reddit.frontpage.get ) filter param:updated:Date >= start_of unit:h => @org.thingpedia.builtin.thingengine.builtin.open_url on param:url:Entity(tt:url) = param:link:Entity(tt:url)	do it when the time of some event changes on my icalendar .	( monitor ( @org.thingpedia.icalendar.list_events ) on new [ param:start_date:Date , param:end_date:Date ] ) => ( ( @com.reddit.frontpage.get ) filter param:updated:Date >= start_of unit:h ) => @org.thingpedia.builtin.thingengine.builtin.open_url on param:url:Entity(tt:url) = param:link:Entity(tt:url)
CS2005761066	now => ( @bhurke.siddhesh.nytimes.get_front_page ) filter param:updated:Date >= start_of unit:day => @com.slack.updateChannelTopic param:channel:Entity(tt:hashtag) = HASHTAG_0 on param:topic:String = param:title:String	do it automatically when the new york times publishes a new article	( monitor ( @bhurke.siddhesh.nytimes.get_front_page ) ) => ( ( @bhurke.siddhesh.nytimes.get_front_page ) filter param:updated:Date >= start_of unit:day ) => @com.slack.updateChannelTopic param:channel:Entity(tt:hashtag) = HASHTAG_0 on param:topic:String = param:title:String
CS2005024696	now => ( ( @com.gmail.inbox ) filter param:date:Date >= start_of unit:day ) join ( @com.youtube.search_channel ) on param:query:String = param:subject:String => notify	send this to me when something moves in front of my security camera	( monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) ) => ( ( ( @com.gmail.inbox ) filter param:date:Date >= start_of unit:day ) join ( @com.youtube.search_channel ) on param:query:String = param:subject:String ) => notify
